/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/web-demuxer@3.0.2/dist/web-demuxer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var l=Object.defineProperty,Z=(Z,b,c)=>(((Z,b,c)=>{b in Z?l(Z,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):Z[b]=c})(Z,"symbol"!=typeof b?b+"":b,c),c),b=(l=>(l[l.AVMEDIA_TYPE_UNKNOWN=-1]="AVMEDIA_TYPE_UNKNOWN",l[l.AVMEDIA_TYPE_VIDEO=0]="AVMEDIA_TYPE_VIDEO",l[l.AVMEDIA_TYPE_AUDIO=1]="AVMEDIA_TYPE_AUDIO",l[l.AVMEDIA_TYPE_DATA=2]="AVMEDIA_TYPE_DATA",l[l.AVMEDIA_TYPE_SUBTITLE=3]="AVMEDIA_TYPE_SUBTITLE",l[l.AVMEDIA_TYPE_ATTACHMENT=4]="AVMEDIA_TYPE_ATTACHMENT",l[l.AVMEDIA_TYPE_NB=5]="AVMEDIA_TYPE_NB",l))(b||{}),c=(l=>(l[l.AV_LOG_QUIET=-8]="AV_LOG_QUIET",l[l.AV_LOG_PANIC=0]="AV_LOG_PANIC",l[l.AV_LOG_FATAL=8]="AV_LOG_FATAL",l[l.AV_LOG_ERROR=16]="AV_LOG_ERROR",l[l.AV_LOG_WARNING=24]="AV_LOG_WARNING",l[l.AV_LOG_INFO=32]="AV_LOG_INFO",l[l.AV_LOG_VERBOSE=40]="AV_LOG_VERBOSE",l[l.AV_LOG_DEBUG=48]="AV_LOG_DEBUG",l[l.AV_LOG_TRACE=56]="AV_LOG_TRACE",l))(c||{}),d=(l=>(l[l.AVSEEK_FLAG_BACKWARD=1]="AVSEEK_FLAG_BACKWARD",l[l.AVSEEK_FLAG_BYTE=2]="AVSEEK_FLAG_BYTE",l[l.AVSEEK_FLAG_ANY=4]="AVSEEK_FLAG_ANY",l[l.AVSEEK_FLAG_FRAME=8]="AVSEEK_FLAG_FRAME",l))(d||{}),m=(l=>(l.WasmWorkerLoaded="WasmWorkerLoaded",l.WASMRuntimeInitialized="WASMRuntimeInitialized",l.LoadWASM="LoadWASM",l.GetAVPacket="GetAVPacket",l.GetAVPackets="GetAVPackets",l.GetAVStream="GetAVStream",l.GetAVStreams="GetAVStreams",l.GetMediaInfo="GetMediaInfo",l.ReadAVPacket="ReadAVPacket",l.AVPacketStream="AVPacketStream",l.ReadNextAVPacket="ReadNextAVPacket",l.StopReadAVPacket="StopReadAVPacket",l.SetAVLogLevel="SetAVLogLevel",l))(m||{});const G="video",X="audio",y="subtitle",W=G,V={[G]:b.AVMEDIA_TYPE_VIDEO,[X]:b.AVMEDIA_TYPE_AUDIO,[y]:b.AVMEDIA_TYPE_SUBTITLE},i="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciAkZT0oaz0+KGtbay5BVk1FRElBX1RZUEVfVU5LTk9XTj0tMV09IkFWTUVESUFfVFlQRV9VTktOT1dOIixrW2suQVZNRURJQV9UWVBFX1ZJREVPPTBdPSJBVk1FRElBX1RZUEVfVklERU8iLGtbay5BVk1FRElBX1RZUEVfQVVESU89MV09IkFWTUVESUFfVFlQRV9BVURJTyIsa1trLkFWTUVESUFfVFlQRV9EQVRBPTJdPSJBVk1FRElBX1RZUEVfREFUQSIsa1trLkFWTUVESUFfVFlQRV9TVUJUSVRMRT0zXT0iQVZNRURJQV9UWVBFX1NVQlRJVExFIixrW2suQVZNRURJQV9UWVBFX0FUVEFDSE1FTlQ9NF09IkFWTUVESUFfVFlQRV9BVFRBQ0hNRU5UIixrW2suQVZNRURJQV9UWVBFX05CPTVdPSJBVk1FRElBX1RZUEVfTkIiLGspKSgkZXx8e30pLFg9KGs9PihrLldhc21Xb3JrZXJMb2FkZWQ9Ildhc21Xb3JrZXJMb2FkZWQiLGsuV0FTTVJ1bnRpbWVJbml0aWFsaXplZD0iV0FTTVJ1bnRpbWVJbml0aWFsaXplZCIsay5Mb2FkV0FTTT0iTG9hZFdBU00iLGsuR2V0QVZQYWNrZXQ9IkdldEFWUGFja2V0IixrLkdldEFWUGFja2V0cz0iR2V0QVZQYWNrZXRzIixrLkdldEFWU3RyZWFtPSJHZXRBVlN0cmVhbSIsay5HZXRBVlN0cmVhbXM9IkdldEFWU3RyZWFtcyIsay5HZXRNZWRpYUluZm89IkdldE1lZGlhSW5mbyIsay5SZWFkQVZQYWNrZXQ9IlJlYWRBVlBhY2tldCIsay5BVlBhY2tldFN0cmVhbT0iQVZQYWNrZXRTdHJlYW0iLGsuUmVhZE5leHRBVlBhY2tldD0iUmVhZE5leHRBVlBhY2tldCIsay5TdG9wUmVhZEFWUGFja2V0PSJTdG9wUmVhZEFWUGFja2V0IixrLlNldEFWTG9nTGV2ZWw9IlNldEFWTG9nTGV2ZWwiLGspKShYfHx7fSk7InZpZGVvIisiIiwkZS5BVk1FRElBX1RZUEVfVklERU8sImF1ZGlvIisiIiwkZS5BVk1FRElBX1RZUEVfQVVESU8sInN1YnRpdGxlIisiIiwkZS5BVk1FRElBX1RZUEVfU1VCVElUTEU7dmFyIGd0PSgoKT0+e3ZhciBrPXNlbGYubG9jYXRpb24uaHJlZjtyZXR1cm4gZnVuY3Rpb24oTz17fSl7dmFyICQsdT1PYmplY3QuYXNzaWduKHt9LE8pLGosVyxpZT1uZXcgUHJvbWlzZSgoZSxyKT0+e2o9ZSxXPXJ9KSxvZT0hMCxUZT1PYmplY3QuYXNzaWduKHt9LHUpLGdyPSIuL3RoaXMucHJvZ3JhbSIsWGU9KGUscik9Pnt0aHJvdyByfSxLPSIiO2Z1bmN0aW9uIFN0KGUpe3JldHVybiB1LmxvY2F0ZUZpbGU/dS5sb2NhdGVGaWxlKGUsSyk6SytlfXZhciBLZSx3cixKZTtLPXNlbGYubG9jYXRpb24uaHJlZixrJiYoSz1rKSxLLnN0YXJ0c1dpdGgoImJsb2I6Iik/Sz0iIjpLPUsuc3Vic3RyKDAsSy5yZXBsYWNlKC9bPyNdLiovLCIiKS5sYXN0SW5kZXhPZigiLyIpKzEpLEtlPWU9Pnt2YXIgcj1uZXcgWE1MSHR0cFJlcXVlc3Q7cmV0dXJuIHIub3BlbigiR0VUIixlLCExKSxyLnNlbmQobnVsbCksci5yZXNwb25zZVRleHR9LEplPWU9Pnt2YXIgcj1uZXcgWE1MSHR0cFJlcXVlc3Q7cmV0dXJuIHIub3BlbigiR0VUIixlLCExKSxyLnJlc3BvbnNlVHlwZT0iYXJyYXlidWZmZXIiLHIuc2VuZChudWxsKSxuZXcgVWludDhBcnJheShyLnJlc3BvbnNlKX0sd3I9KGUscix0KT0+e3ZhciBuPW5ldyBYTUxIdHRwUmVxdWVzdDtuLm9wZW4oIkdFVCIsZSwhMCksbi5yZXNwb25zZVR5cGU9ImFycmF5YnVmZmVyIixuLm9ubG9hZD0oKT0+e2lmKG4uc3RhdHVzPT0yMDB8fG4uc3RhdHVzPT0wJiZuLnJlc3BvbnNlKXtyKG4ucmVzcG9uc2UpO3JldHVybn10KCl9LG4ub25lcnJvcj10LG4uc2VuZChudWxsKX07dmFyIFplPXUucHJpbnR8fGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSksbmU9dS5wcmludEVycnx8Y29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUpO09iamVjdC5hc3NpZ24odSxUZSksVGU9bnVsbCx1LmFyZ3VtZW50cyYmdS5hcmd1bWVudHMsdS50aGlzUHJvZ3JhbSYmKGdyPXUudGhpc1Byb2dyYW0pLHUucXVpdCYmKFhlPXUucXVpdCk7dmFyIGdlO3Uud2FzbUJpbmFyeSYmKGdlPXUud2FzbUJpbmFyeSk7dmFyIEZlLHNlPSExLHdlO2Z1bmN0aW9uIEVyKGUscil7ZXx8SihyKX12YXIgTCxOLEcsUmUseSxDLGtyLGJyO2Z1bmN0aW9uIFByKCl7dmFyIGU9RmUuYnVmZmVyO3UuSEVBUDg9TD1uZXcgSW50OEFycmF5KGUpLHUuSEVBUDE2PUc9bmV3IEludDE2QXJyYXkoZSksdS5IRUFQVTg9Tj1uZXcgVWludDhBcnJheShlKSx1LkhFQVBVMTY9UmU9bmV3IFVpbnQxNkFycmF5KGUpLHUuSEVBUDMyPXk9bmV3IEludDMyQXJyYXkoZSksdS5IRUFQVTMyPUM9bmV3IFVpbnQzMkFycmF5KGUpLHUuSEVBUEYzMj1rcj1uZXcgRmxvYXQzMkFycmF5KGUpLHUuSEVBUEY2ND1icj1uZXcgRmxvYXQ2NEFycmF5KGUpfXZhciBDcj1bXSxBcj1bXSxEcj1bXTtmdW5jdGlvbiAkdCgpe2lmKHUucHJlUnVuKWZvcih0eXBlb2YgdS5wcmVSdW49PSJmdW5jdGlvbiImJih1LnByZVJ1bj1bdS5wcmVSdW5dKTt1LnByZVJ1bi5sZW5ndGg7KVJ0KHUucHJlUnVuLnNoaWZ0KCkpO2VyKENyKX1mdW5jdGlvbiBUdCgpeyF1Lm5vRlNJbml0JiYhaS5pbml0LmluaXRpYWxpemVkJiZpLmluaXQoKSxpLmlnbm9yZVBlcm1pc3Npb25zPSExLGVyKEFyKX1mdW5jdGlvbiBGdCgpe2lmKHUucG9zdFJ1bilmb3IodHlwZW9mIHUucG9zdFJ1bj09ImZ1bmN0aW9uIiYmKHUucG9zdFJ1bj1bdS5wb3N0UnVuXSk7dS5wb3N0UnVuLmxlbmd0aDspSXQodS5wb3N0UnVuLnNoaWZ0KCkpO2VyKERyKX1mdW5jdGlvbiBSdChlKXtDci51bnNoaWZ0KGUpfWZ1bmN0aW9uIE10KGUpe0FyLnVuc2hpZnQoZSl9ZnVuY3Rpb24gSXQoZSl7RHIudW5zaGlmdChlKX12YXIgbGU9MCxFZT1udWxsO2Z1bmN0aW9uIHZpKGUpe3JldHVybiBlfWZ1bmN0aW9uIFFlKGUpe3ZhciByO2xlKyssKHI9dS5tb25pdG9yUnVuRGVwZW5kZW5jaWVzKT09bnVsbHx8ci5jYWxsKHUsbGUpfWZ1bmN0aW9uIE1lKGUpe3ZhciB0O2lmKGxlLS0sKHQ9dS5tb25pdG9yUnVuRGVwZW5kZW5jaWVzKT09bnVsbHx8dC5jYWxsKHUsbGUpLGxlPT0wJiZFZSl7dmFyIHI9RWU7RWU9bnVsbCxyKCl9fWZ1bmN0aW9uIEooZSl7dmFyIHQ7KHQ9dS5vbkFib3J0KT09bnVsbHx8dC5jYWxsKHUsZSksZT0iQWJvcnRlZCgiK2UrIikiLG5lKGUpLHNlPSEwLHdlPTEsZSs9Ii4gQnVpbGQgd2l0aCAtc0FTU0VSVElPTlMgZm9yIG1vcmUgaW5mby4iO3ZhciByPW5ldyBXZWJBc3NlbWJseS5SdW50aW1lRXJyb3IoZSk7dGhyb3cgVyhyKSxyfXZhciBPdD0iZGF0YTphcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07YmFzZTY0LCIsU3I9ZT0+ZS5zdGFydHNXaXRoKE90KTtmdW5jdGlvbiBWdCgpe2lmKHUubG9jYXRlRmlsZSl7dmFyIGU9IndlYi1kZW11eGVyLndhc20iO3JldHVybiBTcihlKT9lOlN0KGUpfXJldHVybiBuZXcgVVJMKCJ3ZWItZGVtdXhlci53YXNtIixzZWxmLmxvY2F0aW9uLmhyZWYpLmhyZWZ9dmFyIEllO2Z1bmN0aW9uICRyKGUpe2lmKGU9PUllJiZnZSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoZ2UpO2lmKEplKXJldHVybiBKZShlKTt0aHJvdyJib3RoIGFzeW5jIGFuZCBzeW5jIGZldGNoaW5nIG9mIHRoZSB3YXNtIGZhaWxlZCJ9ZnVuY3Rpb24gTHQoZSl7cmV0dXJuIWdlJiZvZSYmdHlwZW9mIGZldGNoPT0iZnVuY3Rpb24iP2ZldGNoKGUse2NyZWRlbnRpYWxzOiJzYW1lLW9yaWdpbiJ9KS50aGVuKHI9PntpZighci5vayl0aHJvd2BmYWlsZWQgdG8gbG9hZCB3YXNtIGJpbmFyeSBmaWxlIGF0ICcke2V9J2A7cmV0dXJuIHIuYXJyYXlCdWZmZXIoKX0pLmNhdGNoKCgpPT4kcihlKSk6UHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKT0+JHIoZSkpfWZ1bmN0aW9uIFRyKGUscix0KXtyZXR1cm4gTHQoZSkudGhlbihuPT5XZWJBc3NlbWJseS5pbnN0YW50aWF0ZShuLHIpKS50aGVuKHQsbj0+e25lKGBmYWlsZWQgdG8gYXN5bmNocm9ub3VzbHkgcHJlcGFyZSB3YXNtOiAke259YCksSihuKX0pfWZ1bmN0aW9uIFV0KGUscix0LG4pe3JldHVybiFlJiZ0eXBlb2YgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGVTdHJlYW1pbmc9PSJmdW5jdGlvbiImJiFTcihyKSYmdHlwZW9mIGZldGNoPT0iZnVuY3Rpb24iP2ZldGNoKHIse2NyZWRlbnRpYWxzOiJzYW1lLW9yaWdpbiJ9KS50aGVuKGE9Pnt2YXIgbz1XZWJBc3NlbWJseS5pbnN0YW50aWF0ZVN0cmVhbWluZyhhLHQpO3JldHVybiBvLnRoZW4obixmdW5jdGlvbihzKXtyZXR1cm4gbmUoYHdhc20gc3RyZWFtaW5nIGNvbXBpbGUgZmFpbGVkOiAke3N9YCksbmUoImZhbGxpbmcgYmFjayB0byBBcnJheUJ1ZmZlciBpbnN0YW50aWF0aW9uIiksVHIocix0LG4pfSl9KTpUcihyLHQsbil9ZnVuY3Rpb24geHQoKXtyZXR1cm57YTpRYX19ZnVuY3Rpb24ganQoKXt2YXIgZT14dCgpO2Z1bmN0aW9uIHIobixhKXtyZXR1cm4gdz1uLmV4cG9ydHMsdz1iLmluc3RydW1lbnRXYXNtRXhwb3J0cyh3KSxGZT13LmZhLFByKCksdy5pYSxNdCh3LmdhKSxNZSgpLHd9UWUoKTtmdW5jdGlvbiB0KG4pe3Iobi5pbnN0YW5jZSl9aWYodS5pbnN0YW50aWF0ZVdhc20pdHJ5e3JldHVybiB1Lmluc3RhbnRpYXRlV2FzbShlLHIpfWNhdGNoKG4pe25lKGBNb2R1bGUuaW5zdGFudGlhdGVXYXNtIGNhbGxiYWNrIGZhaWxlZCB3aXRoIGVycm9yOiAke259YCksVyhuKX1yZXR1cm4gSWV8fChJZT1WdCgpKSxVdChnZSxJZSxlLHQpLmNhdGNoKFcpLHt9fXZhciBnLFM7ZnVuY3Rpb24gRnIoZSl7dGhpcy5uYW1lPSJFeGl0U3RhdHVzIix0aGlzLm1lc3NhZ2U9YFByb2dyYW0gdGVybWluYXRlZCB3aXRoIGV4aXQoJHtlfSlgLHRoaXMuc3RhdHVzPWV9dmFyIGVyPWU9Pntmb3IoO2UubGVuZ3RoPjA7KWUuc2hpZnQoKSh1KX0senQ9dS5ub0V4aXRSdW50aW1lfHwhMCxScj10eXBlb2YgVGV4dERlY29kZXI8InUiP25ldyBUZXh0RGVjb2RlcigidXRmOCIpOnZvaWQgMCxjZT0oZSxyLHQpPT57Zm9yKHZhciBuPXIrdCxhPXI7ZVthXSYmIShhPj1uKTspKythO2lmKGEtcj4xNiYmZS5idWZmZXImJlJyKXJldHVybiBSci5kZWNvZGUoZS5zdWJhcnJheShyLGEpKTtmb3IodmFyIG89IiI7cjxhOyl7dmFyIHM9ZVtyKytdO2lmKCEocyYxMjgpKXtvKz1TdHJpbmcuZnJvbUNoYXJDb2RlKHMpO2NvbnRpbnVlfXZhciBsPWVbcisrXSY2MztpZigocyYyMjQpPT0xOTIpe28rPVN0cmluZy5mcm9tQ2hhckNvZGUoKHMmMzEpPDw2fGwpO2NvbnRpbnVlfXZhciBmPWVbcisrXSY2MztpZigocyYyNDApPT0yMjQ/cz0ocyYxNSk8PDEyfGw8PDZ8ZjpzPShzJjcpPDwxOHxsPDwxMnxmPDw2fGVbcisrXSY2MyxzPDY1NTM2KW8rPVN0cmluZy5mcm9tQ2hhckNvZGUocyk7ZWxzZXt2YXIgZD1zLTY1NTM2O28rPVN0cmluZy5mcm9tQ2hhckNvZGUoNTUyOTZ8ZD4+MTAsNTYzMjB8ZCYxMDIzKX19cmV0dXJuIG99LHVlPShlLHIpPT5lP2NlKE4sZSxyKToiIixOdD0oZSxyLHQsbik9PntKKGBBc3NlcnRpb24gZmFpbGVkOiAke3VlKGUpfSwgYXQ6IGArW3I/dWUocik6InVua25vd24gZmlsZW5hbWUiLHQsbj91ZShuKToidW5rbm93biBmdW5jdGlvbiJdKX07Y2xhc3MgV3R7Y29uc3RydWN0b3Iocil7dGhpcy5leGNQdHI9cix0aGlzLnB0cj1yLTI0fXNldF90eXBlKHIpe0NbdGhpcy5wdHIrND4+Ml09cn1nZXRfdHlwZSgpe3JldHVybiBDW3RoaXMucHRyKzQ+PjJdfXNldF9kZXN0cnVjdG9yKHIpe0NbdGhpcy5wdHIrOD4+Ml09cn1nZXRfZGVzdHJ1Y3Rvcigpe3JldHVybiBDW3RoaXMucHRyKzg+PjJdfXNldF9jYXVnaHQocil7cj1yPzE6MCxMW3RoaXMucHRyKzEyXT1yfWdldF9jYXVnaHQoKXtyZXR1cm4gTFt0aGlzLnB0cisxMl0hPTB9c2V0X3JldGhyb3duKHIpe3I9cj8xOjAsTFt0aGlzLnB0cisxM109cn1nZXRfcmV0aHJvd24oKXtyZXR1cm4gTFt0aGlzLnB0cisxM10hPTB9aW5pdChyLHQpe3RoaXMuc2V0X2FkanVzdGVkX3B0cigwKSx0aGlzLnNldF90eXBlKHIpLHRoaXMuc2V0X2Rlc3RydWN0b3IodCl9c2V0X2FkanVzdGVkX3B0cihyKXtDW3RoaXMucHRyKzE2Pj4yXT1yfWdldF9hZGp1c3RlZF9wdHIoKXtyZXR1cm4gQ1t0aGlzLnB0cisxNj4+Ml19Z2V0X2V4Y2VwdGlvbl9wdHIoKXt2YXIgcj1mdCh0aGlzLmdldF90eXBlKCkpO2lmKHIpcmV0dXJuIENbdGhpcy5leGNQdHI+PjJdO3ZhciB0PXRoaXMuZ2V0X2FkanVzdGVkX3B0cigpO3JldHVybiB0IT09MD90OnRoaXMuZXhjUHRyfX12YXIgTXI9MCxIdD0oZSxyLHQpPT57dmFyIG49bmV3IFd0KGUpO3Rocm93IG4uaW5pdChyLHQpLE1yPWUsTXJ9LFI9e2lzQWJzOmU9PmUuY2hhckF0KDApPT09Ii8iLHNwbGl0UGF0aDplPT57dmFyIHI9L14oXC8/fCkoW1xzXFNdKj8pKCg/OlwuezEsMn18W15cL10rP3wpKFwuW14uXC9dKnwpKSg/OltcL10qKSQvO3JldHVybiByLmV4ZWMoZSkuc2xpY2UoMSl9LG5vcm1hbGl6ZUFycmF5OihlLHIpPT57Zm9yKHZhciB0PTAsbj1lLmxlbmd0aC0xO24+PTA7bi0tKXt2YXIgYT1lW25dO2E9PT0iLiI/ZS5zcGxpY2UobiwxKTphPT09Ii4uIj8oZS5zcGxpY2UobiwxKSx0KyspOnQmJihlLnNwbGljZShuLDEpLHQtLSl9aWYocilmb3IoO3Q7dC0tKWUudW5zaGlmdCgiLi4iKTtyZXR1cm4gZX0sbm9ybWFsaXplOmU9Pnt2YXIgcj1SLmlzQWJzKGUpLHQ9ZS5zdWJzdHIoLTEpPT09Ii8iO3JldHVybiBlPVIubm9ybWFsaXplQXJyYXkoZS5zcGxpdCgiLyIpLmZpbHRlcihuPT4hIW4pLCFyKS5qb2luKCIvIiksIWUmJiFyJiYoZT0iLiIpLGUmJnQmJihlKz0iLyIpLChyPyIvIjoiIikrZX0sZGlybmFtZTplPT57dmFyIHI9Ui5zcGxpdFBhdGgoZSksdD1yWzBdLG49clsxXTtyZXR1cm4hdCYmIW4/Ii4iOihuJiYobj1uLnN1YnN0cigwLG4ubGVuZ3RoLTEpKSx0K24pfSxiYXNlbmFtZTplPT57aWYoZT09PSIvIilyZXR1cm4iLyI7ZT1SLm5vcm1hbGl6ZShlKSxlPWUucmVwbGFjZSgvXC8kLywiIik7dmFyIHI9ZS5sYXN0SW5kZXhPZigiLyIpO3JldHVybiByPT09LTE/ZTplLnN1YnN0cihyKzEpfSxqb2luOiguLi5lKT0+Ui5ub3JtYWxpemUoZS5qb2luKCIvIikpLGpvaW4yOihlLHIpPT5SLm5vcm1hbGl6ZShlKyIvIityKX0sQnQ9KCk9PntpZih0eXBlb2YgY3J5cHRvPT0ib2JqZWN0IiYmdHlwZW9mIGNyeXB0by5nZXRSYW5kb21WYWx1ZXM9PSJmdW5jdGlvbiIpcmV0dXJuIGU9PmNyeXB0by5nZXRSYW5kb21WYWx1ZXMoZSk7SigiaW5pdFJhbmRvbURldmljZSIpfSxJcj1lPT4oSXI9QnQoKSkoZSksWj17cmVzb2x2ZTooLi4uZSk9Pntmb3IodmFyIHI9IiIsdD0hMSxuPWUubGVuZ3RoLTE7bj49LTEmJiF0O24tLSl7dmFyIGE9bj49MD9lW25dOmkuY3dkKCk7aWYodHlwZW9mIGEhPSJzdHJpbmciKXRocm93IG5ldyBUeXBlRXJyb3IoIkFyZ3VtZW50cyB0byBwYXRoLnJlc29sdmUgbXVzdCBiZSBzdHJpbmdzIik7aWYoIWEpcmV0dXJuIiI7cj1hKyIvIityLHQ9Ui5pc0FicyhhKX1yZXR1cm4gcj1SLm5vcm1hbGl6ZUFycmF5KHIuc3BsaXQoIi8iKS5maWx0ZXIobz0+ISFvKSwhdCkuam9pbigiLyIpLCh0PyIvIjoiIikrcnx8Ii4ifSxyZWxhdGl2ZTooZSxyKT0+e2U9Wi5yZXNvbHZlKGUpLnN1YnN0cigxKSxyPVoucmVzb2x2ZShyKS5zdWJzdHIoMSk7ZnVuY3Rpb24gdChkKXtmb3IodmFyIGM9MDtjPGQubGVuZ3RoJiZkW2NdPT09IiI7YysrKTtmb3IodmFyIGg9ZC5sZW5ndGgtMTtoPj0wJiZkW2hdPT09IiI7aC0tKTtyZXR1cm4gYz5oP1tdOmQuc2xpY2UoYyxoLWMrMSl9Zm9yKHZhciBuPXQoZS5zcGxpdCgiLyIpKSxhPXQoci5zcGxpdCgiLyIpKSxvPU1hdGgubWluKG4ubGVuZ3RoLGEubGVuZ3RoKSxzPW8sbD0wO2w8bztsKyspaWYobltsXSE9PWFbbF0pe3M9bDticmVha31mb3IodmFyIGY9W10sbD1zO2w8bi5sZW5ndGg7bCsrKWYucHVzaCgiLi4iKTtyZXR1cm4gZj1mLmNvbmNhdChhLnNsaWNlKHMpKSxmLmpvaW4oIi8iKX19LHJyPVtdLHRyPWU9Pntmb3IodmFyIHI9MCx0PTA7dDxlLmxlbmd0aDsrK3Qpe3ZhciBuPWUuY2hhckNvZGVBdCh0KTtuPD0xMjc/cisrOm48PTIwNDc/cis9MjpuPj01NTI5NiYmbjw9NTczNDM/KHIrPTQsKyt0KTpyKz0zfXJldHVybiByfSxucj0oZSxyLHQsbik9PntpZighKG4+MCkpcmV0dXJuIDA7Zm9yKHZhciBhPXQsbz10K24tMSxzPTA7czxlLmxlbmd0aDsrK3Mpe3ZhciBsPWUuY2hhckNvZGVBdChzKTtpZihsPj01NTI5NiYmbDw9NTczNDMpe3ZhciBmPWUuY2hhckNvZGVBdCgrK3MpO2w9NjU1MzYrKChsJjEwMjMpPDwxMCl8ZiYxMDIzfWlmKGw8PTEyNyl7aWYodD49bylicmVhaztyW3QrK109bH1lbHNlIGlmKGw8PTIwNDcpe2lmKHQrMT49bylicmVhaztyW3QrK109MTkyfGw+PjYsclt0KytdPTEyOHxsJjYzfWVsc2UgaWYobDw9NjU1MzUpe2lmKHQrMj49bylicmVhaztyW3QrK109MjI0fGw+PjEyLHJbdCsrXT0xMjh8bD4+NiY2MyxyW3QrK109MTI4fGwmNjN9ZWxzZXtpZih0KzM+PW8pYnJlYWs7clt0KytdPTI0MHxsPj4xOCxyW3QrK109MTI4fGw+PjEyJjYzLHJbdCsrXT0xMjh8bD4+NiY2MyxyW3QrK109MTI4fGwmNjN9fXJldHVybiByW3RdPTAsdC1hfTtmdW5jdGlvbiBPZShlLHIsdCl7dmFyIG49dHIoZSkrMSxhPW5ldyBBcnJheShuKSxvPW5yKGUsYSwwLGEubGVuZ3RoKTtyZXR1cm4gciYmKGEubGVuZ3RoPW8pLGF9dmFyIFl0PSgpPT57aWYoIXJyLmxlbmd0aCl7dmFyIGU9bnVsbDtpZighZSlyZXR1cm4gbnVsbDtycj1PZShlLCEwKX1yZXR1cm4gcnIuc2hpZnQoKX0sZmU9e3R0eXM6W10saW5pdCgpe30sc2h1dGRvd24oKXt9LHJlZ2lzdGVyKGUscil7ZmUudHR5c1tlXT17aW5wdXQ6W10sb3V0cHV0OltdLG9wczpyfSxpLnJlZ2lzdGVyRGV2aWNlKGUsZmUuc3RyZWFtX29wcyl9LHN0cmVhbV9vcHM6e29wZW4oZSl7dmFyIHI9ZmUudHR5c1tlLm5vZGUucmRldl07aWYoIXIpdGhyb3cgbmV3IGkuRXJybm9FcnJvcig0Myk7ZS50dHk9cixlLnNlZWthYmxlPSExfSxjbG9zZShlKXtlLnR0eS5vcHMuZnN5bmMoZS50dHkpfSxmc3luYyhlKXtlLnR0eS5vcHMuZnN5bmMoZS50dHkpfSxyZWFkKGUscix0LG4sYSl7aWYoIWUudHR5fHwhZS50dHkub3BzLmdldF9jaGFyKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNjApO2Zvcih2YXIgbz0wLHM9MDtzPG47cysrKXt2YXIgbDt0cnl7bD1lLnR0eS5vcHMuZ2V0X2NoYXIoZS50dHkpfWNhdGNoe3Rocm93IG5ldyBpLkVycm5vRXJyb3IoMjkpfWlmKGw9PT12b2lkIDAmJm89PT0wKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNik7aWYobD09bnVsbClicmVhaztvKyssclt0K3NdPWx9cmV0dXJuIG8mJihlLm5vZGUudGltZXN0YW1wPURhdGUubm93KCkpLG99LHdyaXRlKGUscix0LG4sYSl7aWYoIWUudHR5fHwhZS50dHkub3BzLnB1dF9jaGFyKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNjApO3RyeXtmb3IodmFyIG89MDtvPG47bysrKWUudHR5Lm9wcy5wdXRfY2hhcihlLnR0eSxyW3Qrb10pfWNhdGNoe3Rocm93IG5ldyBpLkVycm5vRXJyb3IoMjkpfXJldHVybiBuJiYoZS5ub2RlLnRpbWVzdGFtcD1EYXRlLm5vdygpKSxvfX0sZGVmYXVsdF90dHlfb3BzOntnZXRfY2hhcihlKXtyZXR1cm4gWXQoKX0scHV0X2NoYXIoZSxyKXtyPT09bnVsbHx8cj09PTEwPyhaZShjZShlLm91dHB1dCwwKSksZS5vdXRwdXQ9W10pOnIhPTAmJmUub3V0cHV0LnB1c2gocil9LGZzeW5jKGUpe2Uub3V0cHV0JiZlLm91dHB1dC5sZW5ndGg+MCYmKFplKGNlKGUub3V0cHV0LDApKSxlLm91dHB1dD1bXSl9LGlvY3RsX3RjZ2V0cyhlKXtyZXR1cm57Y19pZmxhZzoyNTg1NixjX29mbGFnOjUsY19jZmxhZzoxOTEsY19sZmxhZzozNTM4NyxjX2NjOlszLDI4LDEyNywyMSw0LDAsMSwwLDE3LDE5LDI2LDAsMTgsMTUsMjMsMjIsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMF19fSxpb2N0bF90Y3NldHMoZSxyLHQpe3JldHVybiAwfSxpb2N0bF90aW9jZ3dpbnN6KGUpe3JldHVyblsyNCw4MF19fSxkZWZhdWx0X3R0eTFfb3BzOntwdXRfY2hhcihlLHIpe3I9PT1udWxsfHxyPT09MTA/KG5lKGNlKGUub3V0cHV0LDApKSxlLm91dHB1dD1bXSk6ciE9MCYmZS5vdXRwdXQucHVzaChyKX0sZnN5bmMoZSl7ZS5vdXRwdXQmJmUub3V0cHV0Lmxlbmd0aD4wJiYobmUoY2UoZS5vdXRwdXQsMCkpLGUub3V0cHV0PVtdKX19fSxPcj1lPT57SigpfSxQPXtvcHNfdGFibGU6bnVsbCxtb3VudChlKXtyZXR1cm4gUC5jcmVhdGVOb2RlKG51bGwsIi8iLDE2ODk1LDApfSxjcmVhdGVOb2RlKGUscix0LG4pe2lmKGkuaXNCbGtkZXYodCl8fGkuaXNGSUZPKHQpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNjMpO1Aub3BzX3RhYmxlfHwoUC5vcHNfdGFibGU9e2Rpcjp7bm9kZTp7Z2V0YXR0cjpQLm5vZGVfb3BzLmdldGF0dHIsc2V0YXR0cjpQLm5vZGVfb3BzLnNldGF0dHIsbG9va3VwOlAubm9kZV9vcHMubG9va3VwLG1rbm9kOlAubm9kZV9vcHMubWtub2QscmVuYW1lOlAubm9kZV9vcHMucmVuYW1lLHVubGluazpQLm5vZGVfb3BzLnVubGluayxybWRpcjpQLm5vZGVfb3BzLnJtZGlyLHJlYWRkaXI6UC5ub2RlX29wcy5yZWFkZGlyLHN5bWxpbms6UC5ub2RlX29wcy5zeW1saW5rfSxzdHJlYW06e2xsc2VlazpQLnN0cmVhbV9vcHMubGxzZWVrfX0sZmlsZTp7bm9kZTp7Z2V0YXR0cjpQLm5vZGVfb3BzLmdldGF0dHIsc2V0YXR0cjpQLm5vZGVfb3BzLnNldGF0dHJ9LHN0cmVhbTp7bGxzZWVrOlAuc3RyZWFtX29wcy5sbHNlZWsscmVhZDpQLnN0cmVhbV9vcHMucmVhZCx3cml0ZTpQLnN0cmVhbV9vcHMud3JpdGUsYWxsb2NhdGU6UC5zdHJlYW1fb3BzLmFsbG9jYXRlLG1tYXA6UC5zdHJlYW1fb3BzLm1tYXAsbXN5bmM6UC5zdHJlYW1fb3BzLm1zeW5jfX0sbGluazp7bm9kZTp7Z2V0YXR0cjpQLm5vZGVfb3BzLmdldGF0dHIsc2V0YXR0cjpQLm5vZGVfb3BzLnNldGF0dHIscmVhZGxpbms6UC5ub2RlX29wcy5yZWFkbGlua30sc3RyZWFtOnt9fSxjaHJkZXY6e25vZGU6e2dldGF0dHI6UC5ub2RlX29wcy5nZXRhdHRyLHNldGF0dHI6UC5ub2RlX29wcy5zZXRhdHRyfSxzdHJlYW06aS5jaHJkZXZfc3RyZWFtX29wc319KTt2YXIgYT1pLmNyZWF0ZU5vZGUoZSxyLHQsbik7cmV0dXJuIGkuaXNEaXIoYS5tb2RlKT8oYS5ub2RlX29wcz1QLm9wc190YWJsZS5kaXIubm9kZSxhLnN0cmVhbV9vcHM9UC5vcHNfdGFibGUuZGlyLnN0cmVhbSxhLmNvbnRlbnRzPXt9KTppLmlzRmlsZShhLm1vZGUpPyhhLm5vZGVfb3BzPVAub3BzX3RhYmxlLmZpbGUubm9kZSxhLnN0cmVhbV9vcHM9UC5vcHNfdGFibGUuZmlsZS5zdHJlYW0sYS51c2VkQnl0ZXM9MCxhLmNvbnRlbnRzPW51bGwpOmkuaXNMaW5rKGEubW9kZSk/KGEubm9kZV9vcHM9UC5vcHNfdGFibGUubGluay5ub2RlLGEuc3RyZWFtX29wcz1QLm9wc190YWJsZS5saW5rLnN0cmVhbSk6aS5pc0NocmRldihhLm1vZGUpJiYoYS5ub2RlX29wcz1QLm9wc190YWJsZS5jaHJkZXYubm9kZSxhLnN0cmVhbV9vcHM9UC5vcHNfdGFibGUuY2hyZGV2LnN0cmVhbSksYS50aW1lc3RhbXA9RGF0ZS5ub3coKSxlJiYoZS5jb250ZW50c1tyXT1hLGUudGltZXN0YW1wPWEudGltZXN0YW1wKSxhfSxnZXRGaWxlRGF0YUFzVHlwZWRBcnJheShlKXtyZXR1cm4gZS5jb250ZW50cz9lLmNvbnRlbnRzLnN1YmFycmF5P2UuY29udGVudHMuc3ViYXJyYXkoMCxlLnVzZWRCeXRlcyk6bmV3IFVpbnQ4QXJyYXkoZS5jb250ZW50cyk6bmV3IFVpbnQ4QXJyYXkoMCl9LGV4cGFuZEZpbGVTdG9yYWdlKGUscil7dmFyIHQ9ZS5jb250ZW50cz9lLmNvbnRlbnRzLmxlbmd0aDowO2lmKCEodD49cikpe3ZhciBuPTEwMjQqMTAyNDtyPU1hdGgubWF4KHIsdCoodDxuPzI6MS4xMjUpPj4+MCksdCE9MCYmKHI9TWF0aC5tYXgociwyNTYpKTt2YXIgYT1lLmNvbnRlbnRzO2UuY29udGVudHM9bmV3IFVpbnQ4QXJyYXkociksZS51c2VkQnl0ZXM+MCYmZS5jb250ZW50cy5zZXQoYS5zdWJhcnJheSgwLGUudXNlZEJ5dGVzKSwwKX19LHJlc2l6ZUZpbGVTdG9yYWdlKGUscil7aWYoZS51c2VkQnl0ZXMhPXIpaWYocj09MCllLmNvbnRlbnRzPW51bGwsZS51c2VkQnl0ZXM9MDtlbHNle3ZhciB0PWUuY29udGVudHM7ZS5jb250ZW50cz1uZXcgVWludDhBcnJheShyKSx0JiZlLmNvbnRlbnRzLnNldCh0LnN1YmFycmF5KDAsTWF0aC5taW4ocixlLnVzZWRCeXRlcykpKSxlLnVzZWRCeXRlcz1yfX0sbm9kZV9vcHM6e2dldGF0dHIoZSl7dmFyIHI9e307cmV0dXJuIHIuZGV2PWkuaXNDaHJkZXYoZS5tb2RlKT9lLmlkOjEsci5pbm89ZS5pZCxyLm1vZGU9ZS5tb2RlLHIubmxpbms9MSxyLnVpZD0wLHIuZ2lkPTAsci5yZGV2PWUucmRldixpLmlzRGlyKGUubW9kZSk/ci5zaXplPTQwOTY6aS5pc0ZpbGUoZS5tb2RlKT9yLnNpemU9ZS51c2VkQnl0ZXM6aS5pc0xpbmsoZS5tb2RlKT9yLnNpemU9ZS5saW5rLmxlbmd0aDpyLnNpemU9MCxyLmF0aW1lPW5ldyBEYXRlKGUudGltZXN0YW1wKSxyLm10aW1lPW5ldyBEYXRlKGUudGltZXN0YW1wKSxyLmN0aW1lPW5ldyBEYXRlKGUudGltZXN0YW1wKSxyLmJsa3NpemU9NDA5NixyLmJsb2Nrcz1NYXRoLmNlaWwoci5zaXplL3IuYmxrc2l6ZSkscn0sc2V0YXR0cihlLHIpe3IubW9kZSE9PXZvaWQgMCYmKGUubW9kZT1yLm1vZGUpLHIudGltZXN0YW1wIT09dm9pZCAwJiYoZS50aW1lc3RhbXA9ci50aW1lc3RhbXApLHIuc2l6ZSE9PXZvaWQgMCYmUC5yZXNpemVGaWxlU3RvcmFnZShlLHIuc2l6ZSl9LGxvb2t1cChlLHIpe3Rocm93IGkuZ2VuZXJpY0Vycm9yc1s0NF19LG1rbm9kKGUscix0LG4pe3JldHVybiBQLmNyZWF0ZU5vZGUoZSxyLHQsbil9LHJlbmFtZShlLHIsdCl7aWYoaS5pc0RpcihlLm1vZGUpKXt2YXIgbjt0cnl7bj1pLmxvb2t1cE5vZGUocix0KX1jYXRjaHt9aWYobilmb3IodmFyIGEgaW4gbi5jb250ZW50cyl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDU1KX1kZWxldGUgZS5wYXJlbnQuY29udGVudHNbZS5uYW1lXSxlLnBhcmVudC50aW1lc3RhbXA9RGF0ZS5ub3coKSxlLm5hbWU9dCxyLmNvbnRlbnRzW3RdPWUsci50aW1lc3RhbXA9ZS5wYXJlbnQudGltZXN0YW1wLGUucGFyZW50PXJ9LHVubGluayhlLHIpe2RlbGV0ZSBlLmNvbnRlbnRzW3JdLGUudGltZXN0YW1wPURhdGUubm93KCl9LHJtZGlyKGUscil7dmFyIHQ9aS5sb29rdXBOb2RlKGUscik7Zm9yKHZhciBuIGluIHQuY29udGVudHMpdGhyb3cgbmV3IGkuRXJybm9FcnJvcig1NSk7ZGVsZXRlIGUuY29udGVudHNbcl0sZS50aW1lc3RhbXA9RGF0ZS5ub3coKX0scmVhZGRpcihlKXt2YXIgcj1bIi4iLCIuLiJdO2Zvcih2YXIgdCBvZiBPYmplY3Qua2V5cyhlLmNvbnRlbnRzKSlyLnB1c2godCk7cmV0dXJuIHJ9LHN5bWxpbmsoZSxyLHQpe3ZhciBuPVAuY3JlYXRlTm9kZShlLHIsNDE0NzEsMCk7cmV0dXJuIG4ubGluaz10LG59LHJlYWRsaW5rKGUpe2lmKCFpLmlzTGluayhlLm1vZGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoMjgpO3JldHVybiBlLmxpbmt9fSxzdHJlYW1fb3BzOntyZWFkKGUscix0LG4sYSl7dmFyIG89ZS5ub2RlLmNvbnRlbnRzO2lmKGE+PWUubm9kZS51c2VkQnl0ZXMpcmV0dXJuIDA7dmFyIHM9TWF0aC5taW4oZS5ub2RlLnVzZWRCeXRlcy1hLG4pO2lmKHM+OCYmby5zdWJhcnJheSlyLnNldChvLnN1YmFycmF5KGEsYStzKSx0KTtlbHNlIGZvcih2YXIgbD0wO2w8cztsKyspclt0K2xdPW9bYStsXTtyZXR1cm4gc30sd3JpdGUoZSxyLHQsbixhLG8pe2lmKHIuYnVmZmVyPT09TC5idWZmZXImJihvPSExKSwhbilyZXR1cm4gMDt2YXIgcz1lLm5vZGU7aWYocy50aW1lc3RhbXA9RGF0ZS5ub3coKSxyLnN1YmFycmF5JiYoIXMuY29udGVudHN8fHMuY29udGVudHMuc3ViYXJyYXkpKXtpZihvKXJldHVybiBzLmNvbnRlbnRzPXIuc3ViYXJyYXkodCx0K24pLHMudXNlZEJ5dGVzPW4sbjtpZihzLnVzZWRCeXRlcz09PTAmJmE9PT0wKXJldHVybiBzLmNvbnRlbnRzPXIuc2xpY2UodCx0K24pLHMudXNlZEJ5dGVzPW4sbjtpZihhK248PXMudXNlZEJ5dGVzKXJldHVybiBzLmNvbnRlbnRzLnNldChyLnN1YmFycmF5KHQsdCtuKSxhKSxufWlmKFAuZXhwYW5kRmlsZVN0b3JhZ2UocyxhK24pLHMuY29udGVudHMuc3ViYXJyYXkmJnIuc3ViYXJyYXkpcy5jb250ZW50cy5zZXQoci5zdWJhcnJheSh0LHQrbiksYSk7ZWxzZSBmb3IodmFyIGw9MDtsPG47bCsrKXMuY29udGVudHNbYStsXT1yW3QrbF07cmV0dXJuIHMudXNlZEJ5dGVzPU1hdGgubWF4KHMudXNlZEJ5dGVzLGErbiksbn0sbGxzZWVrKGUscix0KXt2YXIgbj1yO2lmKHQ9PT0xP24rPWUucG9zaXRpb246dD09PTImJmkuaXNGaWxlKGUubm9kZS5tb2RlKSYmKG4rPWUubm9kZS51c2VkQnl0ZXMpLG48MCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTtyZXR1cm4gbn0sYWxsb2NhdGUoZSxyLHQpe1AuZXhwYW5kRmlsZVN0b3JhZ2UoZS5ub2RlLHIrdCksZS5ub2RlLnVzZWRCeXRlcz1NYXRoLm1heChlLm5vZGUudXNlZEJ5dGVzLHIrdCl9LG1tYXAoZSxyLHQsbixhKXtpZighaS5pc0ZpbGUoZS5ub2RlLm1vZGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNDMpO3ZhciBvLHMsbD1lLm5vZGUuY29udGVudHM7aWYoIShhJjIpJiZsLmJ1ZmZlcj09PUwuYnVmZmVyKXM9ITEsbz1sLmJ5dGVPZmZzZXQ7ZWxzZXtpZigodD4wfHx0K3I8bC5sZW5ndGgpJiYobC5zdWJhcnJheT9sPWwuc3ViYXJyYXkodCx0K3IpOmw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobCx0LHQrcikpLHM9ITAsbz1PcigpLCFvKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNDgpO0wuc2V0KGwsbyl9cmV0dXJue3B0cjpvLGFsbG9jYXRlZDpzfX0sbXN5bmMoZSxyLHQsbixhKXtyZXR1cm4gUC5zdHJlYW1fb3BzLndyaXRlKGUsciwwLG4sdCwhMSksMH19fSxHdD0oZSxyLHQsbik9Pnt2YXIgYT1gYWwgJHtlfWA7d3IoZSxvPT57cihuZXcgVWludDhBcnJheShvKSksYSYmTWUoKX0sbz0+e2lmKHQpdCgpO2Vsc2UgdGhyb3dgTG9hZGluZyBkYXRhIGZpbGUgIiR7ZX0iIGZhaWxlZC5gfSksYSYmUWUoKX0scXQ9KGUscix0LG4sYSxvKT0+e2kuY3JlYXRlRGF0YUZpbGUoZSxyLHQsbixhLG8pfSxYdD11LnByZWxvYWRQbHVnaW5zfHxbXSxLdD0oZSxyLHQsbik9Pnt0eXBlb2YgQnJvd3NlcjwidSImJkJyb3dzZXIuaW5pdCgpO3ZhciBhPSExO3JldHVybiBYdC5mb3JFYWNoKG89PnthfHxvLmNhbkhhbmRsZShyKSYmKG8uaGFuZGxlKGUscix0LG4pLGE9ITApfSksYX0sSnQ9KGUscix0LG4sYSxvLHMsbCxmLGQpPT57dmFyIGM9cj9aLnJlc29sdmUoUi5qb2luMihlLHIpKTplO2Z1bmN0aW9uIGgobSl7ZnVuY3Rpb24gcChFKXtkPT1udWxsfHxkKCksbHx8cXQoZSxyLEUsbixhLGYpLG89PW51bGx8fG8oKSxNZSgpfUt0KG0sYyxwLCgpPT57cz09bnVsbHx8cygpLE1lKCl9KXx8cChtKX1RZSgpLHR5cGVvZiB0PT0ic3RyaW5nIj9HdCh0LGgscyk6aCh0KX0sWnQ9ZT0+e3ZhciByPXtyOjAsInIrIjoyLHc6NTc3LCJ3KyI6NTc4LGE6MTA4OSwiYSsiOjEwOTB9LHQ9cltlXTtpZih0eXBlb2YgdD4idSIpdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGZpbGUgb3BlbiBtb2RlOiAke2V9YCk7cmV0dXJuIHR9LGFyPShlLHIpPT57dmFyIHQ9MDtyZXR1cm4gZSYmKHR8PTM2NSksciYmKHR8PTE0NiksdH0seD17RElSX01PREU6MTY4OTUsRklMRV9NT0RFOjMzMjc5LHJlYWRlcjpudWxsLG1vdW50KGUpe0VyKG9lKSx4LnJlYWRlcnx8KHgucmVhZGVyPW5ldyBGaWxlUmVhZGVyU3luYyk7dmFyIHI9eC5jcmVhdGVOb2RlKG51bGwsIi8iLHguRElSX01PREUsMCksdD17fTtmdW5jdGlvbiBuKG8pe2Zvcih2YXIgcz1vLnNwbGl0KCIvIiksbD1yLGY9MDtmPHMubGVuZ3RoLTE7ZisrKXt2YXIgZD1zLnNsaWNlKDAsZisxKS5qb2luKCIvIik7dFtkXXx8KHRbZF09eC5jcmVhdGVOb2RlKGwsc1tmXSx4LkRJUl9NT0RFLDApKSxsPXRbZF19cmV0dXJuIGx9ZnVuY3Rpb24gYShvKXt2YXIgcz1vLnNwbGl0KCIvIik7cmV0dXJuIHNbcy5sZW5ndGgtMV19cmV0dXJuIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoZS5vcHRzLmZpbGVzfHxbXSxmdW5jdGlvbihvKXt4LmNyZWF0ZU5vZGUobihvLm5hbWUpLGEoby5uYW1lKSx4LkZJTEVfTU9ERSwwLG8sby5sYXN0TW9kaWZpZWREYXRlKX0pLChlLm9wdHMuYmxvYnN8fFtdKS5mb3JFYWNoKGZ1bmN0aW9uKG8pe3guY3JlYXRlTm9kZShuKG8ubmFtZSksYShvLm5hbWUpLHguRklMRV9NT0RFLDAsby5kYXRhKX0pLChlLm9wdHMucGFja2FnZXN8fFtdKS5mb3JFYWNoKGZ1bmN0aW9uKG8pe28ubWV0YWRhdGEuZmlsZXMuZm9yRWFjaChmdW5jdGlvbihzKXt2YXIgbD1zLmZpbGVuYW1lLnN1YnN0cigxKTt4LmNyZWF0ZU5vZGUobihsKSxhKGwpLHguRklMRV9NT0RFLDAsby5ibG9iLnNsaWNlKHMuc3RhcnQscy5lbmQpKX0pfSkscn0sY3JlYXRlTm9kZShlLHIsdCxuLGEsbyl7dmFyIHM9aS5jcmVhdGVOb2RlKGUscix0KTtyZXR1cm4gcy5tb2RlPXQscy5ub2RlX29wcz14Lm5vZGVfb3BzLHMuc3RyZWFtX29wcz14LnN0cmVhbV9vcHMscy50aW1lc3RhbXA9KG98fG5ldyBEYXRlKS5nZXRUaW1lKCksRXIoeC5GSUxFX01PREUhPT14LkRJUl9NT0RFKSx0PT09eC5GSUxFX01PREU/KHMuc2l6ZT1hLnNpemUscy5jb250ZW50cz1hKToocy5zaXplPTQwOTYscy5jb250ZW50cz17fSksZSYmKGUuY29udGVudHNbcl09cyksc30sbm9kZV9vcHM6e2dldGF0dHIoZSl7cmV0dXJue2RldjoxLGlubzplLmlkLG1vZGU6ZS5tb2RlLG5saW5rOjEsdWlkOjAsZ2lkOjAscmRldjowLHNpemU6ZS5zaXplLGF0aW1lOm5ldyBEYXRlKGUudGltZXN0YW1wKSxtdGltZTpuZXcgRGF0ZShlLnRpbWVzdGFtcCksY3RpbWU6bmV3IERhdGUoZS50aW1lc3RhbXApLGJsa3NpemU6NDA5NixibG9ja3M6TWF0aC5jZWlsKGUuc2l6ZS80MDk2KX19LHNldGF0dHIoZSxyKXtyLm1vZGUhPT12b2lkIDAmJihlLm1vZGU9ci5tb2RlKSxyLnRpbWVzdGFtcCE9PXZvaWQgMCYmKGUudGltZXN0YW1wPXIudGltZXN0YW1wKX0sbG9va3VwKGUscil7dGhyb3cgbmV3IGkuRXJybm9FcnJvcig0NCl9LG1rbm9kKGUscix0LG4pe3Rocm93IG5ldyBpLkVycm5vRXJyb3IoNjMpfSxyZW5hbWUoZSxyLHQpe3Rocm93IG5ldyBpLkVycm5vRXJyb3IoNjMpfSx1bmxpbmsoZSxyKXt0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKX0scm1kaXIoZSxyKXt0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKX0scmVhZGRpcihlKXt2YXIgcj1bIi4iLCIuLiJdO2Zvcih2YXIgdCBvZiBPYmplY3Qua2V5cyhlLmNvbnRlbnRzKSlyLnB1c2godCk7cmV0dXJuIHJ9LHN5bWxpbmsoZSxyLHQpe3Rocm93IG5ldyBpLkVycm5vRXJyb3IoNjMpfX0sc3RyZWFtX29wczp7cmVhZChlLHIsdCxuLGEpe2lmKGE+PWUubm9kZS5zaXplKXJldHVybiAwO3ZhciBvPWUubm9kZS5jb250ZW50cy5zbGljZShhLGErbikscz14LnJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihvKTtyZXR1cm4gci5zZXQobmV3IFVpbnQ4QXJyYXkocyksdCksby5zaXplfSx3cml0ZShlLHIsdCxuLGEpe3Rocm93IG5ldyBpLkVycm5vRXJyb3IoMjkpfSxsbHNlZWsoZSxyLHQpe3ZhciBuPXI7aWYodD09PTE/bis9ZS5wb3NpdGlvbjp0PT09MiYmaS5pc0ZpbGUoZS5ub2RlLm1vZGUpJiYobis9ZS5ub2RlLnNpemUpLG48MCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTtyZXR1cm4gbn19fSxpPXtyb290Om51bGwsbW91bnRzOltdLGRldmljZXM6e30sc3RyZWFtczpbXSxuZXh0SW5vZGU6MSxuYW1lVGFibGU6bnVsbCxjdXJyZW50UGF0aDoiLyIsaW5pdGlhbGl6ZWQ6ITEsaWdub3JlUGVybWlzc2lvbnM6ITAsRXJybm9FcnJvcjpjbGFzc3tjb25zdHJ1Y3RvcihlKXt0aGlzLm5hbWU9IkVycm5vRXJyb3IiLHRoaXMuZXJybm89ZX19LGdlbmVyaWNFcnJvcnM6e30sZmlsZXN5c3RlbXM6bnVsbCxzeW5jRlNSZXF1ZXN0czowLEZTU3RyZWFtOmNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5zaGFyZWQ9e319Z2V0IG9iamVjdCgpe3JldHVybiB0aGlzLm5vZGV9c2V0IG9iamVjdChlKXt0aGlzLm5vZGU9ZX1nZXQgaXNSZWFkKCl7cmV0dXJuKHRoaXMuZmxhZ3MmMjA5NzE1NSkhPT0xfWdldCBpc1dyaXRlKCl7cmV0dXJuKHRoaXMuZmxhZ3MmMjA5NzE1NSkhPT0wfWdldCBpc0FwcGVuZCgpe3JldHVybiB0aGlzLmZsYWdzJjEwMjR9Z2V0IGZsYWdzKCl7cmV0dXJuIHRoaXMuc2hhcmVkLmZsYWdzfXNldCBmbGFncyhlKXt0aGlzLnNoYXJlZC5mbGFncz1lfWdldCBwb3NpdGlvbigpe3JldHVybiB0aGlzLnNoYXJlZC5wb3NpdGlvbn1zZXQgcG9zaXRpb24oZSl7dGhpcy5zaGFyZWQucG9zaXRpb249ZX19LEZTTm9kZTpjbGFzc3tjb25zdHJ1Y3RvcihlLHIsdCxuKXtlfHwoZT10aGlzKSx0aGlzLnBhcmVudD1lLHRoaXMubW91bnQ9ZS5tb3VudCx0aGlzLm1vdW50ZWQ9bnVsbCx0aGlzLmlkPWkubmV4dElub2RlKyssdGhpcy5uYW1lPXIsdGhpcy5tb2RlPXQsdGhpcy5ub2RlX29wcz17fSx0aGlzLnN0cmVhbV9vcHM9e30sdGhpcy5yZGV2PW4sdGhpcy5yZWFkTW9kZT0zNjUsdGhpcy53cml0ZU1vZGU9MTQ2fWdldCByZWFkKCl7cmV0dXJuKHRoaXMubW9kZSZ0aGlzLnJlYWRNb2RlKT09PXRoaXMucmVhZE1vZGV9c2V0IHJlYWQoZSl7ZT90aGlzLm1vZGV8PXRoaXMucmVhZE1vZGU6dGhpcy5tb2RlJj1+dGhpcy5yZWFkTW9kZX1nZXQgd3JpdGUoKXtyZXR1cm4odGhpcy5tb2RlJnRoaXMud3JpdGVNb2RlKT09PXRoaXMud3JpdGVNb2RlfXNldCB3cml0ZShlKXtlP3RoaXMubW9kZXw9dGhpcy53cml0ZU1vZGU6dGhpcy5tb2RlJj1+dGhpcy53cml0ZU1vZGV9Z2V0IGlzRm9sZGVyKCl7cmV0dXJuIGkuaXNEaXIodGhpcy5tb2RlKX1nZXQgaXNEZXZpY2UoKXtyZXR1cm4gaS5pc0NocmRldih0aGlzLm1vZGUpfX0sbG9va3VwUGF0aChlLHI9e30pe2lmKGU9Wi5yZXNvbHZlKGUpLCFlKXJldHVybntwYXRoOiIiLG5vZGU6bnVsbH07dmFyIHQ9e2ZvbGxvd19tb3VudDohMCxyZWN1cnNlX2NvdW50OjB9O2lmKHI9T2JqZWN0LmFzc2lnbih0LHIpLHIucmVjdXJzZV9jb3VudD44KXRocm93IG5ldyBpLkVycm5vRXJyb3IoMzIpO2Zvcih2YXIgbj1lLnNwbGl0KCIvIikuZmlsdGVyKGg9PiEhaCksYT1pLnJvb3Qsbz0iLyIscz0wO3M8bi5sZW5ndGg7cysrKXt2YXIgbD1zPT09bi5sZW5ndGgtMTtpZihsJiZyLnBhcmVudClicmVhaztpZihhPWkubG9va3VwTm9kZShhLG5bc10pLG89Ui5qb2luMihvLG5bc10pLGkuaXNNb3VudHBvaW50KGEpJiYoIWx8fGwmJnIuZm9sbG93X21vdW50KSYmKGE9YS5tb3VudGVkLnJvb3QpLCFsfHxyLmZvbGxvdylmb3IodmFyIGY9MDtpLmlzTGluayhhLm1vZGUpOyl7dmFyIGQ9aS5yZWFkbGluayhvKTtvPVoucmVzb2x2ZShSLmRpcm5hbWUobyksZCk7dmFyIGM9aS5sb29rdXBQYXRoKG8se3JlY3Vyc2VfY291bnQ6ci5yZWN1cnNlX2NvdW50KzF9KTtpZihhPWMubm9kZSxmKys+NDApdGhyb3cgbmV3IGkuRXJybm9FcnJvcigzMil9fXJldHVybntwYXRoOm8sbm9kZTphfX0sZ2V0UGF0aChlKXtmb3IodmFyIHI7Oyl7aWYoaS5pc1Jvb3QoZSkpe3ZhciB0PWUubW91bnQubW91bnRwb2ludDtyZXR1cm4gcj90W3QubGVuZ3RoLTFdIT09Ii8iP2Ake3R9LyR7cn1gOnQrcjp0fXI9cj9gJHtlLm5hbWV9LyR7cn1gOmUubmFtZSxlPWUucGFyZW50fX0saGFzaE5hbWUoZSxyKXtmb3IodmFyIHQ9MCxuPTA7bjxyLmxlbmd0aDtuKyspdD0odDw8NSktdCtyLmNoYXJDb2RlQXQobil8MDtyZXR1cm4oZSt0Pj4+MCklaS5uYW1lVGFibGUubGVuZ3RofSxoYXNoQWRkTm9kZShlKXt2YXIgcj1pLmhhc2hOYW1lKGUucGFyZW50LmlkLGUubmFtZSk7ZS5uYW1lX25leHQ9aS5uYW1lVGFibGVbcl0saS5uYW1lVGFibGVbcl09ZX0saGFzaFJlbW92ZU5vZGUoZSl7dmFyIHI9aS5oYXNoTmFtZShlLnBhcmVudC5pZCxlLm5hbWUpO2lmKGkubmFtZVRhYmxlW3JdPT09ZSlpLm5hbWVUYWJsZVtyXT1lLm5hbWVfbmV4dDtlbHNlIGZvcih2YXIgdD1pLm5hbWVUYWJsZVtyXTt0Oyl7aWYodC5uYW1lX25leHQ9PT1lKXt0Lm5hbWVfbmV4dD1lLm5hbWVfbmV4dDticmVha310PXQubmFtZV9uZXh0fX0sbG9va3VwTm9kZShlLHIpe3ZhciB0PWkubWF5TG9va3VwKGUpO2lmKHQpdGhyb3cgbmV3IGkuRXJybm9FcnJvcih0KTtmb3IodmFyIG49aS5oYXNoTmFtZShlLmlkLHIpLGE9aS5uYW1lVGFibGVbbl07YTthPWEubmFtZV9uZXh0KXt2YXIgbz1hLm5hbWU7aWYoYS5wYXJlbnQuaWQ9PT1lLmlkJiZvPT09cilyZXR1cm4gYX1yZXR1cm4gaS5sb29rdXAoZSxyKX0sY3JlYXRlTm9kZShlLHIsdCxuKXt2YXIgYT1uZXcgaS5GU05vZGUoZSxyLHQsbik7cmV0dXJuIGkuaGFzaEFkZE5vZGUoYSksYX0sZGVzdHJveU5vZGUoZSl7aS5oYXNoUmVtb3ZlTm9kZShlKX0saXNSb290KGUpe3JldHVybiBlPT09ZS5wYXJlbnR9LGlzTW91bnRwb2ludChlKXtyZXR1cm4hIWUubW91bnRlZH0saXNGaWxlKGUpe3JldHVybihlJjYxNDQwKT09PTMyNzY4fSxpc0RpcihlKXtyZXR1cm4oZSY2MTQ0MCk9PT0xNjM4NH0saXNMaW5rKGUpe3JldHVybihlJjYxNDQwKT09PTQwOTYwfSxpc0NocmRldihlKXtyZXR1cm4oZSY2MTQ0MCk9PT04MTkyfSxpc0Jsa2RldihlKXtyZXR1cm4oZSY2MTQ0MCk9PT0yNDU3Nn0saXNGSUZPKGUpe3JldHVybihlJjYxNDQwKT09PTQwOTZ9LGlzU29ja2V0KGUpe3JldHVybihlJjQ5MTUyKT09PTQ5MTUyfSxmbGFnc1RvUGVybWlzc2lvblN0cmluZyhlKXt2YXIgcj1bInIiLCJ3IiwicnciXVtlJjNdO3JldHVybiBlJjUxMiYmKHIrPSJ3Iikscn0sbm9kZVBlcm1pc3Npb25zKGUscil7cmV0dXJuIGkuaWdub3JlUGVybWlzc2lvbnM/MDpyLmluY2x1ZGVzKCJyIikmJiEoZS5tb2RlJjI5Mil8fHIuaW5jbHVkZXMoInciKSYmIShlLm1vZGUmMTQ2KXx8ci5pbmNsdWRlcygieCIpJiYhKGUubW9kZSY3Myk/MjowfSxtYXlMb29rdXAoZSl7aWYoIWkuaXNEaXIoZS5tb2RlKSlyZXR1cm4gNTQ7dmFyIHI9aS5ub2RlUGVybWlzc2lvbnMoZSwieCIpO3JldHVybiByfHwoZS5ub2RlX29wcy5sb29rdXA/MDoyKX0sbWF5Q3JlYXRlKGUscil7dHJ5e3ZhciB0PWkubG9va3VwTm9kZShlLHIpO3JldHVybiAyMH1jYXRjaHt9cmV0dXJuIGkubm9kZVBlcm1pc3Npb25zKGUsInd4Iil9LG1heURlbGV0ZShlLHIsdCl7dmFyIG47dHJ5e249aS5sb29rdXBOb2RlKGUscil9Y2F0Y2gobyl7cmV0dXJuIG8uZXJybm99dmFyIGE9aS5ub2RlUGVybWlzc2lvbnMoZSwid3giKTtpZihhKXJldHVybiBhO2lmKHQpe2lmKCFpLmlzRGlyKG4ubW9kZSkpcmV0dXJuIDU0O2lmKGkuaXNSb290KG4pfHxpLmdldFBhdGgobik9PT1pLmN3ZCgpKXJldHVybiAxMH1lbHNlIGlmKGkuaXNEaXIobi5tb2RlKSlyZXR1cm4gMzE7cmV0dXJuIDB9LG1heU9wZW4oZSxyKXtyZXR1cm4gZT9pLmlzTGluayhlLm1vZGUpPzMyOmkuaXNEaXIoZS5tb2RlKSYmKGkuZmxhZ3NUb1Blcm1pc3Npb25TdHJpbmcocikhPT0iciJ8fHImNTEyKT8zMTppLm5vZGVQZXJtaXNzaW9ucyhlLGkuZmxhZ3NUb1Blcm1pc3Npb25TdHJpbmcocikpOjQ0fSxNQVhfT1BFTl9GRFM6NDA5NixuZXh0ZmQoKXtmb3IodmFyIGU9MDtlPD1pLk1BWF9PUEVOX0ZEUztlKyspaWYoIWkuc3RyZWFtc1tlXSlyZXR1cm4gZTt0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDMzKX0sZ2V0U3RyZWFtQ2hlY2tlZChlKXt2YXIgcj1pLmdldFN0cmVhbShlKTtpZighcil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDgpO3JldHVybiByfSxnZXRTdHJlYW06ZT0+aS5zdHJlYW1zW2VdLGNyZWF0ZVN0cmVhbShlLHI9LTEpe3JldHVybiBlPU9iamVjdC5hc3NpZ24obmV3IGkuRlNTdHJlYW0sZSkscj09LTEmJihyPWkubmV4dGZkKCkpLGUuZmQ9cixpLnN0cmVhbXNbcl09ZSxlfSxjbG9zZVN0cmVhbShlKXtpLnN0cmVhbXNbZV09bnVsbH0sZHVwU3RyZWFtKGUscj0tMSl7dmFyIG4sYTt2YXIgdD1pLmNyZWF0ZVN0cmVhbShlLHIpO3JldHVybihhPShuPXQuc3RyZWFtX29wcyk9PW51bGw/dm9pZCAwOm4uZHVwKT09bnVsbHx8YS5jYWxsKG4sdCksdH0sY2hyZGV2X3N0cmVhbV9vcHM6e29wZW4oZSl7dmFyIHQsbjt2YXIgcj1pLmdldERldmljZShlLm5vZGUucmRldik7ZS5zdHJlYW1fb3BzPXIuc3RyZWFtX29wcywobj0odD1lLnN0cmVhbV9vcHMpLm9wZW4pPT1udWxsfHxuLmNhbGwodCxlKX0sbGxzZWVrKCl7dGhyb3cgbmV3IGkuRXJybm9FcnJvcig3MCl9fSxtYWpvcjplPT5lPj44LG1pbm9yOmU9PmUmMjU1LG1ha2VkZXY6KGUscik9PmU8PDh8cixyZWdpc3RlckRldmljZShlLHIpe2kuZGV2aWNlc1tlXT17c3RyZWFtX29wczpyfX0sZ2V0RGV2aWNlOmU9PmkuZGV2aWNlc1tlXSxnZXRNb3VudHMoZSl7Zm9yKHZhciByPVtdLHQ9W2VdO3QubGVuZ3RoOyl7dmFyIG49dC5wb3AoKTtyLnB1c2gobiksdC5wdXNoKC4uLm4ubW91bnRzKX1yZXR1cm4gcn0sc3luY2ZzKGUscil7dHlwZW9mIGU9PSJmdW5jdGlvbiImJihyPWUsZT0hMSksaS5zeW5jRlNSZXF1ZXN0cysrLGkuc3luY0ZTUmVxdWVzdHM+MSYmbmUoYHdhcm5pbmc6ICR7aS5zeW5jRlNSZXF1ZXN0c30gRlMuc3luY2ZzIG9wZXJhdGlvbnMgaW4gZmxpZ2h0IGF0IG9uY2UsIHByb2JhYmx5IGp1c3QgZG9pbmcgZXh0cmEgd29ya2ApO3ZhciB0PWkuZ2V0TW91bnRzKGkucm9vdC5tb3VudCksbj0wO2Z1bmN0aW9uIGEocyl7cmV0dXJuIGkuc3luY0ZTUmVxdWVzdHMtLSxyKHMpfWZ1bmN0aW9uIG8ocyl7aWYocylyZXR1cm4gby5lcnJvcmVkP3ZvaWQgMDooby5lcnJvcmVkPSEwLGEocykpOysrbj49dC5sZW5ndGgmJmEobnVsbCl9dC5mb3JFYWNoKHM9PntpZighcy50eXBlLnN5bmNmcylyZXR1cm4gbyhudWxsKTtzLnR5cGUuc3luY2ZzKHMsZSxvKX0pfSxtb3VudChlLHIsdCl7dmFyIG49dD09PSIvIixhPSF0LG87aWYobiYmaS5yb290KXRocm93IG5ldyBpLkVycm5vRXJyb3IoMTApO2lmKCFuJiYhYSl7dmFyIHM9aS5sb29rdXBQYXRoKHQse2ZvbGxvd19tb3VudDohMX0pO2lmKHQ9cy5wYXRoLG89cy5ub2RlLGkuaXNNb3VudHBvaW50KG8pKXRocm93IG5ldyBpLkVycm5vRXJyb3IoMTApO2lmKCFpLmlzRGlyKG8ubW9kZSkpdGhyb3cgbmV3IGkuRXJybm9FcnJvcig1NCl9dmFyIGw9e3R5cGU6ZSxvcHRzOnIsbW91bnRwb2ludDp0LG1vdW50czpbXX0sZj1lLm1vdW50KGwpO3JldHVybiBmLm1vdW50PWwsbC5yb290PWYsbj9pLnJvb3Q9ZjpvJiYoby5tb3VudGVkPWwsby5tb3VudCYmby5tb3VudC5tb3VudHMucHVzaChsKSksZn0sdW5tb3VudChlKXt2YXIgcj1pLmxvb2t1cFBhdGgoZSx7Zm9sbG93X21vdW50OiExfSk7aWYoIWkuaXNNb3VudHBvaW50KHIubm9kZSkpdGhyb3cgbmV3IGkuRXJybm9FcnJvcigyOCk7dmFyIHQ9ci5ub2RlLG49dC5tb3VudGVkLGE9aS5nZXRNb3VudHMobik7T2JqZWN0LmtleXMoaS5uYW1lVGFibGUpLmZvckVhY2gocz0+e2Zvcih2YXIgbD1pLm5hbWVUYWJsZVtzXTtsOyl7dmFyIGY9bC5uYW1lX25leHQ7YS5pbmNsdWRlcyhsLm1vdW50KSYmaS5kZXN0cm95Tm9kZShsKSxsPWZ9fSksdC5tb3VudGVkPW51bGw7dmFyIG89dC5tb3VudC5tb3VudHMuaW5kZXhPZihuKTt0Lm1vdW50Lm1vdW50cy5zcGxpY2UobywxKX0sbG9va3VwKGUscil7cmV0dXJuIGUubm9kZV9vcHMubG9va3VwKGUscil9LG1rbm9kKGUscix0KXt2YXIgbj1pLmxvb2t1cFBhdGgoZSx7cGFyZW50OiEwfSksYT1uLm5vZGUsbz1SLmJhc2VuYW1lKGUpO2lmKCFvfHxvPT09Ii4ifHxvPT09Ii4uIil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTt2YXIgcz1pLm1heUNyZWF0ZShhLG8pO2lmKHMpdGhyb3cgbmV3IGkuRXJybm9FcnJvcihzKTtpZighYS5ub2RlX29wcy5ta25vZCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKTtyZXR1cm4gYS5ub2RlX29wcy5ta25vZChhLG8scix0KX0sY3JlYXRlKGUscil7cmV0dXJuIHI9ciE9PXZvaWQgMD9yOjQzOCxyJj00MDk1LHJ8PTMyNzY4LGkubWtub2QoZSxyLDApfSxta2RpcihlLHIpe3JldHVybiByPXIhPT12b2lkIDA/cjo1MTEsciY9MTAyMyxyfD0xNjM4NCxpLm1rbm9kKGUsciwwKX0sbWtkaXJUcmVlKGUscil7Zm9yKHZhciB0PWUuc3BsaXQoIi8iKSxuPSIiLGE9MDthPHQubGVuZ3RoOysrYSlpZih0W2FdKXtuKz0iLyIrdFthXTt0cnl7aS5ta2RpcihuLHIpfWNhdGNoKG8pe2lmKG8uZXJybm8hPTIwKXRocm93IG99fX0sbWtkZXYoZSxyLHQpe3JldHVybiB0eXBlb2YgdD4idSImJih0PXIscj00MzgpLHJ8PTgxOTIsaS5ta25vZChlLHIsdCl9LHN5bWxpbmsoZSxyKXtpZighWi5yZXNvbHZlKGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNDQpO3ZhciB0PWkubG9va3VwUGF0aChyLHtwYXJlbnQ6ITB9KSxuPXQubm9kZTtpZighbil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDQ0KTt2YXIgYT1SLmJhc2VuYW1lKHIpLG89aS5tYXlDcmVhdGUobixhKTtpZihvKXRocm93IG5ldyBpLkVycm5vRXJyb3Iobyk7aWYoIW4ubm9kZV9vcHMuc3ltbGluayl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKTtyZXR1cm4gbi5ub2RlX29wcy5zeW1saW5rKG4sYSxlKX0scmVuYW1lKGUscil7dmFyIHQ9Ui5kaXJuYW1lKGUpLG49Ui5kaXJuYW1lKHIpLGE9Ui5iYXNlbmFtZShlKSxvPVIuYmFzZW5hbWUocikscyxsLGY7aWYocz1pLmxvb2t1cFBhdGgoZSx7cGFyZW50OiEwfSksbD1zLm5vZGUscz1pLmxvb2t1cFBhdGgocix7cGFyZW50OiEwfSksZj1zLm5vZGUsIWx8fCFmKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNDQpO2lmKGwubW91bnQhPT1mLm1vdW50KXRocm93IG5ldyBpLkVycm5vRXJyb3IoNzUpO3ZhciBkPWkubG9va3VwTm9kZShsLGEpLGM9Wi5yZWxhdGl2ZShlLG4pO2lmKGMuY2hhckF0KDApIT09Ii4iKXRocm93IG5ldyBpLkVycm5vRXJyb3IoMjgpO2lmKGM9Wi5yZWxhdGl2ZShyLHQpLGMuY2hhckF0KDApIT09Ii4iKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNTUpO3ZhciBoO3RyeXtoPWkubG9va3VwTm9kZShmLG8pfWNhdGNoe31pZihkIT09aCl7dmFyIG09aS5pc0RpcihkLm1vZGUpLHA9aS5tYXlEZWxldGUobCxhLG0pO2lmKHApdGhyb3cgbmV3IGkuRXJybm9FcnJvcihwKTtpZihwPWg/aS5tYXlEZWxldGUoZixvLG0pOmkubWF5Q3JlYXRlKGYsbykscCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKHApO2lmKCFsLm5vZGVfb3BzLnJlbmFtZSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKTtpZihpLmlzTW91bnRwb2ludChkKXx8aCYmaS5pc01vdW50cG9pbnQoaCkpdGhyb3cgbmV3IGkuRXJybm9FcnJvcigxMCk7aWYoZiE9PWwmJihwPWkubm9kZVBlcm1pc3Npb25zKGwsInciKSxwKSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKHApO2kuaGFzaFJlbW92ZU5vZGUoZCk7dHJ5e2wubm9kZV9vcHMucmVuYW1lKGQsZixvKX1jYXRjaChFKXt0aHJvdyBFfWZpbmFsbHl7aS5oYXNoQWRkTm9kZShkKX19fSxybWRpcihlKXt2YXIgcj1pLmxvb2t1cFBhdGgoZSx7cGFyZW50OiEwfSksdD1yLm5vZGUsbj1SLmJhc2VuYW1lKGUpLGE9aS5sb29rdXBOb2RlKHQsbiksbz1pLm1heURlbGV0ZSh0LG4sITApO2lmKG8pdGhyb3cgbmV3IGkuRXJybm9FcnJvcihvKTtpZighdC5ub2RlX29wcy5ybWRpcil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKTtpZihpLmlzTW91bnRwb2ludChhKSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDEwKTt0Lm5vZGVfb3BzLnJtZGlyKHQsbiksaS5kZXN0cm95Tm9kZShhKX0scmVhZGRpcihlKXt2YXIgcj1pLmxvb2t1cFBhdGgoZSx7Zm9sbG93OiEwfSksdD1yLm5vZGU7aWYoIXQubm9kZV9vcHMucmVhZGRpcil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDU0KTtyZXR1cm4gdC5ub2RlX29wcy5yZWFkZGlyKHQpfSx1bmxpbmsoZSl7dmFyIHI9aS5sb29rdXBQYXRoKGUse3BhcmVudDohMH0pLHQ9ci5ub2RlO2lmKCF0KXRocm93IG5ldyBpLkVycm5vRXJyb3IoNDQpO3ZhciBuPVIuYmFzZW5hbWUoZSksYT1pLmxvb2t1cE5vZGUodCxuKSxvPWkubWF5RGVsZXRlKHQsbiwhMSk7aWYobyl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKG8pO2lmKCF0Lm5vZGVfb3BzLnVubGluayl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKTtpZihpLmlzTW91bnRwb2ludChhKSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDEwKTt0Lm5vZGVfb3BzLnVubGluayh0LG4pLGkuZGVzdHJveU5vZGUoYSl9LHJlYWRsaW5rKGUpe3ZhciByPWkubG9va3VwUGF0aChlKSx0PXIubm9kZTtpZighdCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDQ0KTtpZighdC5ub2RlX29wcy5yZWFkbGluayl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTtyZXR1cm4gWi5yZXNvbHZlKGkuZ2V0UGF0aCh0LnBhcmVudCksdC5ub2RlX29wcy5yZWFkbGluayh0KSl9LHN0YXQoZSxyKXt2YXIgdD1pLmxvb2t1cFBhdGgoZSx7Zm9sbG93OiFyfSksbj10Lm5vZGU7aWYoIW4pdGhyb3cgbmV3IGkuRXJybm9FcnJvcig0NCk7aWYoIW4ubm9kZV9vcHMuZ2V0YXR0cil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKTtyZXR1cm4gbi5ub2RlX29wcy5nZXRhdHRyKG4pfSxsc3RhdChlKXtyZXR1cm4gaS5zdGF0KGUsITApfSxjaG1vZChlLHIsdCl7dmFyIG47aWYodHlwZW9mIGU9PSJzdHJpbmciKXt2YXIgYT1pLmxvb2t1cFBhdGgoZSx7Zm9sbG93OiF0fSk7bj1hLm5vZGV9ZWxzZSBuPWU7aWYoIW4ubm9kZV9vcHMuc2V0YXR0cil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYzKTtuLm5vZGVfb3BzLnNldGF0dHIobix7bW9kZTpyJjQwOTV8bi5tb2RlJi00MDk2LHRpbWVzdGFtcDpEYXRlLm5vdygpfSl9LGxjaG1vZChlLHIpe2kuY2htb2QoZSxyLCEwKX0sZmNobW9kKGUscil7dmFyIHQ9aS5nZXRTdHJlYW1DaGVja2VkKGUpO2kuY2htb2QodC5ub2RlLHIpfSxjaG93bihlLHIsdCxuKXt2YXIgYTtpZih0eXBlb2YgZT09InN0cmluZyIpe3ZhciBvPWkubG9va3VwUGF0aChlLHtmb2xsb3c6IW59KTthPW8ubm9kZX1lbHNlIGE9ZTtpZighYS5ub2RlX29wcy5zZXRhdHRyKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNjMpO2Eubm9kZV9vcHMuc2V0YXR0cihhLHt0aW1lc3RhbXA6RGF0ZS5ub3coKX0pfSxsY2hvd24oZSxyLHQpe2kuY2hvd24oZSxyLHQsITApfSxmY2hvd24oZSxyLHQpe3ZhciBuPWkuZ2V0U3RyZWFtQ2hlY2tlZChlKTtpLmNob3duKG4ubm9kZSxyLHQpfSx0cnVuY2F0ZShlLHIpe2lmKHI8MCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTt2YXIgdDtpZih0eXBlb2YgZT09InN0cmluZyIpe3ZhciBuPWkubG9va3VwUGF0aChlLHtmb2xsb3c6ITB9KTt0PW4ubm9kZX1lbHNlIHQ9ZTtpZighdC5ub2RlX29wcy5zZXRhdHRyKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNjMpO2lmKGkuaXNEaXIodC5tb2RlKSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDMxKTtpZighaS5pc0ZpbGUodC5tb2RlKSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTt2YXIgYT1pLm5vZGVQZXJtaXNzaW9ucyh0LCJ3Iik7aWYoYSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKGEpO3Qubm9kZV9vcHMuc2V0YXR0cih0LHtzaXplOnIsdGltZXN0YW1wOkRhdGUubm93KCl9KX0sZnRydW5jYXRlKGUscil7dmFyIHQ9aS5nZXRTdHJlYW1DaGVja2VkKGUpO2lmKCEodC5mbGFncyYyMDk3MTU1KSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTtpLnRydW5jYXRlKHQubm9kZSxyKX0sdXRpbWUoZSxyLHQpe3ZhciBuPWkubG9va3VwUGF0aChlLHtmb2xsb3c6ITB9KSxhPW4ubm9kZTthLm5vZGVfb3BzLnNldGF0dHIoYSx7dGltZXN0YW1wOk1hdGgubWF4KHIsdCl9KX0sb3BlbihlLHIsdCl7aWYoZT09PSIiKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNDQpO3I9dHlwZW9mIHI9PSJzdHJpbmciP1p0KHIpOnIsciY2ND8odD10eXBlb2YgdD4idSI/NDM4OnQsdD10JjQwOTV8MzI3NjgpOnQ9MDt2YXIgbjtpZih0eXBlb2YgZT09Im9iamVjdCIpbj1lO2Vsc2V7ZT1SLm5vcm1hbGl6ZShlKTt0cnl7dmFyIGE9aS5sb29rdXBQYXRoKGUse2ZvbGxvdzohKHImMTMxMDcyKX0pO249YS5ub2RlfWNhdGNoe319dmFyIG89ITE7aWYociY2NClpZihuKXtpZihyJjEyOCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDIwKX1lbHNlIG49aS5ta25vZChlLHQsMCksbz0hMDtpZighbil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDQ0KTtpZihpLmlzQ2hyZGV2KG4ubW9kZSkmJihyJj0tNTEzKSxyJjY1NTM2JiYhaS5pc0RpcihuLm1vZGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNTQpO2lmKCFvKXt2YXIgcz1pLm1heU9wZW4obixyKTtpZihzKXRocm93IG5ldyBpLkVycm5vRXJyb3Iocyl9ciY1MTImJiFvJiZpLnRydW5jYXRlKG4sMCksciY9LTEzMTcxMzt2YXIgbD1pLmNyZWF0ZVN0cmVhbSh7bm9kZTpuLHBhdGg6aS5nZXRQYXRoKG4pLGZsYWdzOnIsc2Vla2FibGU6ITAscG9zaXRpb246MCxzdHJlYW1fb3BzOm4uc3RyZWFtX29wcyx1bmdvdHRlbjpbXSxlcnJvcjohMX0pO3JldHVybiBsLnN0cmVhbV9vcHMub3BlbiYmbC5zdHJlYW1fb3BzLm9wZW4obCksdS5sb2dSZWFkRmlsZXMmJiEociYxKSYmKGkucmVhZEZpbGVzfHwoaS5yZWFkRmlsZXM9e30pLGUgaW4gaS5yZWFkRmlsZXN8fChpLnJlYWRGaWxlc1tlXT0xKSksbH0sY2xvc2UoZSl7aWYoaS5pc0Nsb3NlZChlKSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDgpO2UuZ2V0ZGVudHMmJihlLmdldGRlbnRzPW51bGwpO3RyeXtlLnN0cmVhbV9vcHMuY2xvc2UmJmUuc3RyZWFtX29wcy5jbG9zZShlKX1jYXRjaChyKXt0aHJvdyByfWZpbmFsbHl7aS5jbG9zZVN0cmVhbShlLmZkKX1lLmZkPW51bGx9LGlzQ2xvc2VkKGUpe3JldHVybiBlLmZkPT09bnVsbH0sbGxzZWVrKGUscix0KXtpZihpLmlzQ2xvc2VkKGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoOCk7aWYoIWUuc2Vla2FibGV8fCFlLnN0cmVhbV9vcHMubGxzZWVrKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNzApO2lmKHQhPTAmJnQhPTEmJnQhPTIpdGhyb3cgbmV3IGkuRXJybm9FcnJvcigyOCk7cmV0dXJuIGUucG9zaXRpb249ZS5zdHJlYW1fb3BzLmxsc2VlayhlLHIsdCksZS51bmdvdHRlbj1bXSxlLnBvc2l0aW9ufSxyZWFkKGUscix0LG4sYSl7aWYobjwwfHxhPDApdGhyb3cgbmV3IGkuRXJybm9FcnJvcigyOCk7aWYoaS5pc0Nsb3NlZChlKSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDgpO2lmKChlLmZsYWdzJjIwOTcxNTUpPT09MSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDgpO2lmKGkuaXNEaXIoZS5ub2RlLm1vZGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoMzEpO2lmKCFlLnN0cmVhbV9vcHMucmVhZCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTt2YXIgbz10eXBlb2YgYTwidSI7aWYoIW8pYT1lLnBvc2l0aW9uO2Vsc2UgaWYoIWUuc2Vla2FibGUpdGhyb3cgbmV3IGkuRXJybm9FcnJvcig3MCk7dmFyIHM9ZS5zdHJlYW1fb3BzLnJlYWQoZSxyLHQsbixhKTtyZXR1cm4gb3x8KGUucG9zaXRpb24rPXMpLHN9LHdyaXRlKGUscix0LG4sYSxvKXtpZihuPDB8fGE8MCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTtpZihpLmlzQ2xvc2VkKGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoOCk7aWYoIShlLmZsYWdzJjIwOTcxNTUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoOCk7aWYoaS5pc0RpcihlLm5vZGUubW9kZSkpdGhyb3cgbmV3IGkuRXJybm9FcnJvcigzMSk7aWYoIWUuc3RyZWFtX29wcy53cml0ZSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI4KTtlLnNlZWthYmxlJiZlLmZsYWdzJjEwMjQmJmkubGxzZWVrKGUsMCwyKTt2YXIgcz10eXBlb2YgYTwidSI7aWYoIXMpYT1lLnBvc2l0aW9uO2Vsc2UgaWYoIWUuc2Vla2FibGUpdGhyb3cgbmV3IGkuRXJybm9FcnJvcig3MCk7dmFyIGw9ZS5zdHJlYW1fb3BzLndyaXRlKGUscix0LG4sYSxvKTtyZXR1cm4gc3x8KGUucG9zaXRpb24rPWwpLGx9LGFsbG9jYXRlKGUscix0KXtpZihpLmlzQ2xvc2VkKGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoOCk7aWYocjwwfHx0PD0wKXRocm93IG5ldyBpLkVycm5vRXJyb3IoMjgpO2lmKCEoZS5mbGFncyYyMDk3MTU1KSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDgpO2lmKCFpLmlzRmlsZShlLm5vZGUubW9kZSkmJiFpLmlzRGlyKGUubm9kZS5tb2RlKSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDQzKTtpZighZS5zdHJlYW1fb3BzLmFsbG9jYXRlKXRocm93IG5ldyBpLkVycm5vRXJyb3IoMTM4KTtlLnN0cmVhbV9vcHMuYWxsb2NhdGUoZSxyLHQpfSxtbWFwKGUscix0LG4sYSl7aWYobiYyJiYhKGEmMikmJihlLmZsYWdzJjIwOTcxNTUpIT09Mil0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDIpO2lmKChlLmZsYWdzJjIwOTcxNTUpPT09MSl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDIpO2lmKCFlLnN0cmVhbV9vcHMubW1hcCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDQzKTtyZXR1cm4gZS5zdHJlYW1fb3BzLm1tYXAoZSxyLHQsbixhKX0sbXN5bmMoZSxyLHQsbixhKXtyZXR1cm4gZS5zdHJlYW1fb3BzLm1zeW5jP2Uuc3RyZWFtX29wcy5tc3luYyhlLHIsdCxuLGEpOjB9LGlvY3RsKGUscix0KXtpZighZS5zdHJlYW1fb3BzLmlvY3RsKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNTkpO3JldHVybiBlLnN0cmVhbV9vcHMuaW9jdGwoZSxyLHQpfSxyZWFkRmlsZShlLHI9e30pe2lmKHIuZmxhZ3M9ci5mbGFnc3x8MCxyLmVuY29kaW5nPXIuZW5jb2Rpbmd8fCJiaW5hcnkiLHIuZW5jb2RpbmchPT0idXRmOCImJnIuZW5jb2RpbmchPT0iYmluYXJ5Iil0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgZW5jb2RpbmcgdHlwZSAiJHtyLmVuY29kaW5nfSJgKTt2YXIgdCxuPWkub3BlbihlLHIuZmxhZ3MpLGE9aS5zdGF0KGUpLG89YS5zaXplLHM9bmV3IFVpbnQ4QXJyYXkobyk7cmV0dXJuIGkucmVhZChuLHMsMCxvLDApLHIuZW5jb2Rpbmc9PT0idXRmOCI/dD1jZShzLDApOnIuZW5jb2Rpbmc9PT0iYmluYXJ5IiYmKHQ9cyksaS5jbG9zZShuKSx0fSx3cml0ZUZpbGUoZSxyLHQ9e30pe3QuZmxhZ3M9dC5mbGFnc3x8NTc3O3ZhciBuPWkub3BlbihlLHQuZmxhZ3MsdC5tb2RlKTtpZih0eXBlb2Ygcj09InN0cmluZyIpe3ZhciBhPW5ldyBVaW50OEFycmF5KHRyKHIpKzEpLG89bnIocixhLDAsYS5sZW5ndGgpO2kud3JpdGUobixhLDAsbyx2b2lkIDAsdC5jYW5Pd24pfWVsc2UgaWYoQXJyYXlCdWZmZXIuaXNWaWV3KHIpKWkud3JpdGUobixyLDAsci5ieXRlTGVuZ3RoLHZvaWQgMCx0LmNhbk93bik7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoIlVuc3VwcG9ydGVkIGRhdGEgdHlwZSIpO2kuY2xvc2Uobil9LGN3ZDooKT0+aS5jdXJyZW50UGF0aCxjaGRpcihlKXt2YXIgcj1pLmxvb2t1cFBhdGgoZSx7Zm9sbG93OiEwfSk7aWYoci5ub2RlPT09bnVsbCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDQ0KTtpZighaS5pc0RpcihyLm5vZGUubW9kZSkpdGhyb3cgbmV3IGkuRXJybm9FcnJvcig1NCk7dmFyIHQ9aS5ub2RlUGVybWlzc2lvbnMoci5ub2RlLCJ4Iik7aWYodCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKHQpO2kuY3VycmVudFBhdGg9ci5wYXRofSxjcmVhdGVEZWZhdWx0RGlyZWN0b3JpZXMoKXtpLm1rZGlyKCIvdG1wIiksaS5ta2RpcigiL2hvbWUiKSxpLm1rZGlyKCIvaG9tZS93ZWJfdXNlciIpfSxjcmVhdGVEZWZhdWx0RGV2aWNlcygpe2kubWtkaXIoIi9kZXYiKSxpLnJlZ2lzdGVyRGV2aWNlKGkubWFrZWRldigxLDMpLHtyZWFkOigpPT4wLHdyaXRlOihuLGEsbyxzLGwpPT5zfSksaS5ta2RldigiL2Rldi9udWxsIixpLm1ha2VkZXYoMSwzKSksZmUucmVnaXN0ZXIoaS5tYWtlZGV2KDUsMCksZmUuZGVmYXVsdF90dHlfb3BzKSxmZS5yZWdpc3RlcihpLm1ha2VkZXYoNiwwKSxmZS5kZWZhdWx0X3R0eTFfb3BzKSxpLm1rZGV2KCIvZGV2L3R0eSIsaS5tYWtlZGV2KDUsMCkpLGkubWtkZXYoIi9kZXYvdHR5MSIsaS5tYWtlZGV2KDYsMCkpO3ZhciBlPW5ldyBVaW50OEFycmF5KDEwMjQpLHI9MCx0PSgpPT4ocj09PTAmJihyPUlyKGUpLmJ5dGVMZW5ndGgpLGVbLS1yXSk7aS5jcmVhdGVEZXZpY2UoIi9kZXYiLCJyYW5kb20iLHQpLGkuY3JlYXRlRGV2aWNlKCIvZGV2IiwidXJhbmRvbSIsdCksaS5ta2RpcigiL2Rldi9zaG0iKSxpLm1rZGlyKCIvZGV2L3NobS90bXAiKX0sY3JlYXRlU3BlY2lhbERpcmVjdG9yaWVzKCl7aS5ta2RpcigiL3Byb2MiKTt2YXIgZT1pLm1rZGlyKCIvcHJvYy9zZWxmIik7aS5ta2RpcigiL3Byb2Mvc2VsZi9mZCIpLGkubW91bnQoe21vdW50KCl7dmFyIHI9aS5jcmVhdGVOb2RlKGUsImZkIiwxNjg5NSw3Myk7cmV0dXJuIHIubm9kZV9vcHM9e2xvb2t1cCh0LG4pe3ZhciBhPStuLG89aS5nZXRTdHJlYW1DaGVja2VkKGEpLHM9e3BhcmVudDpudWxsLG1vdW50Onttb3VudHBvaW50OiJmYWtlIn0sbm9kZV9vcHM6e3JlYWRsaW5rOigpPT5vLnBhdGh9fTtyZXR1cm4gcy5wYXJlbnQ9cyxzfX0scn19LHt9LCIvcHJvYy9zZWxmL2ZkIil9LGNyZWF0ZVN0YW5kYXJkU3RyZWFtcygpe3Uuc3RkaW4/aS5jcmVhdGVEZXZpY2UoIi9kZXYiLCJzdGRpbiIsdS5zdGRpbik6aS5zeW1saW5rKCIvZGV2L3R0eSIsIi9kZXYvc3RkaW4iKSx1LnN0ZG91dD9pLmNyZWF0ZURldmljZSgiL2RldiIsInN0ZG91dCIsbnVsbCx1LnN0ZG91dCk6aS5zeW1saW5rKCIvZGV2L3R0eSIsIi9kZXYvc3Rkb3V0IiksdS5zdGRlcnI/aS5jcmVhdGVEZXZpY2UoIi9kZXYiLCJzdGRlcnIiLG51bGwsdS5zdGRlcnIpOmkuc3ltbGluaygiL2Rldi90dHkxIiwiL2Rldi9zdGRlcnIiKSxpLm9wZW4oIi9kZXYvc3RkaW4iLDApLGkub3BlbigiL2Rldi9zdGRvdXQiLDEpLGkub3BlbigiL2Rldi9zdGRlcnIiLDEpfSxzdGF0aWNJbml0KCl7WzQ0XS5mb3JFYWNoKGU9PntpLmdlbmVyaWNFcnJvcnNbZV09bmV3IGkuRXJybm9FcnJvcihlKSxpLmdlbmVyaWNFcnJvcnNbZV0uc3RhY2s9IjxnZW5lcmljIGVycm9yLCBubyBzdGFjaz4ifSksaS5uYW1lVGFibGU9bmV3IEFycmF5KDQwOTYpLGkubW91bnQoUCx7fSwiLyIpLGkuY3JlYXRlRGVmYXVsdERpcmVjdG9yaWVzKCksaS5jcmVhdGVEZWZhdWx0RGV2aWNlcygpLGkuY3JlYXRlU3BlY2lhbERpcmVjdG9yaWVzKCksaS5maWxlc3lzdGVtcz17TUVNRlM6UCxXT1JLRVJGUzp4fX0saW5pdChlLHIsdCl7aS5pbml0LmluaXRpYWxpemVkPSEwLHUuc3RkaW49ZXx8dS5zdGRpbix1LnN0ZG91dD1yfHx1LnN0ZG91dCx1LnN0ZGVycj10fHx1LnN0ZGVycixpLmNyZWF0ZVN0YW5kYXJkU3RyZWFtcygpfSxxdWl0KCl7aS5pbml0LmluaXRpYWxpemVkPSExO2Zvcih2YXIgZT0wO2U8aS5zdHJlYW1zLmxlbmd0aDtlKyspe3ZhciByPWkuc3RyZWFtc1tlXTtyJiZpLmNsb3NlKHIpfX0sZmluZE9iamVjdChlLHIpe3ZhciB0PWkuYW5hbHl6ZVBhdGgoZSxyKTtyZXR1cm4gdC5leGlzdHM/dC5vYmplY3Q6bnVsbH0sYW5hbHl6ZVBhdGgoZSxyKXt0cnl7dmFyIHQ9aS5sb29rdXBQYXRoKGUse2ZvbGxvdzohcn0pO2U9dC5wYXRofWNhdGNoe312YXIgbj17aXNSb290OiExLGV4aXN0czohMSxlcnJvcjowLG5hbWU6bnVsbCxwYXRoOm51bGwsb2JqZWN0Om51bGwscGFyZW50RXhpc3RzOiExLHBhcmVudFBhdGg6bnVsbCxwYXJlbnRPYmplY3Q6bnVsbH07dHJ5e3ZhciB0PWkubG9va3VwUGF0aChlLHtwYXJlbnQ6ITB9KTtuLnBhcmVudEV4aXN0cz0hMCxuLnBhcmVudFBhdGg9dC5wYXRoLG4ucGFyZW50T2JqZWN0PXQubm9kZSxuLm5hbWU9Ui5iYXNlbmFtZShlKSx0PWkubG9va3VwUGF0aChlLHtmb2xsb3c6IXJ9KSxuLmV4aXN0cz0hMCxuLnBhdGg9dC5wYXRoLG4ub2JqZWN0PXQubm9kZSxuLm5hbWU9dC5ub2RlLm5hbWUsbi5pc1Jvb3Q9dC5wYXRoPT09Ii8ifWNhdGNoKGEpe24uZXJyb3I9YS5lcnJub31yZXR1cm4gbn0sY3JlYXRlUGF0aChlLHIsdCxuKXtlPXR5cGVvZiBlPT0ic3RyaW5nIj9lOmkuZ2V0UGF0aChlKTtmb3IodmFyIGE9ci5zcGxpdCgiLyIpLnJldmVyc2UoKTthLmxlbmd0aDspe3ZhciBvPWEucG9wKCk7aWYobyl7dmFyIHM9Ui5qb2luMihlLG8pO3RyeXtpLm1rZGlyKHMpfWNhdGNoe31lPXN9fXJldHVybiBzfSxjcmVhdGVGaWxlKGUscix0LG4sYSl7dmFyIG89Ui5qb2luMih0eXBlb2YgZT09InN0cmluZyI/ZTppLmdldFBhdGgoZSkscikscz1hcihuLGEpO3JldHVybiBpLmNyZWF0ZShvLHMpfSxjcmVhdGVEYXRhRmlsZShlLHIsdCxuLGEsbyl7dmFyIHM9cjtlJiYoZT10eXBlb2YgZT09InN0cmluZyI/ZTppLmdldFBhdGgoZSkscz1yP1Iuam9pbjIoZSxyKTplKTt2YXIgbD1hcihuLGEpLGY9aS5jcmVhdGUocyxsKTtpZih0KXtpZih0eXBlb2YgdD09InN0cmluZyIpe2Zvcih2YXIgZD1uZXcgQXJyYXkodC5sZW5ndGgpLGM9MCxoPXQubGVuZ3RoO2M8aDsrK2MpZFtjXT10LmNoYXJDb2RlQXQoYyk7dD1kfWkuY2htb2QoZixsfDE0Nik7dmFyIG09aS5vcGVuKGYsNTc3KTtpLndyaXRlKG0sdCwwLHQubGVuZ3RoLDAsbyksaS5jbG9zZShtKSxpLmNobW9kKGYsbCl9fSxjcmVhdGVEZXZpY2UoZSxyLHQsbil7dmFyIGE9Ui5qb2luMih0eXBlb2YgZT09InN0cmluZyI/ZTppLmdldFBhdGgoZSksciksbz1hcighIXQsISFuKTtpLmNyZWF0ZURldmljZS5tYWpvcnx8KGkuY3JlYXRlRGV2aWNlLm1ham9yPTY0KTt2YXIgcz1pLm1ha2VkZXYoaS5jcmVhdGVEZXZpY2UubWFqb3IrKywwKTtyZXR1cm4gaS5yZWdpc3RlckRldmljZShzLHtvcGVuKGwpe2wuc2Vla2FibGU9ITF9LGNsb3NlKGwpe3ZhciBmOyhmPW49PW51bGw/dm9pZCAwOm4uYnVmZmVyKSE9bnVsbCYmZi5sZW5ndGgmJm4oMTApfSxyZWFkKGwsZixkLGMsaCl7Zm9yKHZhciBtPTAscD0wO3A8YztwKyspe3ZhciBFO3RyeXtFPXQoKX1jYXRjaHt0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI5KX1pZihFPT09dm9pZCAwJiZtPT09MCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDYpO2lmKEU9PW51bGwpYnJlYWs7bSsrLGZbZCtwXT1FfXJldHVybiBtJiYobC5ub2RlLnRpbWVzdGFtcD1EYXRlLm5vdygpKSxtfSx3cml0ZShsLGYsZCxjLGgpe2Zvcih2YXIgbT0wO208YzttKyspdHJ5e24oZltkK21dKX1jYXRjaHt0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDI5KX1yZXR1cm4gYyYmKGwubm9kZS50aW1lc3RhbXA9RGF0ZS5ub3coKSksbX19KSxpLm1rZGV2KGEsbyxzKX0sZm9yY2VMb2FkRmlsZShlKXtpZihlLmlzRGV2aWNlfHxlLmlzRm9sZGVyfHxlLmxpbmt8fGUuY29udGVudHMpcmV0dXJuITA7aWYodHlwZW9mIFhNTEh0dHBSZXF1ZXN0PCJ1Iil0aHJvdyBuZXcgRXJyb3IoIkxhenkgbG9hZGluZyBzaG91bGQgaGF2ZSBiZWVuIHBlcmZvcm1lZCAoY29udGVudHMgc2V0KSBpbiBjcmVhdGVMYXp5RmlsZSwgYnV0IGl0IHdhcyBub3QuIExhenkgbG9hZGluZyBvbmx5IHdvcmtzIGluIHdlYiB3b3JrZXJzLiBVc2UgLS1lbWJlZC1maWxlIG9yIC0tcHJlbG9hZC1maWxlIGluIGVtY2Mgb24gdGhlIG1haW4gdGhyZWFkLiIpO2lmKEtlKXRyeXtlLmNvbnRlbnRzPU9lKEtlKGUudXJsKSwhMCksZS51c2VkQnl0ZXM9ZS5jb250ZW50cy5sZW5ndGh9Y2F0Y2h7dGhyb3cgbmV3IGkuRXJybm9FcnJvcigyOSl9ZWxzZSB0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBsb2FkIHdpdGhvdXQgcmVhZCgpIG9yIFhNTEh0dHBSZXF1ZXN0LiIpfSxjcmVhdGVMYXp5RmlsZShlLHIsdCxuLGEpe2NsYXNzIG97Y29uc3RydWN0b3IoKXt0aGlzLmxlbmd0aEtub3duPSExLHRoaXMuY2h1bmtzPVtdfWdldChwKXtpZighKHA+dGhpcy5sZW5ndGgtMXx8cDwwKSl7dmFyIEU9cCV0aGlzLmNodW5rU2l6ZSxNPXAvdGhpcy5jaHVua1NpemV8MDtyZXR1cm4gdGhpcy5nZXR0ZXIoTSlbRV19fXNldERhdGFHZXR0ZXIocCl7dGhpcy5nZXR0ZXI9cH1jYWNoZUxlbmd0aCgpe3ZhciBwPW5ldyBYTUxIdHRwUmVxdWVzdDtpZihwLm9wZW4oIkhFQUQiLHQsITEpLHAuc2VuZChudWxsKSwhKHAuc3RhdHVzPj0yMDAmJnAuc3RhdHVzPDMwMHx8cC5zdGF0dXM9PT0zMDQpKXRocm93IG5ldyBFcnJvcigiQ291bGRuJ3QgbG9hZCAiK3QrIi4gU3RhdHVzOiAiK3Auc3RhdHVzKTt2YXIgRT1OdW1iZXIocC5nZXRSZXNwb25zZUhlYWRlcigiQ29udGVudC1sZW5ndGgiKSksTSxJPShNPXAuZ2V0UmVzcG9uc2VIZWFkZXIoIkFjY2VwdC1SYW5nZXMiKSkmJk09PT0iYnl0ZXMiLFQ9KE09cC5nZXRSZXNwb25zZUhlYWRlcigiQ29udGVudC1FbmNvZGluZyIpKSYmTT09PSJnemlwIix2PTEwMjQqMTAyNDtJfHwodj1FKTt2YXIgXz0oRixCKT0+e2lmKEY+Qil0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgcmFuZ2UgKCIrRisiLCAiK0IrIikgb3Igbm8gYnl0ZXMgcmVxdWVzdGVkISIpO2lmKEI+RS0xKXRocm93IG5ldyBFcnJvcigib25seSAiK0UrIiBieXRlcyBhdmFpbGFibGUhIHByb2dyYW1tZXIgZXJyb3IhIik7dmFyIFY9bmV3IFhNTEh0dHBSZXF1ZXN0O2lmKFYub3BlbigiR0VUIix0LCExKSxFIT09diYmVi5zZXRSZXF1ZXN0SGVhZGVyKCJSYW5nZSIsImJ5dGVzPSIrRisiLSIrQiksVi5yZXNwb25zZVR5cGU9ImFycmF5YnVmZmVyIixWLm92ZXJyaWRlTWltZVR5cGUmJlYub3ZlcnJpZGVNaW1lVHlwZSgidGV4dC9wbGFpbjsgY2hhcnNldD14LXVzZXItZGVmaW5lZCIpLFYuc2VuZChudWxsKSwhKFYuc3RhdHVzPj0yMDAmJlYuc3RhdHVzPDMwMHx8Vi5zdGF0dXM9PT0zMDQpKXRocm93IG5ldyBFcnJvcigiQ291bGRuJ3QgbG9hZCAiK3QrIi4gU3RhdHVzOiAiK1Yuc3RhdHVzKTtyZXR1cm4gVi5yZXNwb25zZSE9PXZvaWQgMD9uZXcgVWludDhBcnJheShWLnJlc3BvbnNlfHxbXSk6T2UoVi5yZXNwb25zZVRleHR8fCIiLCEwKX0sVT10aGlzO1Uuc2V0RGF0YUdldHRlcihGPT57dmFyIEI9Rip2LFY9KEYrMSkqdi0xO2lmKFY9TWF0aC5taW4oVixFLTEpLHR5cGVvZiBVLmNodW5rc1tGXT4idSImJihVLmNodW5rc1tGXT1fKEIsVikpLHR5cGVvZiBVLmNodW5rc1tGXT4idSIpdGhyb3cgbmV3IEVycm9yKCJkb1hIUiBmYWlsZWQhIik7cmV0dXJuIFUuY2h1bmtzW0ZdfSksKFR8fCFFKSYmKHY9RT0xLEU9dGhpcy5nZXR0ZXIoMCkubGVuZ3RoLHY9RSxaZSgiTGF6eUZpbGVzIG9uIGd6aXAgZm9yY2VzIGRvd25sb2FkIG9mIHRoZSB3aG9sZSBmaWxlIHdoZW4gbGVuZ3RoIGlzIGFjY2Vzc2VkIikpLHRoaXMuX2xlbmd0aD1FLHRoaXMuX2NodW5rU2l6ZT12LHRoaXMubGVuZ3RoS25vd249ITB9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLmxlbmd0aEtub3dufHx0aGlzLmNhY2hlTGVuZ3RoKCksdGhpcy5fbGVuZ3RofWdldCBjaHVua1NpemUoKXtyZXR1cm4gdGhpcy5sZW5ndGhLbm93bnx8dGhpcy5jYWNoZUxlbmd0aCgpLHRoaXMuX2NodW5rU2l6ZX19aWYodHlwZW9mIFhNTEh0dHBSZXF1ZXN0PCJ1Iil2YXIgcz1uZXcgbyxsPXtpc0RldmljZTohMSxjb250ZW50czpzfTtlbHNlIHZhciBsPXtpc0RldmljZTohMSx1cmw6dH07dmFyIGY9aS5jcmVhdGVGaWxlKGUscixsLG4sYSk7bC5jb250ZW50cz9mLmNvbnRlbnRzPWwuY29udGVudHM6bC51cmwmJihmLmNvbnRlbnRzPW51bGwsZi51cmw9bC51cmwpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGYse3VzZWRCeXRlczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29udGVudHMubGVuZ3RofX19KTt2YXIgZD17fSxjPU9iamVjdC5rZXlzKGYuc3RyZWFtX29wcyk7Yy5mb3JFYWNoKG09Pnt2YXIgcD1mLnN0cmVhbV9vcHNbbV07ZFttXT0oLi4uRSk9PihpLmZvcmNlTG9hZEZpbGUoZikscCguLi5FKSl9KTtmdW5jdGlvbiBoKG0scCxFLE0sSSl7dmFyIFQ9bS5ub2RlLmNvbnRlbnRzO2lmKEk+PVQubGVuZ3RoKXJldHVybiAwO3ZhciB2PU1hdGgubWluKFQubGVuZ3RoLUksTSk7aWYoVC5zbGljZSlmb3IodmFyIF89MDtfPHY7XysrKXBbRStfXT1UW0krX107ZWxzZSBmb3IodmFyIF89MDtfPHY7XysrKXBbRStfXT1ULmdldChJK18pO3JldHVybiB2fXJldHVybiBkLnJlYWQ9KG0scCxFLE0sSSk9PihpLmZvcmNlTG9hZEZpbGUoZiksaChtLHAsRSxNLEkpKSxkLm1tYXA9KG0scCxFLE0sSSk9PntpLmZvcmNlTG9hZEZpbGUoZik7dmFyIFQ9T3IoKTtpZighVCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDQ4KTtyZXR1cm4gaChtLEwsVCxwLEUpLHtwdHI6VCxhbGxvY2F0ZWQ6ITB9fSxmLnN0cmVhbV9vcHM9ZCxmfX0sRD17REVGQVVMVF9QT0xMTUFTSzo1LGNhbGN1bGF0ZUF0KGUscix0KXtpZihSLmlzQWJzKHIpKXJldHVybiByO3ZhciBuO2lmKGU9PT0tMTAwKW49aS5jd2QoKTtlbHNle3ZhciBhPUQuZ2V0U3RyZWFtRnJvbUZEKGUpO249YS5wYXRofWlmKHIubGVuZ3RoPT0wKXtpZighdCl0aHJvdyBuZXcgaS5FcnJub0Vycm9yKDQ0KTtyZXR1cm4gbn1yZXR1cm4gUi5qb2luMihuLHIpfSxkb1N0YXQoZSxyLHQpe3ZhciBuPWUocik7eVt0Pj4yXT1uLmRldix5W3QrND4+Ml09bi5tb2RlLENbdCs4Pj4yXT1uLm5saW5rLHlbdCsxMj4+Ml09bi51aWQseVt0KzE2Pj4yXT1uLmdpZCx5W3QrMjA+PjJdPW4ucmRldixTPVtuLnNpemU+Pj4wLChnPW4uc2l6ZSwrTWF0aC5hYnMoZyk+PTE/Zz4wPytNYXRoLmZsb29yKGcvNDI5NDk2NzI5Nik+Pj4wOn5+K01hdGguY2VpbCgoZy0rKH5+Zz4+PjApKS80Mjk0OTY3Mjk2KT4+PjA6MCldLHlbdCsyND4+Ml09U1swXSx5W3QrMjg+PjJdPVNbMV0seVt0KzMyPj4yXT00MDk2LHlbdCszNj4+Ml09bi5ibG9ja3M7dmFyIGE9bi5hdGltZS5nZXRUaW1lKCksbz1uLm10aW1lLmdldFRpbWUoKSxzPW4uY3RpbWUuZ2V0VGltZSgpO3JldHVybiBTPVtNYXRoLmZsb29yKGEvMWUzKT4+PjAsKGc9TWF0aC5mbG9vcihhLzFlMyksK01hdGguYWJzKGcpPj0xP2c+MD8rTWF0aC5mbG9vcihnLzQyOTQ5NjcyOTYpPj4+MDp+fitNYXRoLmNlaWwoKGctKyh+fmc+Pj4wKSkvNDI5NDk2NzI5Nik+Pj4wOjApXSx5W3QrNDA+PjJdPVNbMF0seVt0KzQ0Pj4yXT1TWzFdLENbdCs0OD4+Ml09YSUxZTMqMWUzLFM9W01hdGguZmxvb3Ioby8xZTMpPj4+MCwoZz1NYXRoLmZsb29yKG8vMWUzKSwrTWF0aC5hYnMoZyk+PTE/Zz4wPytNYXRoLmZsb29yKGcvNDI5NDk2NzI5Nik+Pj4wOn5+K01hdGguY2VpbCgoZy0rKH5+Zz4+PjApKS80Mjk0OTY3Mjk2KT4+PjA6MCldLHlbdCs1Nj4+Ml09U1swXSx5W3QrNjA+PjJdPVNbMV0sQ1t0KzY0Pj4yXT1vJTFlMyoxZTMsUz1bTWF0aC5mbG9vcihzLzFlMyk+Pj4wLChnPU1hdGguZmxvb3Iocy8xZTMpLCtNYXRoLmFicyhnKT49MT9nPjA/K01hdGguZmxvb3IoZy80Mjk0OTY3Mjk2KT4+PjA6fn4rTWF0aC5jZWlsKChnLSsofn5nPj4+MCkpLzQyOTQ5NjcyOTYpPj4+MDowKV0seVt0KzcyPj4yXT1TWzBdLHlbdCs3Nj4+Ml09U1sxXSxDW3QrODA+PjJdPXMlMWUzKjFlMyxTPVtuLmlubz4+PjAsKGc9bi5pbm8sK01hdGguYWJzKGcpPj0xP2c+MD8rTWF0aC5mbG9vcihnLzQyOTQ5NjcyOTYpPj4+MDp+fitNYXRoLmNlaWwoKGctKyh+fmc+Pj4wKSkvNDI5NDk2NzI5Nik+Pj4wOjApXSx5W3QrODg+PjJdPVNbMF0seVt0KzkyPj4yXT1TWzFdLDB9LGRvTXN5bmMoZSxyLHQsbixhKXtpZighaS5pc0ZpbGUoci5ub2RlLm1vZGUpKXRocm93IG5ldyBpLkVycm5vRXJyb3IoNDMpO2lmKG4mMilyZXR1cm4gMDt2YXIgbz1OLnNsaWNlKGUsZSt0KTtpLm1zeW5jKHIsbyxhLHQsbil9LGdldFN0cmVhbUZyb21GRChlKXt2YXIgcj1pLmdldFN0cmVhbUNoZWNrZWQoZSk7cmV0dXJuIHJ9LHZhcmFyZ3M6dm9pZCAwLGdldFN0cihlKXt2YXIgcj11ZShlKTtyZXR1cm4gcn19O2Z1bmN0aW9uIFF0KGUscix0LG4pe3RyeXtpZihyPUQuZ2V0U3RyKHIpLHI9RC5jYWxjdWxhdGVBdChlLHIpLHQmLTgpcmV0dXJuLTI4O3ZhciBhPWkubG9va3VwUGF0aChyLHtmb2xsb3c6ITB9KSxvPWEubm9kZTtpZighbylyZXR1cm4tNDQ7dmFyIHM9IiI7cmV0dXJuIHQmNCYmKHMrPSJyIiksdCYyJiYocys9InciKSx0JjEmJihzKz0ieCIpLHMmJmkubm9kZVBlcm1pc3Npb25zKG8scyk/LTI6MH1jYXRjaChsKXtpZih0eXBlb2YgaT4idSJ8fGwubmFtZSE9PSJFcnJub0Vycm9yIil0aHJvdyBsO3JldHVybi1sLmVycm5vfX1mdW5jdGlvbiBWZSgpe3ZhciBlPXlbK0QudmFyYXJncz4+Ml07cmV0dXJuIEQudmFyYXJncys9NCxlfXZhciB2ZT1WZTtmdW5jdGlvbiBlbihlLHIsdCl7RC52YXJhcmdzPXQ7dHJ5e3ZhciBuPUQuZ2V0U3RyZWFtRnJvbUZEKGUpO3N3aXRjaChyKXtjYXNlIDA6e3ZhciBhPVZlKCk7aWYoYTwwKXJldHVybi0yODtmb3IoO2kuc3RyZWFtc1thXTspYSsrO3ZhciBvO3JldHVybiBvPWkuZHVwU3RyZWFtKG4sYSksby5mZH1jYXNlIDE6Y2FzZSAyOnJldHVybiAwO2Nhc2UgMzpyZXR1cm4gbi5mbGFncztjYXNlIDQ6e3ZhciBhPVZlKCk7cmV0dXJuIG4uZmxhZ3N8PWEsMH1jYXNlIDEyOnt2YXIgYT12ZSgpLHM9MDtyZXR1cm4gR1thK3M+PjFdPTIsMH1jYXNlIDEzOmNhc2UgMTQ6cmV0dXJuIDB9cmV0dXJuLTI4fWNhdGNoKGwpe2lmKHR5cGVvZiBpPiJ1Inx8bC5uYW1lIT09IkVycm5vRXJyb3IiKXRocm93IGw7cmV0dXJuLWwuZXJybm99fWZ1bmN0aW9uIHJuKGUscil7dHJ5e3ZhciB0PUQuZ2V0U3RyZWFtRnJvbUZEKGUpO3JldHVybiBELmRvU3RhdChpLnN0YXQsdC5wYXRoLHIpfWNhdGNoKG4pe2lmKHR5cGVvZiBpPiJ1Inx8bi5uYW1lIT09IkVycm5vRXJyb3IiKXRocm93IG47cmV0dXJuLW4uZXJybm99fXZhciBoZT0oZSxyLHQpPT5ucihlLE4scix0KTtmdW5jdGlvbiB0bihlLHIsdCl7dHJ5e3ZhciBuPUQuZ2V0U3RyZWFtRnJvbUZEKGUpO24uZ2V0ZGVudHN8fChuLmdldGRlbnRzPWkucmVhZGRpcihuLnBhdGgpKTtmb3IodmFyIGE9MjgwLG89MCxzPWkubGxzZWVrKG4sMCwxKSxsPU1hdGguZmxvb3Iocy9hKTtsPG4uZ2V0ZGVudHMubGVuZ3RoJiZvK2E8PXQ7KXt2YXIgZixkLGM9bi5nZXRkZW50c1tsXTtpZihjPT09Ii4iKWY9bi5ub2RlLmlkLGQ9NDtlbHNlIGlmKGM9PT0iLi4iKXt2YXIgaD1pLmxvb2t1cFBhdGgobi5wYXRoLHtwYXJlbnQ6ITB9KTtmPWgubm9kZS5pZCxkPTR9ZWxzZXt2YXIgbT1pLmxvb2t1cE5vZGUobi5ub2RlLGMpO2Y9bS5pZCxkPWkuaXNDaHJkZXYobS5tb2RlKT8yOmkuaXNEaXIobS5tb2RlKT80OmkuaXNMaW5rKG0ubW9kZSk/MTA6OH1TPVtmPj4+MCwoZz1mLCtNYXRoLmFicyhnKT49MT9nPjA/K01hdGguZmxvb3IoZy80Mjk0OTY3Mjk2KT4+PjA6fn4rTWF0aC5jZWlsKChnLSsofn5nPj4+MCkpLzQyOTQ5NjcyOTYpPj4+MDowKV0seVtyK28+PjJdPVNbMF0seVtyK28rND4+Ml09U1sxXSxTPVsobCsxKSphPj4+MCwoZz0obCsxKSphLCtNYXRoLmFicyhnKT49MT9nPjA/K01hdGguZmxvb3IoZy80Mjk0OTY3Mjk2KT4+PjA6fn4rTWF0aC5jZWlsKChnLSsofn5nPj4+MCkpLzQyOTQ5NjcyOTYpPj4+MDowKV0seVtyK28rOD4+Ml09U1swXSx5W3IrbysxMj4+Ml09U1sxXSxHW3IrbysxNj4+MV09MjgwLExbcitvKzE4XT1kLGhlKGMscitvKzE5LDI1Niksbys9YSxsKz0xfXJldHVybiBpLmxsc2VlayhuLGwqYSwwKSxvfWNhdGNoKHApe2lmKHR5cGVvZiBpPiJ1Inx8cC5uYW1lIT09IkVycm5vRXJyb3IiKXRocm93IHA7cmV0dXJuLXAuZXJybm99fWZ1bmN0aW9uIG5uKGUscix0KXtELnZhcmFyZ3M9dDt0cnl7dmFyIG49RC5nZXRTdHJlYW1Gcm9tRkQoZSk7c3dpdGNoKHIpe2Nhc2UgMjE1MDk6cmV0dXJuIG4udHR5PzA6LTU5O2Nhc2UgMjE1MDU6e2lmKCFuLnR0eSlyZXR1cm4tNTk7aWYobi50dHkub3BzLmlvY3RsX3RjZ2V0cyl7dmFyIGE9bi50dHkub3BzLmlvY3RsX3RjZ2V0cyhuKSxvPXZlKCk7eVtvPj4yXT1hLmNfaWZsYWd8fDAseVtvKzQ+PjJdPWEuY19vZmxhZ3x8MCx5W28rOD4+Ml09YS5jX2NmbGFnfHwwLHlbbysxMj4+Ml09YS5jX2xmbGFnfHwwO2Zvcih2YXIgcz0wO3M8MzI7cysrKUxbbytzKzE3XT1hLmNfY2Nbc118fDA7cmV0dXJuIDB9cmV0dXJuIDB9Y2FzZSAyMTUxMDpjYXNlIDIxNTExOmNhc2UgMjE1MTI6cmV0dXJuIG4udHR5PzA6LTU5O2Nhc2UgMjE1MDY6Y2FzZSAyMTUwNzpjYXNlIDIxNTA4OntpZighbi50dHkpcmV0dXJuLTU5O2lmKG4udHR5Lm9wcy5pb2N0bF90Y3NldHMpe2Zvcih2YXIgbz12ZSgpLGw9eVtvPj4yXSxmPXlbbys0Pj4yXSxkPXlbbys4Pj4yXSxjPXlbbysxMj4+Ml0saD1bXSxzPTA7czwzMjtzKyspaC5wdXNoKExbbytzKzE3XSk7cmV0dXJuIG4udHR5Lm9wcy5pb2N0bF90Y3NldHMobi50dHkscix7Y19pZmxhZzpsLGNfb2ZsYWc6ZixjX2NmbGFnOmQsY19sZmxhZzpjLGNfY2M6aH0pfXJldHVybiAwfWNhc2UgMjE1MTk6e2lmKCFuLnR0eSlyZXR1cm4tNTk7dmFyIG89dmUoKTtyZXR1cm4geVtvPj4yXT0wLDB9Y2FzZSAyMTUyMDpyZXR1cm4gbi50dHk/LTI4Oi01OTtjYXNlIDIxNTMxOnt2YXIgbz12ZSgpO3JldHVybiBpLmlvY3RsKG4scixvKX1jYXNlIDIxNTIzOntpZighbi50dHkpcmV0dXJuLTU5O2lmKG4udHR5Lm9wcy5pb2N0bF90aW9jZ3dpbnN6KXt2YXIgbT1uLnR0eS5vcHMuaW9jdGxfdGlvY2d3aW5zeihuLnR0eSksbz12ZSgpO0dbbz4+MV09bVswXSxHW28rMj4+MV09bVsxXX1yZXR1cm4gMH1jYXNlIDIxNTI0OnJldHVybiBuLnR0eT8wOi01OTtjYXNlIDIxNTE1OnJldHVybiBuLnR0eT8wOi01OTtkZWZhdWx0OnJldHVybi0yOH19Y2F0Y2gocCl7aWYodHlwZW9mIGk+InUifHxwLm5hbWUhPT0iRXJybm9FcnJvciIpdGhyb3cgcDtyZXR1cm4tcC5lcnJub319ZnVuY3Rpb24gYW4oZSxyKXt0cnl7cmV0dXJuIGU9RC5nZXRTdHIoZSksRC5kb1N0YXQoaS5sc3RhdCxlLHIpfWNhdGNoKHQpe2lmKHR5cGVvZiBpPiJ1Inx8dC5uYW1lIT09IkVycm5vRXJyb3IiKXRocm93IHQ7cmV0dXJuLXQuZXJybm99fWZ1bmN0aW9uIG9uKGUscix0LG4pe3RyeXtyPUQuZ2V0U3RyKHIpO3ZhciBhPW4mMjU2LG89biY0MDk2O3JldHVybiBuPW4mLTY0MDEscj1ELmNhbGN1bGF0ZUF0KGUscixvKSxELmRvU3RhdChhP2kubHN0YXQ6aS5zdGF0LHIsdCl9Y2F0Y2gocyl7aWYodHlwZW9mIGk+InUifHxzLm5hbWUhPT0iRXJybm9FcnJvciIpdGhyb3cgcztyZXR1cm4tcy5lcnJub319ZnVuY3Rpb24gc24oZSxyLHQsbil7RC52YXJhcmdzPW47dHJ5e3I9RC5nZXRTdHIocikscj1ELmNhbGN1bGF0ZUF0KGUscik7dmFyIGE9bj9WZSgpOjA7cmV0dXJuIGkub3BlbihyLHQsYSkuZmR9Y2F0Y2gobyl7aWYodHlwZW9mIGk+InUifHxvLm5hbWUhPT0iRXJybm9FcnJvciIpdGhyb3cgbztyZXR1cm4tby5lcnJub319ZnVuY3Rpb24gbG4oZSxyLHQsbil7dHJ5e3JldHVybiByPUQuZ2V0U3RyKHIpLG49RC5nZXRTdHIobikscj1ELmNhbGN1bGF0ZUF0KGUsciksbj1ELmNhbGN1bGF0ZUF0KHQsbiksaS5yZW5hbWUocixuKSwwfWNhdGNoKGEpe2lmKHR5cGVvZiBpPiJ1Inx8YS5uYW1lIT09IkVycm5vRXJyb3IiKXRocm93IGE7cmV0dXJuLWEuZXJybm99fWZ1bmN0aW9uIHVuKGUpe3RyeXtyZXR1cm4gZT1ELmdldFN0cihlKSxpLnJtZGlyKGUpLDB9Y2F0Y2gocil7aWYodHlwZW9mIGk+InUifHxyLm5hbWUhPT0iRXJybm9FcnJvciIpdGhyb3cgcjtyZXR1cm4tci5lcnJub319ZnVuY3Rpb24gZm4oZSxyKXt0cnl7cmV0dXJuIGU9RC5nZXRTdHIoZSksRC5kb1N0YXQoaS5zdGF0LGUscil9Y2F0Y2godCl7aWYodHlwZW9mIGk+InUifHx0Lm5hbWUhPT0iRXJybm9FcnJvciIpdGhyb3cgdDtyZXR1cm4tdC5lcnJub319ZnVuY3Rpb24gZG4oZSxyLHQpe3RyeXtyZXR1cm4gcj1ELmdldFN0cihyKSxyPUQuY2FsY3VsYXRlQXQoZSxyKSx0PT09MD9pLnVubGluayhyKTp0PT09NTEyP2kucm1kaXIocik6SigiSW52YWxpZCBmbGFncyBwYXNzZWQgdG8gdW5saW5rYXQiKSwwfWNhdGNoKG4pe2lmKHR5cGVvZiBpPiJ1Inx8bi5uYW1lIT09IkVycm5vRXJyb3IiKXRocm93IG47cmV0dXJuLW4uZXJybm99fXZhciBjbj0oKT0+e0ooIiIpfSxMZT17fSxVZT1lPT57Zm9yKDtlLmxlbmd0aDspe3ZhciByPWUucG9wKCksdD1lLnBvcCgpO3Qocil9fTtmdW5jdGlvbiBrZShlKXtyZXR1cm4gdGhpcy5mcm9tV2lyZVR5cGUoQ1tlPj4yXSl9dmFyIG1lPXt9LGRlPXt9LHhlPXt9LFZyLGplPWU9Pnt0aHJvdyBuZXcgVnIoZSl9LFE9KGUscix0KT0+e2UuZm9yRWFjaChmdW5jdGlvbihsKXt4ZVtsXT1yfSk7ZnVuY3Rpb24gbihsKXt2YXIgZj10KGwpO2YubGVuZ3RoIT09ZS5sZW5ndGgmJmplKCJNaXNtYXRjaGVkIHR5cGUgY29udmVydGVyIGNvdW50Iik7Zm9yKHZhciBkPTA7ZDxlLmxlbmd0aDsrK2QpZWUoZVtkXSxmW2RdKX12YXIgYT1uZXcgQXJyYXkoci5sZW5ndGgpLG89W10scz0wO3IuZm9yRWFjaCgobCxmKT0+e2RlLmhhc093blByb3BlcnR5KGwpP2FbZl09ZGVbbF06KG8ucHVzaChsKSxtZS5oYXNPd25Qcm9wZXJ0eShsKXx8KG1lW2xdPVtdKSxtZVtsXS5wdXNoKCgpPT57YVtmXT1kZVtsXSwrK3Mscz09PW8ubGVuZ3RoJiZuKGEpfSkpfSksby5sZW5ndGg9PT0wJiZuKGEpfSx2bj1lPT57dmFyIHI9TGVbZV07ZGVsZXRlIExlW2VdO3ZhciB0PXIucmF3Q29uc3RydWN0b3Isbj1yLnJhd0Rlc3RydWN0b3IsYT1yLmZpZWxkcyxvPWEubWFwKHM9PnMuZ2V0dGVyUmV0dXJuVHlwZSkuY29uY2F0KGEubWFwKHM9PnMuc2V0dGVyQXJndW1lbnRUeXBlKSk7UShbZV0sbyxzPT57dmFyIGw9e307cmV0dXJuIGEuZm9yRWFjaCgoZixkKT0+e3ZhciBjPWYuZmllbGROYW1lLGg9c1tkXSxtPWYuZ2V0dGVyLHA9Zi5nZXR0ZXJDb250ZXh0LEU9c1tkK2EubGVuZ3RoXSxNPWYuc2V0dGVyLEk9Zi5zZXR0ZXJDb250ZXh0O2xbY109e3JlYWQ6VD0+aC5mcm9tV2lyZVR5cGUobShwLFQpKSx3cml0ZTooVCx2KT0+e3ZhciBfPVtdO00oSSxULEUudG9XaXJlVHlwZShfLHYpKSxVZShfKX19fSksW3tuYW1lOnIubmFtZSxmcm9tV2lyZVR5cGU6Zj0+e3ZhciBkPXt9O2Zvcih2YXIgYyBpbiBsKWRbY109bFtjXS5yZWFkKGYpO3JldHVybiBuKGYpLGR9LHRvV2lyZVR5cGU6KGYsZCk9Pntmb3IodmFyIGMgaW4gbClpZighKGMgaW4gZCkpdGhyb3cgbmV3IFR5cGVFcnJvcihgTWlzc2luZyBmaWVsZDogIiR7Y30iYCk7dmFyIGg9dCgpO2ZvcihjIGluIGwpbFtjXS53cml0ZShoLGRbY10pO3JldHVybiBmIT09bnVsbCYmZi5wdXNoKG4saCksaH0sYXJnUGFja0FkdmFuY2U6cmUscmVhZFZhbHVlRnJvbVBvaW50ZXI6a2UsZGVzdHJ1Y3RvckZ1bmN0aW9uOm59XX0pfSxobj0oZSxyLHQsbixhKT0+e30sbW49KCk9Pntmb3IodmFyIGU9bmV3IEFycmF5KDI1Nikscj0wO3I8MjU2OysrcillW3JdPVN0cmluZy5mcm9tQ2hhckNvZGUocik7THI9ZX0sTHIsej1lPT57Zm9yKHZhciByPSIiLHQ9ZTtOW3RdOylyKz1McltOW3QrK11dO3JldHVybiByfSxwZSxBPWU9Pnt0aHJvdyBuZXcgcGUoZSl9O2Z1bmN0aW9uIHBuKGUscix0PXt9KXt2YXIgbj1yLm5hbWU7aWYoZXx8QShgdHlwZSAiJHtufSIgbXVzdCBoYXZlIGEgcG9zaXRpdmUgaW50ZWdlciB0eXBlaWQgcG9pbnRlcmApLGRlLmhhc093blByb3BlcnR5KGUpKXtpZih0Lmlnbm9yZUR1cGxpY2F0ZVJlZ2lzdHJhdGlvbnMpcmV0dXJuO0EoYENhbm5vdCByZWdpc3RlciB0eXBlICcke259JyB0d2ljZWApfWlmKGRlW2VdPXIsZGVsZXRlIHhlW2VdLG1lLmhhc093blByb3BlcnR5KGUpKXt2YXIgYT1tZVtlXTtkZWxldGUgbWVbZV0sYS5mb3JFYWNoKG89Pm8oKSl9fWZ1bmN0aW9uIGVlKGUscix0PXt9KXtpZighKCJhcmdQYWNrQWR2YW5jZSJpbiByKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJyZWdpc3RlclR5cGUgcmVnaXN0ZXJlZEluc3RhbmNlIHJlcXVpcmVzIGFyZ1BhY2tBZHZhbmNlIik7cmV0dXJuIHBuKGUscix0KX12YXIgcmU9OCxfbj0oZSxyLHQsbik9PntyPXoociksZWUoZSx7bmFtZTpyLGZyb21XaXJlVHlwZTpmdW5jdGlvbihhKXtyZXR1cm4hIWF9LHRvV2lyZVR5cGU6ZnVuY3Rpb24oYSxvKXtyZXR1cm4gbz90Om59LGFyZ1BhY2tBZHZhbmNlOnJlLHJlYWRWYWx1ZUZyb21Qb2ludGVyOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmZyb21XaXJlVHlwZShOW2FdKX0sZGVzdHJ1Y3RvckZ1bmN0aW9uOm51bGx9KX0seW49ZT0+KHtjb3VudDplLmNvdW50LGRlbGV0ZVNjaGVkdWxlZDplLmRlbGV0ZVNjaGVkdWxlZCxwcmVzZXJ2ZVBvaW50ZXJPbkRlbGV0ZTplLnByZXNlcnZlUG9pbnRlck9uRGVsZXRlLHB0cjplLnB0cixwdHJUeXBlOmUucHRyVHlwZSxzbWFydFB0cjplLnNtYXJ0UHRyLHNtYXJ0UHRyVHlwZTplLnNtYXJ0UHRyVHlwZX0pLGlyPWU9PntmdW5jdGlvbiByKHQpe3JldHVybiB0LiQkLnB0clR5cGUucmVnaXN0ZXJlZENsYXNzLm5hbWV9QShyKGUpKyIgaW5zdGFuY2UgYWxyZWFkeSBkZWxldGVkIil9LG9yPSExLFVyPWU9Pnt9LGduPWU9PntlLnNtYXJ0UHRyP2Uuc21hcnRQdHJUeXBlLnJhd0Rlc3RydWN0b3IoZS5zbWFydFB0cik6ZS5wdHJUeXBlLnJlZ2lzdGVyZWRDbGFzcy5yYXdEZXN0cnVjdG9yKGUucHRyKX0seHI9ZT0+e2UuY291bnQudmFsdWUtPTE7dmFyIHI9ZS5jb3VudC52YWx1ZT09PTA7ciYmZ24oZSl9LGpyPShlLHIsdCk9PntpZihyPT09dClyZXR1cm4gZTtpZih0LmJhc2VDbGFzcz09PXZvaWQgMClyZXR1cm4gbnVsbDt2YXIgbj1qcihlLHIsdC5iYXNlQ2xhc3MpO3JldHVybiBuPT09bnVsbD9udWxsOnQuZG93bmNhc3Qobil9LHpyPXt9LHduPSgpPT5PYmplY3Qua2V5cyhDZSkubGVuZ3RoLEVuPSgpPT57dmFyIGU9W107Zm9yKHZhciByIGluIENlKUNlLmhhc093blByb3BlcnR5KHIpJiZlLnB1c2goQ2Vbcl0pO3JldHVybiBlfSxiZT1bXSxzcj0oKT0+e2Zvcig7YmUubGVuZ3RoOyl7dmFyIGU9YmUucG9wKCk7ZS4kJC5kZWxldGVTY2hlZHVsZWQ9ITEsZS5kZWxldGUoKX19LFBlLGtuPWU9PntQZT1lLGJlLmxlbmd0aCYmUGUmJlBlKHNyKX0sYm49KCk9Pnt1LmdldEluaGVyaXRlZEluc3RhbmNlQ291bnQ9d24sdS5nZXRMaXZlSW5oZXJpdGVkSW5zdGFuY2VzPUVuLHUuZmx1c2hQZW5kaW5nRGVsZXRlcz1zcix1LnNldERlbGF5RnVuY3Rpb249a259LENlPXt9LFBuPShlLHIpPT57Zm9yKHI9PT12b2lkIDAmJkEoInB0ciBzaG91bGQgbm90IGJlIHVuZGVmaW5lZCIpO2UuYmFzZUNsYXNzOylyPWUudXBjYXN0KHIpLGU9ZS5iYXNlQ2xhc3M7cmV0dXJuIHJ9LENuPShlLHIpPT4ocj1QbihlLHIpLENlW3JdKSx6ZT0oZSxyKT0+eyghci5wdHJUeXBlfHwhci5wdHIpJiZqZSgibWFrZUNsYXNzSGFuZGxlIHJlcXVpcmVzIHB0ciBhbmQgcHRyVHlwZSIpO3ZhciB0PSEhci5zbWFydFB0clR5cGUsbj0hIXIuc21hcnRQdHI7cmV0dXJuIHQhPT1uJiZqZSgiQm90aCBzbWFydFB0clR5cGUgYW5kIHNtYXJ0UHRyIG11c3QgYmUgc3BlY2lmaWVkIiksci5jb3VudD17dmFsdWU6MX0sQWUoT2JqZWN0LmNyZWF0ZShlLHskJDp7dmFsdWU6cix3cml0YWJsZTohMH19KSl9O2Z1bmN0aW9uIEFuKGUpe3ZhciByPXRoaXMuZ2V0UG9pbnRlZShlKTtpZighcilyZXR1cm4gdGhpcy5kZXN0cnVjdG9yKGUpLG51bGw7dmFyIHQ9Q24odGhpcy5yZWdpc3RlcmVkQ2xhc3Mscik7aWYodCE9PXZvaWQgMCl7aWYodC4kJC5jb3VudC52YWx1ZT09PTApcmV0dXJuIHQuJCQucHRyPXIsdC4kJC5zbWFydFB0cj1lLHQuY2xvbmUoKTt2YXIgbj10LmNsb25lKCk7cmV0dXJuIHRoaXMuZGVzdHJ1Y3RvcihlKSxufWZ1bmN0aW9uIGEoKXtyZXR1cm4gdGhpcy5pc1NtYXJ0UG9pbnRlcj96ZSh0aGlzLnJlZ2lzdGVyZWRDbGFzcy5pbnN0YW5jZVByb3RvdHlwZSx7cHRyVHlwZTp0aGlzLnBvaW50ZWVUeXBlLHB0cjpyLHNtYXJ0UHRyVHlwZTp0aGlzLHNtYXJ0UHRyOmV9KTp6ZSh0aGlzLnJlZ2lzdGVyZWRDbGFzcy5pbnN0YW5jZVByb3RvdHlwZSx7cHRyVHlwZTp0aGlzLHB0cjplfSl9dmFyIG89dGhpcy5yZWdpc3RlcmVkQ2xhc3MuZ2V0QWN0dWFsVHlwZShyKSxzPXpyW29dO2lmKCFzKXJldHVybiBhLmNhbGwodGhpcyk7dmFyIGw7dGhpcy5pc0NvbnN0P2w9cy5jb25zdFBvaW50ZXJUeXBlOmw9cy5wb2ludGVyVHlwZTt2YXIgZj1qcihyLHRoaXMucmVnaXN0ZXJlZENsYXNzLGwucmVnaXN0ZXJlZENsYXNzKTtyZXR1cm4gZj09PW51bGw/YS5jYWxsKHRoaXMpOnRoaXMuaXNTbWFydFBvaW50ZXI/emUobC5yZWdpc3RlcmVkQ2xhc3MuaW5zdGFuY2VQcm90b3R5cGUse3B0clR5cGU6bCxwdHI6ZixzbWFydFB0clR5cGU6dGhpcyxzbWFydFB0cjplfSk6emUobC5yZWdpc3RlcmVkQ2xhc3MuaW5zdGFuY2VQcm90b3R5cGUse3B0clR5cGU6bCxwdHI6Zn0pfXZhciBBZT1lPT50eXBlb2YgRmluYWxpemF0aW9uUmVnaXN0cnk+InUiPyhBZT1yPT5yLGUpOihvcj1uZXcgRmluYWxpemF0aW9uUmVnaXN0cnkocj0+e3hyKHIuJCQpfSksQWU9cj0+e3ZhciB0PXIuJCQsbj0hIXQuc21hcnRQdHI7aWYobil7dmFyIGE9eyQkOnR9O29yLnJlZ2lzdGVyKHIsYSxyKX1yZXR1cm4gcn0sVXI9cj0+b3IudW5yZWdpc3RlcihyKSxBZShlKSksRG49KCk9PntPYmplY3QuYXNzaWduKE5lLnByb3RvdHlwZSx7aXNBbGlhc09mKGUpe2lmKCEodGhpcyBpbnN0YW5jZW9mIE5lKXx8IShlIGluc3RhbmNlb2YgTmUpKXJldHVybiExO3ZhciByPXRoaXMuJCQucHRyVHlwZS5yZWdpc3RlcmVkQ2xhc3MsdD10aGlzLiQkLnB0cjtlLiQkPWUuJCQ7Zm9yKHZhciBuPWUuJCQucHRyVHlwZS5yZWdpc3RlcmVkQ2xhc3MsYT1lLiQkLnB0cjtyLmJhc2VDbGFzczspdD1yLnVwY2FzdCh0KSxyPXIuYmFzZUNsYXNzO2Zvcig7bi5iYXNlQ2xhc3M7KWE9bi51cGNhc3QoYSksbj1uLmJhc2VDbGFzcztyZXR1cm4gcj09PW4mJnQ9PT1hfSxjbG9uZSgpe2lmKHRoaXMuJCQucHRyfHxpcih0aGlzKSx0aGlzLiQkLnByZXNlcnZlUG9pbnRlck9uRGVsZXRlKXJldHVybiB0aGlzLiQkLmNvdW50LnZhbHVlKz0xLHRoaXM7dmFyIGU9QWUoT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcykseyQkOnt2YWx1ZTp5bih0aGlzLiQkKX19KSk7cmV0dXJuIGUuJCQuY291bnQudmFsdWUrPTEsZS4kJC5kZWxldGVTY2hlZHVsZWQ9ITEsZX0sZGVsZXRlKCl7dGhpcy4kJC5wdHJ8fGlyKHRoaXMpLHRoaXMuJCQuZGVsZXRlU2NoZWR1bGVkJiYhdGhpcy4kJC5wcmVzZXJ2ZVBvaW50ZXJPbkRlbGV0ZSYmQSgiT2JqZWN0IGFscmVhZHkgc2NoZWR1bGVkIGZvciBkZWxldGlvbiIpLFVyKHRoaXMpLHhyKHRoaXMuJCQpLHRoaXMuJCQucHJlc2VydmVQb2ludGVyT25EZWxldGV8fCh0aGlzLiQkLnNtYXJ0UHRyPXZvaWQgMCx0aGlzLiQkLnB0cj12b2lkIDApfSxpc0RlbGV0ZWQoKXtyZXR1cm4hdGhpcy4kJC5wdHJ9LGRlbGV0ZUxhdGVyKCl7cmV0dXJuIHRoaXMuJCQucHRyfHxpcih0aGlzKSx0aGlzLiQkLmRlbGV0ZVNjaGVkdWxlZCYmIXRoaXMuJCQucHJlc2VydmVQb2ludGVyT25EZWxldGUmJkEoIk9iamVjdCBhbHJlYWR5IHNjaGVkdWxlZCBmb3IgZGVsZXRpb24iKSxiZS5wdXNoKHRoaXMpLGJlLmxlbmd0aD09PTEmJlBlJiZQZShzciksdGhpcy4kJC5kZWxldGVTY2hlZHVsZWQ9ITAsdGhpc319KX07ZnVuY3Rpb24gTmUoKXt9dmFyIERlPShlLHIpPT5PYmplY3QuZGVmaW5lUHJvcGVydHkociwibmFtZSIse3ZhbHVlOmV9KSxOcj0oZSxyLHQpPT57aWYoZVtyXS5vdmVybG9hZFRhYmxlPT09dm9pZCAwKXt2YXIgbj1lW3JdO2Vbcl09ZnVuY3Rpb24oLi4uYSl7cmV0dXJuIGVbcl0ub3ZlcmxvYWRUYWJsZS5oYXNPd25Qcm9wZXJ0eShhLmxlbmd0aCl8fEEoYEZ1bmN0aW9uICcke3R9JyBjYWxsZWQgd2l0aCBhbiBpbnZhbGlkIG51bWJlciBvZiBhcmd1bWVudHMgKCR7YS5sZW5ndGh9KSAtIGV4cGVjdHMgb25lIG9mICgke2Vbcl0ub3ZlcmxvYWRUYWJsZX0pIWApLGVbcl0ub3ZlcmxvYWRUYWJsZVthLmxlbmd0aF0uYXBwbHkodGhpcyxhKX0sZVtyXS5vdmVybG9hZFRhYmxlPVtdLGVbcl0ub3ZlcmxvYWRUYWJsZVtuLmFyZ0NvdW50XT1ufX0sV3I9KGUscix0KT0+e3UuaGFzT3duUHJvcGVydHkoZSk/KCh0PT09dm9pZCAwfHx1W2VdLm92ZXJsb2FkVGFibGUhPT12b2lkIDAmJnVbZV0ub3ZlcmxvYWRUYWJsZVt0XSE9PXZvaWQgMCkmJkEoYENhbm5vdCByZWdpc3RlciBwdWJsaWMgbmFtZSAnJHtlfScgdHdpY2VgKSxOcih1LGUsZSksdS5oYXNPd25Qcm9wZXJ0eSh0KSYmQShgQ2Fubm90IHJlZ2lzdGVyIG11bHRpcGxlIG92ZXJsb2FkcyBvZiBhIGZ1bmN0aW9uIHdpdGggdGhlIHNhbWUgbnVtYmVyIG9mIGFyZ3VtZW50cyAoJHt0fSkhYCksdVtlXS5vdmVybG9hZFRhYmxlW3RdPXIpOih1W2VdPXIsdCE9PXZvaWQgMCYmKHVbZV0ubnVtQXJndW1lbnRzPXQpKX0sU249NDgsJG49NTcsVG49ZT0+e2lmKGU9PT12b2lkIDApcmV0dXJuIl91bmtub3duIjtlPWUucmVwbGFjZSgvW15hLXpBLVowLTlfXS9nLCIkIik7dmFyIHI9ZS5jaGFyQ29kZUF0KDApO3JldHVybiByPj1TbiYmcjw9JG4/YF8ke2V9YDplfTtmdW5jdGlvbiBGbihlLHIsdCxuLGEsbyxzLGwpe3RoaXMubmFtZT1lLHRoaXMuY29uc3RydWN0b3I9cix0aGlzLmluc3RhbmNlUHJvdG90eXBlPXQsdGhpcy5yYXdEZXN0cnVjdG9yPW4sdGhpcy5iYXNlQ2xhc3M9YSx0aGlzLmdldEFjdHVhbFR5cGU9byx0aGlzLnVwY2FzdD1zLHRoaXMuZG93bmNhc3Q9bCx0aGlzLnB1cmVWaXJ0dWFsRnVuY3Rpb25zPVtdfXZhciBXZT0oZSxyLHQpPT57Zm9yKDtyIT09dDspci51cGNhc3R8fEEoYEV4cGVjdGVkIG51bGwgb3IgaW5zdGFuY2Ugb2YgJHt0Lm5hbWV9LCBnb3QgYW4gaW5zdGFuY2Ugb2YgJHtyLm5hbWV9YCksZT1yLnVwY2FzdChlKSxyPXIuYmFzZUNsYXNzO3JldHVybiBlfTtmdW5jdGlvbiBSbihlLHIpe2lmKHI9PT1udWxsKXJldHVybiB0aGlzLmlzUmVmZXJlbmNlJiZBKGBudWxsIGlzIG5vdCBhIHZhbGlkICR7dGhpcy5uYW1lfWApLDA7ci4kJHx8QShgQ2Fubm90IHBhc3MgIiR7Y3Iocil9IiBhcyBhICR7dGhpcy5uYW1lfWApLHIuJCQucHRyfHxBKGBDYW5ub3QgcGFzcyBkZWxldGVkIG9iamVjdCBhcyBhIHBvaW50ZXIgb2YgdHlwZSAke3RoaXMubmFtZX1gKTt2YXIgdD1yLiQkLnB0clR5cGUucmVnaXN0ZXJlZENsYXNzLG49V2Uoci4kJC5wdHIsdCx0aGlzLnJlZ2lzdGVyZWRDbGFzcyk7cmV0dXJuIG59ZnVuY3Rpb24gTW4oZSxyKXt2YXIgdDtpZihyPT09bnVsbClyZXR1cm4gdGhpcy5pc1JlZmVyZW5jZSYmQShgbnVsbCBpcyBub3QgYSB2YWxpZCAke3RoaXMubmFtZX1gKSx0aGlzLmlzU21hcnRQb2ludGVyPyh0PXRoaXMucmF3Q29uc3RydWN0b3IoKSxlIT09bnVsbCYmZS5wdXNoKHRoaXMucmF3RGVzdHJ1Y3Rvcix0KSx0KTowOyghcnx8IXIuJCQpJiZBKGBDYW5ub3QgcGFzcyAiJHtjcihyKX0iIGFzIGEgJHt0aGlzLm5hbWV9YCksci4kJC5wdHJ8fEEoYENhbm5vdCBwYXNzIGRlbGV0ZWQgb2JqZWN0IGFzIGEgcG9pbnRlciBvZiB0eXBlICR7dGhpcy5uYW1lfWApLCF0aGlzLmlzQ29uc3QmJnIuJCQucHRyVHlwZS5pc0NvbnN0JiZBKGBDYW5ub3QgY29udmVydCBhcmd1bWVudCBvZiB0eXBlICR7ci4kJC5zbWFydFB0clR5cGU/ci4kJC5zbWFydFB0clR5cGUubmFtZTpyLiQkLnB0clR5cGUubmFtZX0gdG8gcGFyYW1ldGVyIHR5cGUgJHt0aGlzLm5hbWV9YCk7dmFyIG49ci4kJC5wdHJUeXBlLnJlZ2lzdGVyZWRDbGFzcztpZih0PVdlKHIuJCQucHRyLG4sdGhpcy5yZWdpc3RlcmVkQ2xhc3MpLHRoaXMuaXNTbWFydFBvaW50ZXIpc3dpdGNoKHIuJCQuc21hcnRQdHI9PT12b2lkIDAmJkEoIlBhc3NpbmcgcmF3IHBvaW50ZXIgdG8gc21hcnQgcG9pbnRlciBpcyBpbGxlZ2FsIiksdGhpcy5zaGFyaW5nUG9saWN5KXtjYXNlIDA6ci4kJC5zbWFydFB0clR5cGU9PT10aGlzP3Q9ci4kJC5zbWFydFB0cjpBKGBDYW5ub3QgY29udmVydCBhcmd1bWVudCBvZiB0eXBlICR7ci4kJC5zbWFydFB0clR5cGU/ci4kJC5zbWFydFB0clR5cGUubmFtZTpyLiQkLnB0clR5cGUubmFtZX0gdG8gcGFyYW1ldGVyIHR5cGUgJHt0aGlzLm5hbWV9YCk7YnJlYWs7Y2FzZSAxOnQ9ci4kJC5zbWFydFB0cjticmVhaztjYXNlIDI6aWYoci4kJC5zbWFydFB0clR5cGU9PT10aGlzKXQ9ci4kJC5zbWFydFB0cjtlbHNle3ZhciBhPXIuY2xvbmUoKTt0PXRoaXMucmF3U2hhcmUodCxILnRvSGFuZGxlKCgpPT5hLmRlbGV0ZSgpKSksZSE9PW51bGwmJmUucHVzaCh0aGlzLnJhd0Rlc3RydWN0b3IsdCl9YnJlYWs7ZGVmYXVsdDpBKCJVbnN1cHBvcnRpbmcgc2hhcmluZyBwb2xpY3kiKX1yZXR1cm4gdH1mdW5jdGlvbiBJbihlLHIpe2lmKHI9PT1udWxsKXJldHVybiB0aGlzLmlzUmVmZXJlbmNlJiZBKGBudWxsIGlzIG5vdCBhIHZhbGlkICR7dGhpcy5uYW1lfWApLDA7ci4kJHx8QShgQ2Fubm90IHBhc3MgIiR7Y3Iocil9IiBhcyBhICR7dGhpcy5uYW1lfWApLHIuJCQucHRyfHxBKGBDYW5ub3QgcGFzcyBkZWxldGVkIG9iamVjdCBhcyBhIHBvaW50ZXIgb2YgdHlwZSAke3RoaXMubmFtZX1gKSxyLiQkLnB0clR5cGUuaXNDb25zdCYmQShgQ2Fubm90IGNvbnZlcnQgYXJndW1lbnQgb2YgdHlwZSAke3IuJCQucHRyVHlwZS5uYW1lfSB0byBwYXJhbWV0ZXIgdHlwZSAke3RoaXMubmFtZX1gKTt2YXIgdD1yLiQkLnB0clR5cGUucmVnaXN0ZXJlZENsYXNzLG49V2Uoci4kJC5wdHIsdCx0aGlzLnJlZ2lzdGVyZWRDbGFzcyk7cmV0dXJuIG59dmFyIE9uPSgpPT57T2JqZWN0LmFzc2lnbihIZS5wcm90b3R5cGUse2dldFBvaW50ZWUoZSl7cmV0dXJuIHRoaXMucmF3R2V0UG9pbnRlZSYmKGU9dGhpcy5yYXdHZXRQb2ludGVlKGUpKSxlfSxkZXN0cnVjdG9yKGUpe3ZhciByOyhyPXRoaXMucmF3RGVzdHJ1Y3Rvcik9PW51bGx8fHIuY2FsbCh0aGlzLGUpfSxhcmdQYWNrQWR2YW5jZTpyZSxyZWFkVmFsdWVGcm9tUG9pbnRlcjprZSxmcm9tV2lyZVR5cGU6QW59KX07ZnVuY3Rpb24gSGUoZSxyLHQsbixhLG8scyxsLGYsZCxjKXt0aGlzLm5hbWU9ZSx0aGlzLnJlZ2lzdGVyZWRDbGFzcz1yLHRoaXMuaXNSZWZlcmVuY2U9dCx0aGlzLmlzQ29uc3Q9bix0aGlzLmlzU21hcnRQb2ludGVyPWEsdGhpcy5wb2ludGVlVHlwZT1vLHRoaXMuc2hhcmluZ1BvbGljeT1zLHRoaXMucmF3R2V0UG9pbnRlZT1sLHRoaXMucmF3Q29uc3RydWN0b3I9Zix0aGlzLnJhd1NoYXJlPWQsdGhpcy5yYXdEZXN0cnVjdG9yPWMsIWEmJnIuYmFzZUNsYXNzPT09dm9pZCAwP24/KHRoaXMudG9XaXJlVHlwZT1Sbix0aGlzLmRlc3RydWN0b3JGdW5jdGlvbj1udWxsKToodGhpcy50b1dpcmVUeXBlPUluLHRoaXMuZGVzdHJ1Y3RvckZ1bmN0aW9uPW51bGwpOnRoaXMudG9XaXJlVHlwZT1Nbn12YXIgSHI9KGUscix0KT0+e3UuaGFzT3duUHJvcGVydHkoZSl8fGplKCJSZXBsYWNpbmcgbm9uZXhpc3RlbnQgcHVibGljIHN5bWJvbCIpLHVbZV0ub3ZlcmxvYWRUYWJsZSE9PXZvaWQgMCYmdCE9PXZvaWQgMD91W2VdLm92ZXJsb2FkVGFibGVbdF09cjoodVtlXT1yLHVbZV0uYXJnQ291bnQ9dCl9LFZuPShlLHIsdCk9PntlPWUucmVwbGFjZSgvcC9nLCJpIik7dmFyIG49dVsiZHluQ2FsbF8iK2VdO3JldHVybiBuKHIsLi4udCl9LExuPShlLHIsdD1bXSk9Pnt2YXIgbj1WbihlLHIsdCk7cmV0dXJuIG59LFVuPShlLHIpPT4oLi4udCk9PkxuKGUscix0KSxZPShlLHIpPT57ZT16KGUpO2Z1bmN0aW9uIHQoKXtyZXR1cm4gVW4oZSxyKX12YXIgbj10KCk7cmV0dXJuIHR5cGVvZiBuIT0iZnVuY3Rpb24iJiZBKGB1bmtub3duIGZ1bmN0aW9uIHBvaW50ZXIgd2l0aCBzaWduYXR1cmUgJHtlfTogJHtyfWApLG59LHhuPShlLHIpPT57dmFyIHQ9RGUocixmdW5jdGlvbihuKXt0aGlzLm5hbWU9cix0aGlzLm1lc3NhZ2U9bjt2YXIgYT1uZXcgRXJyb3Iobikuc3RhY2s7YSE9PXZvaWQgMCYmKHRoaXMuc3RhY2s9dGhpcy50b1N0cmluZygpK2AKYCthLnJlcGxhY2UoL15FcnJvcig6W15cbl0qKT9cbi8sIiIpKX0pO3JldHVybiB0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKSx0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10LHQucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWVzc2FnZT09PXZvaWQgMD90aGlzLm5hbWU6YCR7dGhpcy5uYW1lfTogJHt0aGlzLm1lc3NhZ2V9YH0sdH0sQnIsWXI9ZT0+e3ZhciByPXV0KGUpLHQ9eihyKTtyZXR1cm4gcShyKSx0fSxfZT0oZSxyKT0+e3ZhciB0PVtdLG49e307ZnVuY3Rpb24gYShvKXtpZighbltvXSYmIWRlW29dKXtpZih4ZVtvXSl7eGVbb10uZm9yRWFjaChhKTtyZXR1cm59dC5wdXNoKG8pLG5bb109ITB9fXRocm93IHIuZm9yRWFjaChhKSxuZXcgQnIoYCR7ZX06IGArdC5tYXAoWXIpLmpvaW4oWyIsICJdKSl9LGpuPShlLHIsdCxuLGEsbyxzLGwsZixkLGMsaCxtKT0+e2M9eihjKSxvPVkoYSxvKSxsJiYobD1ZKHMsbCkpLGQmJihkPVkoZixkKSksbT1ZKGgsbSk7dmFyIHA9VG4oYyk7V3IocCxmdW5jdGlvbigpe19lKGBDYW5ub3QgY29uc3RydWN0ICR7Y30gZHVlIHRvIHVuYm91bmQgdHlwZXNgLFtuXSl9KSxRKFtlLHIsdF0sbj9bbl06W10sRT0+e3ZhciBWO0U9RVswXTt2YXIgTSxJO24/KE09RS5yZWdpc3RlcmVkQ2xhc3MsST1NLmluc3RhbmNlUHJvdG90eXBlKTpJPU5lLnByb3RvdHlwZTt2YXIgVD1EZShjLGZ1bmN0aW9uKC4uLnlyKXtpZihPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcykhPT12KXRocm93IG5ldyBwZSgiVXNlICduZXcnIHRvIGNvbnN0cnVjdCAiK2MpO2lmKF8uY29uc3RydWN0b3JfYm9keT09PXZvaWQgMCl0aHJvdyBuZXcgcGUoYysiIGhhcyBubyBhY2Nlc3NpYmxlIGNvbnN0cnVjdG9yIik7dmFyIHl0PV8uY29uc3RydWN0b3JfYm9keVt5ci5sZW5ndGhdO2lmKHl0PT09dm9pZCAwKXRocm93IG5ldyBwZShgVHJpZWQgdG8gaW52b2tlIGN0b3Igb2YgJHtjfSB3aXRoIGludmFsaWQgbnVtYmVyIG9mIHBhcmFtZXRlcnMgKCR7eXIubGVuZ3RofSkgLSBleHBlY3RlZCAoJHtPYmplY3Qua2V5cyhfLmNvbnN0cnVjdG9yX2JvZHkpLnRvU3RyaW5nKCl9KSBwYXJhbWV0ZXJzIGluc3RlYWQhYCk7cmV0dXJuIHl0LmFwcGx5KHRoaXMseXIpfSksdj1PYmplY3QuY3JlYXRlKEkse2NvbnN0cnVjdG9yOnt2YWx1ZTpUfX0pO1QucHJvdG90eXBlPXY7dmFyIF89bmV3IEZuKGMsVCx2LG0sTSxvLGwsZCk7Xy5iYXNlQ2xhc3MmJigoVj1fLmJhc2VDbGFzcykuX19kZXJpdmVkQ2xhc3Nlcz8/KFYuX19kZXJpdmVkQ2xhc3Nlcz1bXSksXy5iYXNlQ2xhc3MuX19kZXJpdmVkQ2xhc3Nlcy5wdXNoKF8pKTt2YXIgVT1uZXcgSGUoYyxfLCEwLCExLCExKSxGPW5ldyBIZShjKyIqIixfLCExLCExLCExKSxCPW5ldyBIZShjKyIgY29uc3QqIixfLCExLCEwLCExKTtyZXR1cm4genJbZV09e3BvaW50ZXJUeXBlOkYsY29uc3RQb2ludGVyVHlwZTpCfSxIcihwLFQpLFtVLEYsQl19KX0sbHI9KGUscik9Pntmb3IodmFyIHQ9W10sbj0wO248ZTtuKyspdC5wdXNoKENbcituKjQ+PjJdKTtyZXR1cm4gdH07ZnVuY3Rpb24gR3IoZSl7Zm9yKHZhciByPTE7cjxlLmxlbmd0aDsrK3IpaWYoZVtyXSE9PW51bGwmJmVbcl0uZGVzdHJ1Y3RvckZ1bmN0aW9uPT09dm9pZCAwKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIHFyKGUscil7aWYoIShlIGluc3RhbmNlb2YgRnVuY3Rpb24pKXRocm93IG5ldyBUeXBlRXJyb3IoYG5ld18gY2FsbGVkIHdpdGggY29uc3RydWN0b3IgdHlwZSAke3R5cGVvZiBlfSB3aGljaCBpcyBub3QgYSBmdW5jdGlvbmApO3ZhciB0PURlKGUubmFtZXx8InVua25vd25GdW5jdGlvbk5hbWUiLGZ1bmN0aW9uKCl7fSk7dC5wcm90b3R5cGU9ZS5wcm90b3R5cGU7dmFyIG49bmV3IHQsYT1lLmFwcGx5KG4scik7cmV0dXJuIGEgaW5zdGFuY2VvZiBPYmplY3Q/YTpufWZ1bmN0aW9uIHpuKGUscix0LG4pe2Zvcih2YXIgYT1HcihlKSxvPWUubGVuZ3RoLHM9IiIsbD0iIixmPTA7ZjxvLTI7KytmKXMrPShmIT09MD8iLCAiOiIiKSsiYXJnIitmLGwrPShmIT09MD8iLCAiOiIiKSsiYXJnIitmKyJXaXJlZCI7dmFyIGQ9YAogICAgICAgIHJldHVybiBmdW5jdGlvbiAoJHtzfSkgewogICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoICE9PSAke28tMn0pIHsKICAgICAgICAgIHRocm93QmluZGluZ0Vycm9yKCdmdW5jdGlvbiAnICsgaHVtYW5OYW1lICsgJyBjYWxsZWQgd2l0aCAnICsgYXJndW1lbnRzLmxlbmd0aCArICcgYXJndW1lbnRzLCBleHBlY3RlZCAke28tMn0nKTsKICAgICAgICB9YDthJiYoZCs9YHZhciBkZXN0cnVjdG9ycyA9IFtdOwpgKTt2YXIgYz1hPyJkZXN0cnVjdG9ycyI6Im51bGwiLGg9WyJodW1hbk5hbWUiLCJ0aHJvd0JpbmRpbmdFcnJvciIsImludm9rZXIiLCJmbiIsInJ1bkRlc3RydWN0b3JzIiwicmV0VHlwZSIsImNsYXNzUGFyYW0iXTtyJiYoZCs9InZhciB0aGlzV2lyZWQgPSBjbGFzc1BhcmFtWyd0b1dpcmVUeXBlJ10oIitjK2AsIHRoaXMpOwpgKTtmb3IodmFyIGY9MDtmPG8tMjsrK2YpZCs9InZhciBhcmciK2YrIldpcmVkID0gYXJnVHlwZSIrZisiWyd0b1dpcmVUeXBlJ10oIitjKyIsIGFyZyIrZitgKTsKYCxoLnB1c2goImFyZ1R5cGUiK2YpO3ImJihsPSJ0aGlzV2lyZWQiKyhsLmxlbmd0aD4wPyIsICI6IiIpK2wpLGQrPSh0fHxuPyJ2YXIgcnYgPSAiOiIiKSsiaW52b2tlcihmbiIrKGwubGVuZ3RoPjA/IiwgIjoiIikrbCtgKTsKYDt2YXIgbT10PyJydiI6IiI7aWYoaC5wdXNoKCJBc3luY2lmeSIpLGQrPWBmdW5jdGlvbiBvbkRvbmUoJHttfSkgewpgLGEpZCs9YHJ1bkRlc3RydWN0b3JzKGRlc3RydWN0b3JzKTsKYDtlbHNlIGZvcih2YXIgZj1yPzE6MjtmPGUubGVuZ3RoOysrZil7dmFyIHA9Zj09PTE/InRoaXNXaXJlZCI6ImFyZyIrKGYtMikrIldpcmVkIjtlW2ZdLmRlc3RydWN0b3JGdW5jdGlvbiE9PW51bGwmJihkKz1gJHtwfV9kdG9yKCR7cH0pOwpgLGgucHVzaChgJHtwfV9kdG9yYCkpfXJldHVybiB0JiYoZCs9YHZhciByZXQgPSByZXRUeXBlWydmcm9tV2lyZVR5cGUnXShydik7CnJldHVybiByZXQ7CmApLGQrPWB9CmAsZCs9YHJldHVybiBBc3luY2lmeS5jdXJyRGF0YSA/IEFzeW5jaWZ5LndoZW5Eb25lKCkudGhlbihvbkRvbmUpIDogb25Eb25lKCR7bX0pOwpgLGQrPWB9CmAsW2gsZF19dmFyIEJlPWU9Pnt0cnl7cmV0dXJuIGUoKX1jYXRjaChyKXtKKHIpfX0sWHI9ZT0+e2lmKGUgaW5zdGFuY2VvZiBGcnx8ZT09InVud2luZCIpcmV0dXJuIHdlO1hlKDEsZSl9LE5uPTAsS3I9KCk9Pnp0fHxObj4wLFduPWU9Pnt2YXIgcjt3ZT1lLEtyKCl8fCgocj11Lm9uRXhpdCk9PW51bGx8fHIuY2FsbCh1LGUpLHNlPSEwKSxYZShlLG5ldyBGcihlKSl9LEhuPShlLHIpPT57d2U9ZSxXbihlKX0sQm49SG4sWW49KCk9PntpZighS3IoKSl0cnl7Qm4od2UpfWNhdGNoKGUpe1hyKGUpfX0sR249ZT0+e2lmKCFzZSl0cnl7ZSgpLFluKCl9Y2F0Y2gocil7WHIocil9fSxiPXtpbnN0cnVtZW50V2FzbUltcG9ydHMoZSl7dmFyIHI9L14oaW52b2tlXy4qfF9fYXN5bmNqc19fLiopJC87Zm9yKGxldFt0LG5db2YgT2JqZWN0LmVudHJpZXMoZSkpdHlwZW9mIG49PSJmdW5jdGlvbiImJihuLmlzQXN5bmN8fHIudGVzdCh0KSl9LGluc3RydW1lbnRXYXNtRXhwb3J0cyhlKXt2YXIgcj17fTtmb3IobGV0W3Qsbl1vZiBPYmplY3QuZW50cmllcyhlKSl0eXBlb2Ygbj09ImZ1bmN0aW9uIj9yW3RdPSguLi5hKT0+e2IuZXhwb3J0Q2FsbFN0YWNrLnB1c2godCk7dHJ5e3JldHVybiBuKC4uLmEpfWZpbmFsbHl7c2V8fChiLmV4cG9ydENhbGxTdGFjay5wb3AoKSxiLm1heWJlU3RvcFVud2luZCgpKX19OnJbdF09bjtyZXR1cm4gcn0sU3RhdGU6e05vcm1hbDowLFVud2luZGluZzoxLFJld2luZGluZzoyLERpc2FibGVkOjN9LHN0YXRlOjAsU3RhY2tTaXplOjQwOTYsY3VyckRhdGE6bnVsbCxoYW5kbGVTbGVlcFJldHVyblZhbHVlOjAsZXhwb3J0Q2FsbFN0YWNrOltdLGNhbGxTdGFja05hbWVUb0lkOnt9LGNhbGxTdGFja0lkVG9OYW1lOnt9LGNhbGxTdGFja0lkOjAsYXN5bmNQcm9taXNlSGFuZGxlcnM6bnVsbCxzbGVlcENhbGxiYWNrczpbXSxnZXRDYWxsU3RhY2tJZChlKXt2YXIgcj1iLmNhbGxTdGFja05hbWVUb0lkW2VdO3JldHVybiByPT09dm9pZCAwJiYocj1iLmNhbGxTdGFja0lkKyssYi5jYWxsU3RhY2tOYW1lVG9JZFtlXT1yLGIuY2FsbFN0YWNrSWRUb05hbWVbcl09ZSkscn0sbWF5YmVTdG9wVW53aW5kKCl7Yi5jdXJyRGF0YSYmYi5zdGF0ZT09PWIuU3RhdGUuVW53aW5kaW5nJiZiLmV4cG9ydENhbGxTdGFjay5sZW5ndGg9PT0wJiYoYi5zdGF0ZT1iLlN0YXRlLk5vcm1hbCxCZShjdCksdHlwZW9mIEZpYmVyczwidSImJkZpYmVycy50cmFtcG9saW5lKCkpfSx3aGVuRG9uZSgpe3JldHVybiBuZXcgUHJvbWlzZSgoZSxyKT0+e2IuYXN5bmNQcm9taXNlSGFuZGxlcnM9e3Jlc29sdmU6ZSxyZWplY3Q6cn19KX0sYWxsb2NhdGVEYXRhKCl7dmFyIGU9R2UoMTIrYi5TdGFja1NpemUpO3JldHVybiBiLnNldERhdGFIZWFkZXIoZSxlKzEyLGIuU3RhY2tTaXplKSxiLnNldERhdGFSZXdpbmRGdW5jKGUpLGV9LHNldERhdGFIZWFkZXIoZSxyLHQpe0NbZT4+Ml09cixDW2UrND4+Ml09cit0fSxzZXREYXRhUmV3aW5kRnVuYyhlKXt2YXIgcj1iLmV4cG9ydENhbGxTdGFja1swXSx0PWIuZ2V0Q2FsbFN0YWNrSWQocik7eVtlKzg+PjJdPXR9LGdldERhdGFSZXdpbmRGdW5jKGUpe3ZhciByPXlbZSs4Pj4yXSx0PWIuY2FsbFN0YWNrSWRUb05hbWVbcl0sbj13W3RdO3JldHVybiBufSxkb1Jld2luZChlKXt2YXIgcj1iLmdldERhdGFSZXdpbmRGdW5jKGUpO3JldHVybiByKCl9LGhhbmRsZVNsZWVwKGUpe2lmKCFzZSl7aWYoYi5zdGF0ZT09PWIuU3RhdGUuTm9ybWFsKXt2YXIgcj0hMSx0PSExO2UoKG49MCk9PntpZighc2UmJihiLmhhbmRsZVNsZWVwUmV0dXJuVmFsdWU9bixyPSEwLCEhdCkpe2Iuc3RhdGU9Yi5TdGF0ZS5SZXdpbmRpbmcsQmUoKCk9PnZ0KGIuY3VyckRhdGEpKSx0eXBlb2YgQnJvd3NlcjwidSImJkJyb3dzZXIubWFpbkxvb3AuZnVuYyYmQnJvd3Nlci5tYWluTG9vcC5yZXN1bWUoKTt2YXIgYSxvPSExO3RyeXthPWIuZG9SZXdpbmQoYi5jdXJyRGF0YSl9Y2F0Y2goZil7YT1mLG89ITB9dmFyIHM9ITE7aWYoIWIuY3VyckRhdGEpe3ZhciBsPWIuYXN5bmNQcm9taXNlSGFuZGxlcnM7bCYmKGIuYXN5bmNQcm9taXNlSGFuZGxlcnM9bnVsbCwobz9sLnJlamVjdDpsLnJlc29sdmUpKGEpLHM9ITApfWlmKG8mJiFzKXRocm93IGF9fSksdD0hMCxyfHwoYi5zdGF0ZT1iLlN0YXRlLlVud2luZGluZyxiLmN1cnJEYXRhPWIuYWxsb2NhdGVEYXRhKCksdHlwZW9mIEJyb3dzZXI8InUiJiZCcm93c2VyLm1haW5Mb29wLmZ1bmMmJkJyb3dzZXIubWFpbkxvb3AucGF1c2UoKSxCZSgoKT0+ZHQoYi5jdXJyRGF0YSkpKX1lbHNlIGIuc3RhdGU9PT1iLlN0YXRlLlJld2luZGluZz8oYi5zdGF0ZT1iLlN0YXRlLk5vcm1hbCxCZShodCkscShiLmN1cnJEYXRhKSxiLmN1cnJEYXRhPW51bGwsYi5zbGVlcENhbGxiYWNrcy5mb3JFYWNoKEduKSk6SihgaW52YWxpZCBzdGF0ZTogJHtiLnN0YXRlfWApO3JldHVybiBiLmhhbmRsZVNsZWVwUmV0dXJuVmFsdWV9fSxoYW5kbGVBc3luYyhlKXtyZXR1cm4gYi5oYW5kbGVTbGVlcChyPT57ZSgpLnRoZW4ocil9KX19O2Z1bmN0aW9uIHVyKGUscix0LG4sYSxvKXt2YXIgcz1yLmxlbmd0aDtzPDImJkEoImFyZ1R5cGVzIGFycmF5IHNpemUgbWlzbWF0Y2ghIE11c3QgYXQgbGVhc3QgZ2V0IHJldHVybiB2YWx1ZSBhbmQgJ3RoaXMnIHR5cGVzISIpO2Zvcih2YXIgbD1yWzFdIT09bnVsbCYmdCE9PW51bGwsZj1HcihyKSxkPXJbMF0ubmFtZSE9PSJ2b2lkIixjPVtlLEEsbixhLFVlLHJbMF0sclsxXV0saD0wO2g8cy0yOysraCljLnB1c2gocltoKzJdKTtpZihjLnB1c2goYiksIWYpZm9yKHZhciBoPWw/MToyO2g8ci5sZW5ndGg7KytoKXJbaF0uZGVzdHJ1Y3RvckZ1bmN0aW9uIT09bnVsbCYmYy5wdXNoKHJbaF0uZGVzdHJ1Y3RvckZ1bmN0aW9uKTtsZXRbbSxwXT16bihyLGwsZCxvKTttLnB1c2gocCk7dmFyIEU9cXIoRnVuY3Rpb24sbSkoLi4uYyk7cmV0dXJuIERlKGUsRSl9dmFyIHFuPShlLHIsdCxuLGEsbyk9Pnt2YXIgcz1scihyLHQpO2E9WShuLGEpLFEoW10sW2VdLGw9PntsPWxbMF07dmFyIGY9YGNvbnN0cnVjdG9yICR7bC5uYW1lfWA7aWYobC5yZWdpc3RlcmVkQ2xhc3MuY29uc3RydWN0b3JfYm9keT09PXZvaWQgMCYmKGwucmVnaXN0ZXJlZENsYXNzLmNvbnN0cnVjdG9yX2JvZHk9W10pLGwucmVnaXN0ZXJlZENsYXNzLmNvbnN0cnVjdG9yX2JvZHlbci0xXSE9PXZvaWQgMCl0aHJvdyBuZXcgcGUoYENhbm5vdCByZWdpc3RlciBtdWx0aXBsZSBjb25zdHJ1Y3RvcnMgd2l0aCBpZGVudGljYWwgbnVtYmVyIG9mIHBhcmFtZXRlcnMgKCR7ci0xfSkgZm9yIGNsYXNzICcke2wubmFtZX0nISBPdmVybG9hZCByZXNvbHV0aW9uIGlzIGN1cnJlbnRseSBvbmx5IHBlcmZvcm1lZCB1c2luZyB0aGUgcGFyYW1ldGVyIGNvdW50LCBub3QgYWN0dWFsIHR5cGUgaW5mbyFgKTtyZXR1cm4gbC5yZWdpc3RlcmVkQ2xhc3MuY29uc3RydWN0b3JfYm9keVtyLTFdPSgpPT57X2UoYENhbm5vdCBjb25zdHJ1Y3QgJHtsLm5hbWV9IGR1ZSB0byB1bmJvdW5kIHR5cGVzYCxzKX0sUShbXSxzLGQ9PihkLnNwbGljZSgxLDAsbnVsbCksbC5yZWdpc3RlcmVkQ2xhc3MuY29uc3RydWN0b3JfYm9keVtyLTFdPXVyKGYsZCxudWxsLGEsbyksW10pKSxbXX0pfSxKcj1lPT57ZT1lLnRyaW0oKTtjb25zdCByPWUuaW5kZXhPZigiKCIpO3JldHVybiByIT09LTE/ZS5zdWJzdHIoMCxyKTplfSxYbj0oZSxyLHQsbixhLG8scyxsLGYpPT57dmFyIGQ9bHIodCxuKTtyPXoocikscj1KcihyKSxvPVkoYSxvKSxRKFtdLFtlXSxjPT57Yz1jWzBdO3ZhciBoPWAke2MubmFtZX0uJHtyfWA7ci5zdGFydHNXaXRoKCJAQCIpJiYocj1TeW1ib2xbci5zdWJzdHJpbmcoMildKSxsJiZjLnJlZ2lzdGVyZWRDbGFzcy5wdXJlVmlydHVhbEZ1bmN0aW9ucy5wdXNoKHIpO2Z1bmN0aW9uIG0oKXtfZShgQ2Fubm90IGNhbGwgJHtofSBkdWUgdG8gdW5ib3VuZCB0eXBlc2AsZCl9dmFyIHA9Yy5yZWdpc3RlcmVkQ2xhc3MuaW5zdGFuY2VQcm90b3R5cGUsRT1wW3JdO3JldHVybiBFPT09dm9pZCAwfHxFLm92ZXJsb2FkVGFibGU9PT12b2lkIDAmJkUuY2xhc3NOYW1lIT09Yy5uYW1lJiZFLmFyZ0NvdW50PT09dC0yPyhtLmFyZ0NvdW50PXQtMixtLmNsYXNzTmFtZT1jLm5hbWUscFtyXT1tKTooTnIocCxyLGgpLHBbcl0ub3ZlcmxvYWRUYWJsZVt0LTJdPW0pLFEoW10sZCxNPT57dmFyIEk9dXIoaCxNLGMsbyxzLGYpO3JldHVybiBwW3JdLm92ZXJsb2FkVGFibGU9PT12b2lkIDA/KEkuYXJnQ291bnQ9dC0yLHBbcl09SSk6cFtyXS5vdmVybG9hZFRhYmxlW3QtMl09SSxbXX0pLFtdfSl9LFpyPShlLHIsdCk9PihlIGluc3RhbmNlb2YgT2JqZWN0fHxBKGAke3R9IHdpdGggaW52YWxpZCAidGhpcyI6ICR7ZX1gKSxlIGluc3RhbmNlb2Ygci5yZWdpc3RlcmVkQ2xhc3MuY29uc3RydWN0b3J8fEEoYCR7dH0gaW5jb21wYXRpYmxlIHdpdGggInRoaXMiIG9mIHR5cGUgJHtlLmNvbnN0cnVjdG9yLm5hbWV9YCksZS4kJC5wdHJ8fEEoYGNhbm5vdCBjYWxsIGVtc2NyaXB0ZW4gYmluZGluZyBtZXRob2QgJHt0fSBvbiBkZWxldGVkIG9iamVjdGApLFdlKGUuJCQucHRyLGUuJCQucHRyVHlwZS5yZWdpc3RlcmVkQ2xhc3Msci5yZWdpc3RlcmVkQ2xhc3MpKSxLbj0oZSxyLHQsbixhLG8scyxsLGYsZCk9PntyPXoociksYT1ZKG4sYSksUShbXSxbZV0sYz0+e2M9Y1swXTt2YXIgaD1gJHtjLm5hbWV9LiR7cn1gLG09e2dldCgpe19lKGBDYW5ub3QgYWNjZXNzICR7aH0gZHVlIHRvIHVuYm91bmQgdHlwZXNgLFt0LHNdKX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9O3JldHVybiBmP20uc2V0PSgpPT5fZShgQ2Fubm90IGFjY2VzcyAke2h9IGR1ZSB0byB1bmJvdW5kIHR5cGVzYCxbdCxzXSk6bS5zZXQ9cD0+QShoKyIgaXMgYSByZWFkLW9ubHkgcHJvcGVydHkiKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYy5yZWdpc3RlcmVkQ2xhc3MuaW5zdGFuY2VQcm90b3R5cGUscixtKSxRKFtdLGY/W3Qsc106W3RdLHA9Pnt2YXIgRT1wWzBdLE09e2dldCgpe3ZhciBUPVpyKHRoaXMsYyxoKyIgZ2V0dGVyIik7cmV0dXJuIEUuZnJvbVdpcmVUeXBlKGEobyxUKSl9LGVudW1lcmFibGU6ITB9O2lmKGYpe2Y9WShsLGYpO3ZhciBJPXBbMV07TS5zZXQ9ZnVuY3Rpb24oVCl7dmFyIHY9WnIodGhpcyxjLGgrIiBzZXR0ZXIiKSxfPVtdO2YoZCx2LEkudG9XaXJlVHlwZShfLFQpKSxVZShfKX19cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjLnJlZ2lzdGVyZWRDbGFzcy5pbnN0YW5jZVByb3RvdHlwZSxyLE0pLFtdfSksW119KX0sZnI9W10sYWU9W10sZHI9ZT0+e2U+OSYmLS1hZVtlKzFdPT09MCYmKGFlW2VdPXZvaWQgMCxmci5wdXNoKGUpKX0sSm49KCk9PmFlLmxlbmd0aC8yLTUtZnIubGVuZ3RoLFpuPSgpPT57YWUucHVzaCgwLDEsdm9pZCAwLDEsbnVsbCwxLCEwLDEsITEsMSksdS5jb3VudF9lbXZhbF9oYW5kbGVzPUpufSxIPXt0b1ZhbHVlOmU9PihlfHxBKCJDYW5ub3QgdXNlIGRlbGV0ZWQgdmFsLiBoYW5kbGUgPSAiK2UpLGFlW2VdKSx0b0hhbmRsZTplPT57c3dpdGNoKGUpe2Nhc2Ugdm9pZCAwOnJldHVybiAyO2Nhc2UgbnVsbDpyZXR1cm4gNDtjYXNlITA6cmV0dXJuIDY7Y2FzZSExOnJldHVybiA4O2RlZmF1bHQ6e2NvbnN0IHI9ZnIucG9wKCl8fGFlLmxlbmd0aDtyZXR1cm4gYWVbcl09ZSxhZVtyKzFdPTEscn19fX0sUW49e25hbWU6ImVtc2NyaXB0ZW46OnZhbCIsZnJvbVdpcmVUeXBlOmU9Pnt2YXIgcj1ILnRvVmFsdWUoZSk7cmV0dXJuIGRyKGUpLHJ9LHRvV2lyZVR5cGU6KGUscik9PkgudG9IYW5kbGUociksYXJnUGFja0FkdmFuY2U6cmUscmVhZFZhbHVlRnJvbVBvaW50ZXI6a2UsZGVzdHJ1Y3RvckZ1bmN0aW9uOm51bGx9LFFyPWU9PmVlKGUsUW4pLGNyPWU9PntpZihlPT09bnVsbClyZXR1cm4ibnVsbCI7dmFyIHI9dHlwZW9mIGU7cmV0dXJuIHI9PT0ib2JqZWN0Inx8cj09PSJhcnJheSJ8fHI9PT0iZnVuY3Rpb24iP2UudG9TdHJpbmcoKToiIitlfSxlYT0oZSxyKT0+e3N3aXRjaChyKXtjYXNlIDQ6cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmZyb21XaXJlVHlwZShrclt0Pj4yXSl9O2Nhc2UgODpyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZnJvbVdpcmVUeXBlKGJyW3Q+PjNdKX07ZGVmYXVsdDp0aHJvdyBuZXcgVHlwZUVycm9yKGBpbnZhbGlkIGZsb2F0IHdpZHRoICgke3J9KTogJHtlfWApfX0scmE9KGUscix0KT0+e3I9eihyKSxlZShlLHtuYW1lOnIsZnJvbVdpcmVUeXBlOm49Pm4sdG9XaXJlVHlwZToobixhKT0+YSxhcmdQYWNrQWR2YW5jZTpyZSxyZWFkVmFsdWVGcm9tUG9pbnRlcjplYShyLHQpLGRlc3RydWN0b3JGdW5jdGlvbjpudWxsfSl9LHRhPShlLHIsdCxuLGEsbyxzKT0+e3ZhciBsPWxyKHIsdCk7ZT16KGUpLGU9SnIoZSksYT1ZKG4sYSksV3IoZSxmdW5jdGlvbigpe19lKGBDYW5ub3QgY2FsbCAke2V9IGR1ZSB0byB1bmJvdW5kIHR5cGVzYCxsKX0sci0xKSxRKFtdLGwsZj0+e3ZhciBkPVtmWzBdLG51bGxdLmNvbmNhdChmLnNsaWNlKDEpKTtyZXR1cm4gSHIoZSx1cihlLGQsbnVsbCxhLG8scyksci0xKSxbXX0pfSxuYT0oZSxyLHQpPT57c3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gdD9uPT5MW25dOm49Pk5bbl07Y2FzZSAyOnJldHVybiB0P249Pkdbbj4+MV06bj0+UmVbbj4+MV07Y2FzZSA0OnJldHVybiB0P249Pnlbbj4+Ml06bj0+Q1tuPj4yXTtkZWZhdWx0OnRocm93IG5ldyBUeXBlRXJyb3IoYGludmFsaWQgaW50ZWdlciB3aWR0aCAoJHtyfSk6ICR7ZX1gKX19LGFhPShlLHIsdCxuLGEpPT57cj16KHIpO3ZhciBvPWM9PmM7aWYobj09PTApe3ZhciBzPTMyLTgqdDtvPWM9PmM8PHM+Pj5zfXZhciBsPXIuaW5jbHVkZXMoInVuc2lnbmVkIiksZj0oYyxoKT0+e30sZDtsP2Q9ZnVuY3Rpb24oYyxoKXtyZXR1cm4gZihoLHRoaXMubmFtZSksaD4+PjB9OmQ9ZnVuY3Rpb24oYyxoKXtyZXR1cm4gZihoLHRoaXMubmFtZSksaH0sZWUoZSx7bmFtZTpyLGZyb21XaXJlVHlwZTpvLHRvV2lyZVR5cGU6ZCxhcmdQYWNrQWR2YW5jZTpyZSxyZWFkVmFsdWVGcm9tUG9pbnRlcjpuYShyLHQsbiE9PTApLGRlc3RydWN0b3JGdW5jdGlvbjpudWxsfSl9LGlhPShlLHIsdCk9Pnt2YXIgbj1bSW50OEFycmF5LFVpbnQ4QXJyYXksSW50MTZBcnJheSxVaW50MTZBcnJheSxJbnQzMkFycmF5LFVpbnQzMkFycmF5LEZsb2F0MzJBcnJheSxGbG9hdDY0QXJyYXldLGE9bltyXTtmdW5jdGlvbiBvKHMpe3ZhciBsPUNbcz4+Ml0sZj1DW3MrND4+Ml07cmV0dXJuIG5ldyBhKEwuYnVmZmVyLGYsbCl9dD16KHQpLGVlKGUse25hbWU6dCxmcm9tV2lyZVR5cGU6byxhcmdQYWNrQWR2YW5jZTpyZSxyZWFkVmFsdWVGcm9tUG9pbnRlcjpvfSx7aWdub3JlRHVwbGljYXRlUmVnaXN0cmF0aW9uczohMH0pfSxvYT0oZSxyKT0+e1FyKGUpfSxzYT0oZSxyKT0+e3I9eihyKTt2YXIgdD1yPT09InN0ZDo6c3RyaW5nIjtlZShlLHtuYW1lOnIsZnJvbVdpcmVUeXBlKG4pe3ZhciBhPUNbbj4+Ml0sbz1uKzQscztpZih0KWZvcih2YXIgbD1vLGY9MDtmPD1hOysrZil7dmFyIGQ9bytmO2lmKGY9PWF8fE5bZF09PTApe3ZhciBjPWQtbCxoPXVlKGwsYyk7cz09PXZvaWQgMD9zPWg6KHMrPSJcMCIscys9aCksbD1kKzF9fWVsc2V7Zm9yKHZhciBtPW5ldyBBcnJheShhKSxmPTA7ZjxhOysrZiltW2ZdPVN0cmluZy5mcm9tQ2hhckNvZGUoTltvK2ZdKTtzPW0uam9pbigiIil9cmV0dXJuIHEobiksc30sdG9XaXJlVHlwZShuLGEpe2EgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciYmKGE9bmV3IFVpbnQ4QXJyYXkoYSkpO3ZhciBvLHM9dHlwZW9mIGE9PSJzdHJpbmciO3N8fGEgaW5zdGFuY2VvZiBVaW50OEFycmF5fHxhIGluc3RhbmNlb2YgVWludDhDbGFtcGVkQXJyYXl8fGEgaW5zdGFuY2VvZiBJbnQ4QXJyYXl8fEEoIkNhbm5vdCBwYXNzIG5vbi1zdHJpbmcgdG8gc3RkOjpzdHJpbmciKSx0JiZzP289dHIoYSk6bz1hLmxlbmd0aDt2YXIgbD1HZSg0K28rMSksZj1sKzQ7aWYoQ1tsPj4yXT1vLHQmJnMpaGUoYSxmLG8rMSk7ZWxzZSBpZihzKWZvcih2YXIgZD0wO2Q8bzsrK2Qpe3ZhciBjPWEuY2hhckNvZGVBdChkKTtjPjI1NSYmKHEoZiksQSgiU3RyaW5nIGhhcyBVVEYtMTYgY29kZSB1bml0cyB0aGF0IGRvIG5vdCBmaXQgaW4gOCBiaXRzIikpLE5bZitkXT1jfWVsc2UgZm9yKHZhciBkPTA7ZDxvOysrZClOW2YrZF09YVtkXTtyZXR1cm4gbiE9PW51bGwmJm4ucHVzaChxLGwpLGx9LGFyZ1BhY2tBZHZhbmNlOnJlLHJlYWRWYWx1ZUZyb21Qb2ludGVyOmtlLGRlc3RydWN0b3JGdW5jdGlvbihuKXtxKG4pfX0pfSxldD10eXBlb2YgVGV4dERlY29kZXI8InUiP25ldyBUZXh0RGVjb2RlcigidXRmLTE2bGUiKTp2b2lkIDAsbGE9KGUscik9Pntmb3IodmFyIHQ9ZSxuPXQ+PjEsYT1uK3IvMjshKG4+PWEpJiZSZVtuXTspKytuO2lmKHQ9bjw8MSx0LWU+MzImJmV0KXJldHVybiBldC5kZWNvZGUoTi5zdWJhcnJheShlLHQpKTtmb3IodmFyIG89IiIscz0wOyEocz49ci8yKTsrK3Mpe3ZhciBsPUdbZStzKjI+PjFdO2lmKGw9PTApYnJlYWs7bys9U3RyaW5nLmZyb21DaGFyQ29kZShsKX1yZXR1cm4gb30sdWE9KGUscix0KT0+e2lmKHQ/Pyh0PTIxNDc0ODM2NDcpLHQ8MilyZXR1cm4gMDt0LT0yO2Zvcih2YXIgbj1yLGE9dDxlLmxlbmd0aCoyP3QvMjplLmxlbmd0aCxvPTA7bzxhOysrbyl7dmFyIHM9ZS5jaGFyQ29kZUF0KG8pO0dbcj4+MV09cyxyKz0yfXJldHVybiBHW3I+PjFdPTAsci1ufSxmYT1lPT5lLmxlbmd0aCoyLGRhPShlLHIpPT57Zm9yKHZhciB0PTAsbj0iIjshKHQ+PXIvNCk7KXt2YXIgYT15W2UrdCo0Pj4yXTtpZihhPT0wKWJyZWFrO2lmKCsrdCxhPj02NTUzNil7dmFyIG89YS02NTUzNjtuKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDU1Mjk2fG8+PjEwLDU2MzIwfG8mMTAyMyl9ZWxzZSBuKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGEpfXJldHVybiBufSxjYT0oZSxyLHQpPT57aWYodD8/KHQ9MjE0NzQ4MzY0NyksdDw0KXJldHVybiAwO2Zvcih2YXIgbj1yLGE9bit0LTQsbz0wO288ZS5sZW5ndGg7KytvKXt2YXIgcz1lLmNoYXJDb2RlQXQobyk7aWYocz49NTUyOTYmJnM8PTU3MzQzKXt2YXIgbD1lLmNoYXJDb2RlQXQoKytvKTtzPTY1NTM2KygocyYxMDIzKTw8MTApfGwmMTAyM31pZih5W3I+PjJdPXMscis9NCxyKzQ+YSlicmVha31yZXR1cm4geVtyPj4yXT0wLHItbn0sdmE9ZT0+e2Zvcih2YXIgcj0wLHQ9MDt0PGUubGVuZ3RoOysrdCl7dmFyIG49ZS5jaGFyQ29kZUF0KHQpO24+PTU1Mjk2JiZuPD01NzM0MyYmKyt0LHIrPTR9cmV0dXJuIHJ9LGhhPShlLHIsdCk9Pnt0PXoodCk7dmFyIG4sYSxvLHM7cj09PTI/KG49bGEsYT11YSxzPWZhLG89bD0+UmVbbD4+MV0pOnI9PT00JiYobj1kYSxhPWNhLHM9dmEsbz1sPT5DW2w+PjJdKSxlZShlLHtuYW1lOnQsZnJvbVdpcmVUeXBlOmw9Pntmb3IodmFyIGY9Q1tsPj4yXSxkLGM9bCs0LGg9MDtoPD1mOysraCl7dmFyIG09bCs0K2gqcjtpZihoPT1mfHxvKG0pPT0wKXt2YXIgcD1tLWMsRT1uKGMscCk7ZD09PXZvaWQgMD9kPUU6KGQrPSJcMCIsZCs9RSksYz1tK3J9fXJldHVybiBxKGwpLGR9LHRvV2lyZVR5cGU6KGwsZik9Pnt0eXBlb2YgZiE9InN0cmluZyImJkEoYENhbm5vdCBwYXNzIG5vbi1zdHJpbmcgdG8gQysrIHN0cmluZyB0eXBlICR7dH1gKTt2YXIgZD1zKGYpLGM9R2UoNCtkK3IpO3JldHVybiBDW2M+PjJdPWQvcixhKGYsYys0LGQrciksbCE9PW51bGwmJmwucHVzaChxLGMpLGN9LGFyZ1BhY2tBZHZhbmNlOnJlLHJlYWRWYWx1ZUZyb21Qb2ludGVyOmtlLGRlc3RydWN0b3JGdW5jdGlvbihsKXtxKGwpfX0pfSxtYT0oZSxyLHQsbixhLG8pPT57TGVbZV09e25hbWU6eihyKSxyYXdDb25zdHJ1Y3RvcjpZKHQsbikscmF3RGVzdHJ1Y3RvcjpZKGEsbyksZmllbGRzOltdfX0scGE9KGUscix0LG4sYSxvLHMsbCxmLGQpPT57TGVbZV0uZmllbGRzLnB1c2goe2ZpZWxkTmFtZTp6KHIpLGdldHRlclJldHVyblR5cGU6dCxnZXR0ZXI6WShuLGEpLGdldHRlckNvbnRleHQ6byxzZXR0ZXJBcmd1bWVudFR5cGU6cyxzZXR0ZXI6WShsLGYpLHNldHRlckNvbnRleHQ6ZH0pfSxfYT0oZSxyKT0+e3I9eihyKSxlZShlLHtpc1ZvaWQ6ITAsbmFtZTpyLGFyZ1BhY2tBZHZhbmNlOjAsZnJvbVdpcmVUeXBlOigpPT57fSx0b1dpcmVUeXBlOih0LG4pPT57fX0pfSx5YT0xLGdhPSgpPT55YSx3YT0oZSxyLHQpPT5OLmNvcHlXaXRoaW4oZSxyLHIrdCksdnI9KGUscik9Pnt2YXIgdD1kZVtlXTtyZXR1cm4gdD09PXZvaWQgMCYmQShgJHtyfSBoYXMgdW5rbm93biB0eXBlICR7WXIoZSl9YCksdH0scnQ9KGUscix0KT0+e3ZhciBuPVtdLGE9ZS50b1dpcmVUeXBlKG4sdCk7cmV0dXJuIG4ubGVuZ3RoJiYoQ1tyPj4yXT1ILnRvSGFuZGxlKG4pKSxhfSxFYT0oZSxyLHQpPT4oZT1ILnRvVmFsdWUoZSkscj12cihyLCJlbXZhbDo6YXMiKSxydChyLHQsZSkpLHR0PWU9PmIuaGFuZGxlQXN5bmMoKCk9PihlPUgudG9WYWx1ZShlKSxlLnRoZW4oSC50b0hhbmRsZSkpKTt0dC5pc0FzeW5jPSEwO3ZhciBrYT17fSxiYT1lPT57dmFyIHI9a2FbZV07cmV0dXJuIHI9PT12b2lkIDA/eihlKTpyfSxocj1bXSxQYT0oZSxyLHQsbixhKT0+KGU9aHJbZV0scj1ILnRvVmFsdWUociksdD1iYSh0KSxlKHIsclt0XSxuLGEpKSxDYT1lPT57dmFyIHI9aHIubGVuZ3RoO3JldHVybiBoci5wdXNoKGUpLHJ9LEFhPShlLHIpPT57Zm9yKHZhciB0PW5ldyBBcnJheShlKSxuPTA7bjxlOysrbil0W25dPXZyKENbcituKjQ+PjJdLCJwYXJhbWV0ZXIgIituKTtyZXR1cm4gdH0sRGE9KGUscix0KT0+e3ZhciBuPUFhKGUsciksYT1uLnNoaWZ0KCk7ZS0tO3ZhciBvPWByZXR1cm4gZnVuY3Rpb24gKG9iaiwgZnVuYywgZGVzdHJ1Y3RvcnNSZWYsIGFyZ3MpIHsKYCxzPTAsbD1bXTt0PT09MCYmbC5wdXNoKCJvYmoiKTtmb3IodmFyIGY9WyJyZXRUeXBlIl0sZD1bYV0sYz0wO2M8ZTsrK2MpbC5wdXNoKCJhcmciK2MpLGYucHVzaCgiYXJnVHlwZSIrYyksZC5wdXNoKG5bY10pLG8rPWAgIHZhciBhcmcke2N9ID0gYXJnVHlwZSR7Y30ucmVhZFZhbHVlRnJvbVBvaW50ZXIoYXJncyR7cz8iKyIrczoiIn0pOwpgLHMrPW5bY10uYXJnUGFja0FkdmFuY2U7dmFyIGg9dD09PTE/Im5ldyBmdW5jIjoiZnVuYy5jYWxsIjtvKz1gICB2YXIgcnYgPSAke2h9KCR7bC5qb2luKCIsICIpfSk7CmAsYS5pc1ZvaWR8fChmLnB1c2goImVtdmFsX3JldHVyblZhbHVlIiksZC5wdXNoKHJ0KSxvKz1gICByZXR1cm4gZW12YWxfcmV0dXJuVmFsdWUocmV0VHlwZSwgZGVzdHJ1Y3RvcnNSZWYsIHJ2KTsKYCksbys9YH07CmAsZi5wdXNoKG8pO3ZhciBtPXFyKEZ1bmN0aW9uLGYpKC4uLmQpLHA9YG1ldGhvZENhbGxlcjwoJHtuLm1hcChFPT5FLm5hbWUpLmpvaW4oIiwgIil9KSA9PiAke2EubmFtZX0+YDtyZXR1cm4gQ2EoRGUocCxtKSl9LFNhPSgpPT5ILnRvSGFuZGxlKHt9KSwkYT1lPT57dmFyIHI9SC50b1ZhbHVlKGUpO1VlKHIpLGRyKGUpfSxUYT0oZSxyLHQpPT57ZT1ILnRvVmFsdWUoZSkscj1ILnRvVmFsdWUociksdD1ILnRvVmFsdWUodCksZVtyXT10fSxGYT0oZSxyKT0+e2U9dnIoZSwiX2VtdmFsX3Rha2VfdmFsdWUiKTt2YXIgdD1lLnJlYWRWYWx1ZUZyb21Qb2ludGVyKHIpO3JldHVybiBILnRvSGFuZGxlKHQpfSxudD0oZSxyKT0+cisyMDk3MTUyPj4+MDw0MTk0MzA1LSEhZT8oZT4+PjApK3IqNDI5NDk2NzI5NjpOYU47ZnVuY3Rpb24gUmEoZSxyLHQpe3ZhciBuPW50KGUsciksYT1uZXcgRGF0ZShuKjFlMyk7eVt0Pj4yXT1hLmdldFVUQ1NlY29uZHMoKSx5W3QrND4+Ml09YS5nZXRVVENNaW51dGVzKCkseVt0Kzg+PjJdPWEuZ2V0VVRDSG91cnMoKSx5W3QrMTI+PjJdPWEuZ2V0VVRDRGF0ZSgpLHlbdCsxNj4+Ml09YS5nZXRVVENNb250aCgpLHlbdCsyMD4+Ml09YS5nZXRVVENGdWxsWWVhcigpLTE5MDAseVt0KzI0Pj4yXT1hLmdldFVUQ0RheSgpO3ZhciBvPURhdGUuVVRDKGEuZ2V0VVRDRnVsbFllYXIoKSwwLDEsMCwwLDAsMCkscz0oYS5nZXRUaW1lKCktbykvKDFlMyo2MCo2MCoyNCl8MDt5W3QrMjg+PjJdPXN9dmFyIFllPWU9PmUlND09PTAmJihlJTEwMCE9PTB8fGUlNDAwPT09MCksTWE9KGUscix0LG4pPT57dmFyIGE9bmV3IERhdGUoKS5nZXRGdWxsWWVhcigpLG89bmV3IERhdGUoYSwwLDEpLHM9bmV3IERhdGUoYSw2LDEpLGw9by5nZXRUaW1lem9uZU9mZnNldCgpLGY9cy5nZXRUaW1lem9uZU9mZnNldCgpLGQ9TWF0aC5tYXgobCxmKTtDW2U+PjJdPWQqNjAseVtyPj4yXT0rKGwhPWYpO3ZhciBjPXA9PnAudG9Mb2NhbGVUaW1lU3RyaW5nKHZvaWQgMCx7aG91cjEyOiExLHRpbWVab25lTmFtZToic2hvcnQifSkuc3BsaXQoIiAiKVsxXSxoPWMobyksbT1jKHMpO2Y8bD8oaGUoaCx0LDE3KSxoZShtLG4sMTcpKTooaGUoaCxuLDE3KSxoZShtLHQsMTcpKX0sSWE9KCk9PkRhdGUubm93KCksYXQ9KCk9PjIxNDc0ODM2NDgsT2E9KCk9PmF0KCksaXQ7aXQ9KCk9PnBlcmZvcm1hbmNlLm5vdygpO3ZhciBWYT1lPT57dmFyIHI9RmUuYnVmZmVyLHQ9KGUtci5ieXRlTGVuZ3RoKzY1NTM1KS82NTUzNjt0cnl7cmV0dXJuIEZlLmdyb3codCksUHIoKSwxfWNhdGNoe319LExhPWU9Pnt2YXIgcj1OLmxlbmd0aDtlPj4+PTA7dmFyIHQ9YXQoKTtpZihlPnQpcmV0dXJuITE7Zm9yKHZhciBuPShmLGQpPT5mKyhkLWYlZCklZCxhPTE7YTw9NDthKj0yKXt2YXIgbz1yKigxKy4yL2EpO289TWF0aC5taW4obyxlKzEwMDY2MzI5Nik7dmFyIHM9TWF0aC5taW4odCxuKE1hdGgubWF4KGUsbyksNjU1MzYpKSxsPVZhKHMpO2lmKGwpcmV0dXJuITB9cmV0dXJuITF9LG1yPXt9LFVhPSgpPT5ncnx8Ii4vdGhpcy5wcm9ncmFtIixTZT0oKT0+e2lmKCFTZS5zdHJpbmdzKXt2YXIgZT0odHlwZW9mIG5hdmlnYXRvcj09Im9iamVjdCImJm5hdmlnYXRvci5sYW5ndWFnZXMmJm5hdmlnYXRvci5sYW5ndWFnZXNbMF18fCJDIikucmVwbGFjZSgiLSIsIl8iKSsiLlVURi04IixyPXtVU0VSOiJ3ZWJfdXNlciIsTE9HTkFNRToid2ViX3VzZXIiLFBBVEg6Ii8iLFBXRDoiLyIsSE9NRToiL2hvbWUvd2ViX3VzZXIiLExBTkc6ZSxfOlVhKCl9O2Zvcih2YXIgdCBpbiBtciltclt0XT09PXZvaWQgMD9kZWxldGUgclt0XTpyW3RdPW1yW3RdO3ZhciBuPVtdO2Zvcih2YXIgdCBpbiByKW4ucHVzaChgJHt0fT0ke3JbdF19YCk7U2Uuc3RyaW5ncz1ufXJldHVybiBTZS5zdHJpbmdzfSx4YT0oZSxyKT0+e2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7Kyt0KUxbcisrXT1lLmNoYXJDb2RlQXQodCk7TFtyXT0wfSxqYT0oZSxyKT0+e3ZhciB0PTA7cmV0dXJuIFNlKCkuZm9yRWFjaCgobixhKT0+e3ZhciBvPXIrdDtDW2UrYSo0Pj4yXT1vLHhhKG4sbyksdCs9bi5sZW5ndGgrMX0pLDB9LHphPShlLHIpPT57dmFyIHQ9U2UoKTtDW2U+PjJdPXQubGVuZ3RoO3ZhciBuPTA7cmV0dXJuIHQuZm9yRWFjaChhPT5uKz1hLmxlbmd0aCsxKSxDW3I+PjJdPW4sMH07ZnVuY3Rpb24gTmEoZSl7dHJ5e3ZhciByPUQuZ2V0U3RyZWFtRnJvbUZEKGUpO3JldHVybiBpLmNsb3NlKHIpLDB9Y2F0Y2godCl7aWYodHlwZW9mIGk+InUifHx0Lm5hbWUhPT0iRXJybm9FcnJvciIpdGhyb3cgdDtyZXR1cm4gdC5lcnJub319ZnVuY3Rpb24gV2EoZSxyKXt0cnl7dmFyIHQ9MCxuPTAsYT0wLG89RC5nZXRTdHJlYW1Gcm9tRkQoZSkscz1vLnR0eT8yOmkuaXNEaXIoby5tb2RlKT8zOmkuaXNMaW5rKG8ubW9kZSk/Nzo0O3JldHVybiBMW3JdPXMsR1tyKzI+PjFdPWEsUz1bdD4+PjAsKGc9dCwrTWF0aC5hYnMoZyk+PTE/Zz4wPytNYXRoLmZsb29yKGcvNDI5NDk2NzI5Nik+Pj4wOn5+K01hdGguY2VpbCgoZy0rKH5+Zz4+PjApKS80Mjk0OTY3Mjk2KT4+PjA6MCldLHlbcis4Pj4yXT1TWzBdLHlbcisxMj4+Ml09U1sxXSxTPVtuPj4+MCwoZz1uLCtNYXRoLmFicyhnKT49MT9nPjA/K01hdGguZmxvb3IoZy80Mjk0OTY3Mjk2KT4+PjA6fn4rTWF0aC5jZWlsKChnLSsofn5nPj4+MCkpLzQyOTQ5NjcyOTYpPj4+MDowKV0seVtyKzE2Pj4yXT1TWzBdLHlbcisyMD4+Ml09U1sxXSwwfWNhdGNoKGwpe2lmKHR5cGVvZiBpPiJ1Inx8bC5uYW1lIT09IkVycm5vRXJyb3IiKXRocm93IGw7cmV0dXJuIGwuZXJybm99fXZhciBIYT0oZSxyLHQsbik9Pntmb3IodmFyIGE9MCxvPTA7bzx0O28rKyl7dmFyIHM9Q1tyPj4yXSxsPUNbcis0Pj4yXTtyKz04O3ZhciBmPWkucmVhZChlLEwscyxsLG4pO2lmKGY8MClyZXR1cm4tMTtpZihhKz1mLGY8bClicmVha31yZXR1cm4gYX07ZnVuY3Rpb24gQmEoZSxyLHQsbil7dHJ5e3ZhciBhPUQuZ2V0U3RyZWFtRnJvbUZEKGUpLG89SGEoYSxyLHQpO3JldHVybiBDW24+PjJdPW8sMH1jYXRjaChzKXtpZih0eXBlb2YgaT4idSJ8fHMubmFtZSE9PSJFcnJub0Vycm9yIil0aHJvdyBzO3JldHVybiBzLmVycm5vfX1mdW5jdGlvbiBZYShlLHIsdCxuLGEpe3ZhciBvPW50KHIsdCk7dHJ5e2lmKGlzTmFOKG8pKXJldHVybiA2MTt2YXIgcz1ELmdldFN0cmVhbUZyb21GRChlKTtyZXR1cm4gaS5sbHNlZWsocyxvLG4pLFM9W3MucG9zaXRpb24+Pj4wLChnPXMucG9zaXRpb24sK01hdGguYWJzKGcpPj0xP2c+MD8rTWF0aC5mbG9vcihnLzQyOTQ5NjcyOTYpPj4+MDp+fitNYXRoLmNlaWwoKGctKyh+fmc+Pj4wKSkvNDI5NDk2NzI5Nik+Pj4wOjApXSx5W2E+PjJdPVNbMF0seVthKzQ+PjJdPVNbMV0scy5nZXRkZW50cyYmbz09PTAmJm49PT0wJiYocy5nZXRkZW50cz1udWxsKSwwfWNhdGNoKGwpe2lmKHR5cGVvZiBpPiJ1Inx8bC5uYW1lIT09IkVycm5vRXJyb3IiKXRocm93IGw7cmV0dXJuIGwuZXJybm99fXZhciBHYT0oZSxyLHQsbik9Pntmb3IodmFyIGE9MCxvPTA7bzx0O28rKyl7dmFyIHM9Q1tyPj4yXSxsPUNbcis0Pj4yXTtyKz04O3ZhciBmPWkud3JpdGUoZSxMLHMsbCxuKTtpZihmPDApcmV0dXJuLTE7YSs9Zn1yZXR1cm4gYX07ZnVuY3Rpb24gcWEoZSxyLHQsbil7dHJ5e3ZhciBhPUQuZ2V0U3RyZWFtRnJvbUZEKGUpLG89R2EoYSxyLHQpO3JldHVybiBDW24+PjJdPW8sMH1jYXRjaChzKXtpZih0eXBlb2YgaT4idSJ8fHMubmFtZSE9PSJFcnJub0Vycm9yIil0aHJvdyBzO3JldHVybiBzLmVycm5vfX12YXIgWGE9KGUscik9Pntmb3IodmFyIHQ9MCxuPTA7bjw9cjt0Kz1lW24rK10pO3JldHVybiB0fSxvdD1bMzEsMjksMzEsMzAsMzEsMzAsMzEsMzEsMzAsMzEsMzAsMzFdLHN0PVszMSwyOCwzMSwzMCwzMSwzMCwzMSwzMSwzMCwzMSwzMCwzMV0sS2E9KGUscik9Pntmb3IodmFyIHQ9bmV3IERhdGUoZS5nZXRUaW1lKCkpO3I+MDspe3ZhciBuPVllKHQuZ2V0RnVsbFllYXIoKSksYT10LmdldE1vbnRoKCksbz0obj9vdDpzdClbYV07aWYocj5vLXQuZ2V0RGF0ZSgpKXItPW8tdC5nZXREYXRlKCkrMSx0LnNldERhdGUoMSksYTwxMT90LnNldE1vbnRoKGErMSk6KHQuc2V0TW9udGgoMCksdC5zZXRGdWxsWWVhcih0LmdldEZ1bGxZZWFyKCkrMSkpO2Vsc2UgcmV0dXJuIHQuc2V0RGF0ZSh0LmdldERhdGUoKStyKSx0fXJldHVybiB0fSxKYT0oZSxyKT0+e0wuc2V0KGUscil9LGx0PShlLHIsdCxuKT0+e3ZhciBhPUNbbis0MD4+Ml0sbz17dG1fc2VjOnlbbj4+Ml0sdG1fbWluOnlbbis0Pj4yXSx0bV9ob3VyOnlbbis4Pj4yXSx0bV9tZGF5OnlbbisxMj4+Ml0sdG1fbW9uOnlbbisxNj4+Ml0sdG1feWVhcjp5W24rMjA+PjJdLHRtX3dkYXk6eVtuKzI0Pj4yXSx0bV95ZGF5OnlbbisyOD4+Ml0sdG1faXNkc3Q6eVtuKzMyPj4yXSx0bV9nbXRvZmY6eVtuKzM2Pj4yXSx0bV96b25lOmE/dWUoYSk6IiJ9LHM9dWUodCksbD17IiVjIjoiJWEgJWIgJWQgJUg6JU06JVMgJVkiLCIlRCI6IiVtLyVkLyV5IiwiJUYiOiIlWS0lbS0lZCIsIiVoIjoiJWIiLCIlciI6IiVJOiVNOiVTICVwIiwiJVIiOiIlSDolTSIsIiVUIjoiJUg6JU06JVMiLCIleCI6IiVtLyVkLyV5IiwiJVgiOiIlSDolTTolUyIsIiVFYyI6IiVjIiwiJUVDIjoiJUMiLCIlRXgiOiIlbS8lZC8leSIsIiVFWCI6IiVIOiVNOiVTIiwiJUV5IjoiJXkiLCIlRVkiOiIlWSIsIiVPZCI6IiVkIiwiJU9lIjoiJWUiLCIlT0giOiIlSCIsIiVPSSI6IiVJIiwiJU9tIjoiJW0iLCIlT00iOiIlTSIsIiVPUyI6IiVTIiwiJU91IjoiJXUiLCIlT1UiOiIlVSIsIiVPViI6IiVWIiwiJU93IjoiJXciLCIlT1ciOiIlVyIsIiVPeSI6IiV5In07Zm9yKHZhciBmIGluIGwpcz1zLnJlcGxhY2UobmV3IFJlZ0V4cChmLCJnIiksbFtmXSk7dmFyIGQ9WyJTdW5kYXkiLCJNb25kYXkiLCJUdWVzZGF5IiwiV2VkbmVzZGF5IiwiVGh1cnNkYXkiLCJGcmlkYXkiLCJTYXR1cmRheSJdLGM9WyJKYW51YXJ5IiwiRmVicnVhcnkiLCJNYXJjaCIsIkFwcmlsIiwiTWF5IiwiSnVuZSIsIkp1bHkiLCJBdWd1c3QiLCJTZXB0ZW1iZXIiLCJPY3RvYmVyIiwiTm92ZW1iZXIiLCJEZWNlbWJlciJdO2Z1bmN0aW9uIGgodixfLFUpe2Zvcih2YXIgRj10eXBlb2Ygdj09Im51bWJlciI/di50b1N0cmluZygpOnZ8fCIiO0YubGVuZ3RoPF87KUY9VVswXStGO3JldHVybiBGfWZ1bmN0aW9uIG0odixfKXtyZXR1cm4gaCh2LF8sIjAiKX1mdW5jdGlvbiBwKHYsXyl7ZnVuY3Rpb24gVShCKXtyZXR1cm4gQjwwPy0xOkI+MD8xOjB9dmFyIEY7cmV0dXJuKEY9VSh2LmdldEZ1bGxZZWFyKCktXy5nZXRGdWxsWWVhcigpKSk9PT0wJiYoRj1VKHYuZ2V0TW9udGgoKS1fLmdldE1vbnRoKCkpKT09PTAmJihGPVUodi5nZXREYXRlKCktXy5nZXREYXRlKCkpKSxGfWZ1bmN0aW9uIEUodil7c3dpdGNoKHYuZ2V0RGF5KCkpe2Nhc2UgMDpyZXR1cm4gbmV3IERhdGUodi5nZXRGdWxsWWVhcigpLTEsMTEsMjkpO2Nhc2UgMTpyZXR1cm4gdjtjYXNlIDI6cmV0dXJuIG5ldyBEYXRlKHYuZ2V0RnVsbFllYXIoKSwwLDMpO2Nhc2UgMzpyZXR1cm4gbmV3IERhdGUodi5nZXRGdWxsWWVhcigpLDAsMik7Y2FzZSA0OnJldHVybiBuZXcgRGF0ZSh2LmdldEZ1bGxZZWFyKCksMCwxKTtjYXNlIDU6cmV0dXJuIG5ldyBEYXRlKHYuZ2V0RnVsbFllYXIoKS0xLDExLDMxKTtjYXNlIDY6cmV0dXJuIG5ldyBEYXRlKHYuZ2V0RnVsbFllYXIoKS0xLDExLDMwKX19ZnVuY3Rpb24gTSh2KXt2YXIgXz1LYShuZXcgRGF0ZSh2LnRtX3llYXIrMTkwMCwwLDEpLHYudG1feWRheSksVT1uZXcgRGF0ZShfLmdldEZ1bGxZZWFyKCksMCw0KSxGPW5ldyBEYXRlKF8uZ2V0RnVsbFllYXIoKSsxLDAsNCksQj1FKFUpLFY9RShGKTtyZXR1cm4gcChCLF8pPD0wP3AoVixfKTw9MD9fLmdldEZ1bGxZZWFyKCkrMTpfLmdldEZ1bGxZZWFyKCk6Xy5nZXRGdWxsWWVhcigpLTF9dmFyIEk9eyIlYSI6dj0+ZFt2LnRtX3dkYXldLnN1YnN0cmluZygwLDMpLCIlQSI6dj0+ZFt2LnRtX3dkYXldLCIlYiI6dj0+Y1t2LnRtX21vbl0uc3Vic3RyaW5nKDAsMyksIiVCIjp2PT5jW3YudG1fbW9uXSwiJUMiOnY9Pnt2YXIgXz12LnRtX3llYXIrMTkwMDtyZXR1cm4gbShfLzEwMHwwLDIpfSwiJWQiOnY9Pm0odi50bV9tZGF5LDIpLCIlZSI6dj0+aCh2LnRtX21kYXksMiwiICIpLCIlZyI6dj0+TSh2KS50b1N0cmluZygpLnN1YnN0cmluZygyKSwiJUciOk0sIiVIIjp2PT5tKHYudG1faG91ciwyKSwiJUkiOnY9Pnt2YXIgXz12LnRtX2hvdXI7cmV0dXJuIF89PTA/Xz0xMjpfPjEyJiYoXy09MTIpLG0oXywyKX0sIiVqIjp2PT5tKHYudG1fbWRheStYYShZZSh2LnRtX3llYXIrMTkwMCk/b3Q6c3Qsdi50bV9tb24tMSksMyksIiVtIjp2PT5tKHYudG1fbW9uKzEsMiksIiVNIjp2PT5tKHYudG1fbWluLDIpLCIlbiI6KCk9PmAKYCwiJXAiOnY9PnYudG1faG91cj49MCYmdi50bV9ob3VyPDEyPyJBTSI6IlBNIiwiJVMiOnY9Pm0odi50bV9zZWMsMiksIiV0IjooKT0+IgkiLCIldSI6dj0+di50bV93ZGF5fHw3LCIlVSI6dj0+e3ZhciBfPXYudG1feWRheSs3LXYudG1fd2RheTtyZXR1cm4gbShNYXRoLmZsb29yKF8vNyksMil9LCIlViI6dj0+e3ZhciBfPU1hdGguZmxvb3IoKHYudG1feWRheSs3LSh2LnRtX3dkYXkrNiklNykvNyk7aWYoKHYudG1fd2RheSszNzEtdi50bV95ZGF5LTIpJTc8PTImJl8rKyxfKXtpZihfPT01Myl7dmFyIEY9KHYudG1fd2RheSszNzEtdi50bV95ZGF5KSU3O0YhPTQmJihGIT0zfHwhWWUodi50bV95ZWFyKSkmJihfPTEpfX1lbHNle189NTI7dmFyIFU9KHYudG1fd2RheSs3LXYudG1feWRheS0xKSU3OyhVPT00fHxVPT01JiZZZSh2LnRtX3llYXIlNDAwLTEpKSYmXysrfXJldHVybiBtKF8sMil9LCIldyI6dj0+di50bV93ZGF5LCIlVyI6dj0+e3ZhciBfPXYudG1feWRheSs3LSh2LnRtX3dkYXkrNiklNztyZXR1cm4gbShNYXRoLmZsb29yKF8vNyksMil9LCIleSI6dj0+KHYudG1feWVhcisxOTAwKS50b1N0cmluZygpLnN1YnN0cmluZygyKSwiJVkiOnY9PnYudG1feWVhcisxOTAwLCIleiI6dj0+e3ZhciBfPXYudG1fZ210b2ZmLFU9Xz49MDtyZXR1cm4gXz1NYXRoLmFicyhfKS82MCxfPV8vNjAqMTAwK18lNjAsKFU/IisiOiItIikrKCIwMDAwIitfKS5zbGljZSgtNCl9LCIlWiI6dj0+di50bV96b25lLCIlJSI6KCk9PiIlIn07cz1zLnJlcGxhY2UoLyUlL2csIlwwXDAiKTtmb3IodmFyIGYgaW4gSSlzLmluY2x1ZGVzKGYpJiYocz1zLnJlcGxhY2UobmV3IFJlZ0V4cChmLCJnIiksSVtmXShvKSkpO3M9cy5yZXBsYWNlKC9cMFwwL2csIiUiKTt2YXIgVD1PZShzLCExKTtyZXR1cm4gVC5sZW5ndGg+cj8wOihKYShULGUpLFQubGVuZ3RoLTEpfSxaYT0oZSxyLHQsbixhKT0+bHQoZSxyLHQsbik7aS5jcmVhdGVQcmVsb2FkZWRGaWxlPUp0LGkuc3RhdGljSW5pdCgpLFZyPXUuSW50ZXJuYWxFcnJvcj1jbGFzcyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKHIpe3N1cGVyKHIpLHRoaXMubmFtZT0iSW50ZXJuYWxFcnJvciJ9fSxtbigpLHBlPXUuQmluZGluZ0Vycm9yPWNsYXNzIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3Iocil7c3VwZXIociksdGhpcy5uYW1lPSJCaW5kaW5nRXJyb3IifX0sRG4oKSxibigpLE9uKCksQnI9dS5VbmJvdW5kVHlwZUVycm9yPXhuKEVycm9yLCJVbmJvdW5kVHlwZUVycm9yIiksWm4oKTt2YXIgUWE9e246TnQsYzpIdCxYOlF0LHU6ZW4sVTpybixNOnRuLFo6bm4sUjphbixTOm9uLE46c24sTDpsbixLOnVuLFQ6Zm4sSDpkbixZOmNuLGw6dm4sRTpobixiYTpfbixrOmpuLGo6cW4sYjpYbixhOktuLGFhOlFyLEE6cmEsaTp0YSxmOmFhLGQ6aWEsbzpvYSx6OnNhLHY6aGEsbTptYSxlOnBhLGNhOl9hLFY6Z2EsVzp3YSxfOkVhLEI6dHQsdzpQYSxoOmRyLHg6RGEsZWE6U2EscDokYSxkYTpUYSxnOkZhLEM6UmEsSTpNYSxyOklhLEo6T2EscTppdCxHOkxhLFA6amEsUTp6YSx0Ok5hLE86V2EseTpCYSxEOllhLHM6cWEsJDpsdCxGOlphfSx3PWp0KCksR2U9ZT0+KEdlPXcuaGEpKGUpLHV0PWU9Pih1dD13LmphKShlKSxxPWU9PihxPXcua2EpKGUpLGZ0PWU9PihmdD13Lm1hKShlKTt1LmR5bkNhbGxfaWk9KGUscik9Pih1LmR5bkNhbGxfaWk9dy5uYSkoZSxyKSx1LmR5bkNhbGxfaT1lPT4odS5keW5DYWxsX2k9dy5vYSkoZSksdS5keW5DYWxsX3ZpPShlLHIpPT4odS5keW5DYWxsX3ZpPXcucGEpKGUsciksdS5keW5DYWxsX2lpaT0oZSxyLHQpPT4odS5keW5DYWxsX2lpaT13LnFhKShlLHIsdCksdS5keW5DYWxsX3ZpaWk9KGUscix0LG4pPT4odS5keW5DYWxsX3ZpaWk9dy5yYSkoZSxyLHQsbiksdS5keW5DYWxsX3ZpaT0oZSxyLHQpPT4odS5keW5DYWxsX3ZpaT13LnNhKShlLHIsdCksdS5keW5DYWxsX2RpaT0oZSxyLHQpPT4odS5keW5DYWxsX2RpaT13LnRhKShlLHIsdCksdS5keW5DYWxsX3ZpaWQ9KGUscix0LG4pPT4odS5keW5DYWxsX3ZpaWQ9dy51YSkoZSxyLHQsbiksdS5keW5DYWxsX2lpaWlpPShlLHIsdCxuLGEpPT4odS5keW5DYWxsX2lpaWlpPXcudmEpKGUscix0LG4sYSksdS5keW5DYWxsX3ZpaWlpPShlLHIsdCxuLGEpPT4odS5keW5DYWxsX3ZpaWlpPXcud2EpKGUscix0LG4sYSksdS5keW5DYWxsX2lpaWRpaWk9KGUscix0LG4sYSxvLHMpPT4odS5keW5DYWxsX2lpaWRpaWk9dy54YSkoZSxyLHQsbixhLG8scyksdS5keW5DYWxsX3ZpaWRpaWk9KGUscix0LG4sYSxvLHMpPT4odS5keW5DYWxsX3ZpaWRpaWk9dy55YSkoZSxyLHQsbixhLG8scyksdS5keW5DYWxsX2lpaWRpPShlLHIsdCxuLGEpPT4odS5keW5DYWxsX2lpaWRpPXcuemEpKGUscix0LG4sYSksdS5keW5DYWxsX3ZpaWRpPShlLHIsdCxuLGEpPT4odS5keW5DYWxsX3ZpaWRpPXcuQWEpKGUscix0LG4sYSksdS5keW5DYWxsX2lpaWRkaWlpaT0oZSxyLHQsbixhLG8scyxsLGYpPT4odS5keW5DYWxsX2lpaWRkaWlpaT13LkJhKShlLHIsdCxuLGEsbyxzLGwsZiksdS5keW5DYWxsX2lpZGRpaWlpPShlLHIsdCxuLGEsbyxzLGwpPT4odS5keW5DYWxsX2lpZGRpaWlpPXcuQ2EpKGUscix0LG4sYSxvLHMsbCksdS5keW5DYWxsX2lpaWk9KGUscix0LG4pPT4odS5keW5DYWxsX2lpaWk9dy5EYSkoZSxyLHQsbiksdS5keW5DYWxsX3Y9ZT0+KHUuZHluQ2FsbF92PXcuRWEpKGUpLHUuZHluQ2FsbF9qaWppPShlLHIsdCxuLGEpPT4odS5keW5DYWxsX2ppamk9dy5GYSkoZSxyLHQsbixhKSx1LmR5bkNhbGxfaWlpamk9KGUscix0LG4sYSxvKT0+KHUuZHluQ2FsbF9paWlqaT13LkdhKShlLHIsdCxuLGEsbyksdS5keW5DYWxsX2ppaWlqPShlLHIsdCxuLGEsbyk9Pih1LmR5bkNhbGxfamlpaWo9dy5IYSkoZSxyLHQsbixhLG8pLHUuZHluQ2FsbF92aWlpaWlpPShlLHIsdCxuLGEsbyxzKT0+KHUuZHluQ2FsbF92aWlpaWlpPXcuSWEpKGUscix0LG4sYSxvLHMpLHUuZHluQ2FsbF9paWlpaWo9KGUscix0LG4sYSxvLHMpPT4odS5keW5DYWxsX2lpaWlpaj13LkphKShlLHIsdCxuLGEsbyxzKSx1LmR5bkNhbGxfaWlpaWlpPShlLHIsdCxuLGEsbyk9Pih1LmR5bkNhbGxfaWlpaWlpPXcuS2EpKGUscix0LG4sYSxvKSx1LmR5bkNhbGxfZGQ9KGUscik9Pih1LmR5bkNhbGxfZGQ9dy5MYSkoZSxyKSx1LmR5bkNhbGxfdmlpaWlpaWlpaT0oZSxyLHQsbixhLG8scyxsLGYsZCk9Pih1LmR5bkNhbGxfdmlpaWlpaWlpaT13Lk1hKShlLHIsdCxuLGEsbyxzLGwsZixkKSx1LmR5bkNhbGxfdmlpaWlpPShlLHIsdCxuLGEsbyk9Pih1LmR5bkNhbGxfdmlpaWlpPXcuTmEpKGUscix0LG4sYSxvKSx1LmR5bkNhbGxfdmlpaWlpaWlpPShlLHIsdCxuLGEsbyxzLGwsZik9Pih1LmR5bkNhbGxfdmlpaWlpaWlpPXcuT2EpKGUscix0LG4sYSxvLHMsbCxmKSx1LmR5bkNhbGxfdmlpaWlpaWlpaWlpaWlpPShlLHIsdCxuLGEsbyxzLGwsZixkLGMsaCxtLHAsRSk9Pih1LmR5bkNhbGxfdmlpaWlpaWlpaWlpaWlpPXcuUGEpKGUscix0LG4sYSxvLHMsbCxmLGQsYyxoLG0scCxFKSx1LmR5bkNhbGxfdmlpaWlpaWlpaWlpPShlLHIsdCxuLGEsbyxzLGwsZixkLGMsaCk9Pih1LmR5bkNhbGxfdmlpaWlpaWlpaWlpPXcuUWEpKGUscix0LG4sYSxvLHMsbCxmLGQsYyxoKSx1LmR5bkNhbGxfdmlpaWlpaWk9KGUscix0LG4sYSxvLHMsbCk9Pih1LmR5bkNhbGxfdmlpaWlpaWk9dy5SYSkoZSxyLHQsbixhLG8scyxsKSx1LmR5bkNhbGxfdmlpaWlpaWlpaWlpaT0oZSxyLHQsbixhLG8scyxsLGYsZCxjLGgsbSk9Pih1LmR5bkNhbGxfdmlpaWlpaWlpaWlpaT13LlNhKShlLHIsdCxuLGEsbyxzLGwsZixkLGMsaCxtKSx1LmR5bkNhbGxfaWlpaWlpaT0oZSxyLHQsbixhLG8scyk9Pih1LmR5bkNhbGxfaWlpaWlpaT13LlRhKShlLHIsdCxuLGEsbyxzKSx1LmR5bkNhbGxfdmlpaWlpaWlpaWk9KGUscix0LG4sYSxvLHMsbCxmLGQsYyk9Pih1LmR5bkNhbGxfdmlpaWlpaWlpaWk9dy5VYSkoZSxyLHQsbixhLG8scyxsLGYsZCxjKSx1LmR5bkNhbGxfaWlkaWlpaT0oZSxyLHQsbixhLG8scyk9Pih1LmR5bkNhbGxfaWlkaWlpaT13LlZhKShlLHIsdCxuLGEsbyxzKSx1LmR5bkNhbGxfdmlpamlpPShlLHIsdCxuLGEsbyxzKT0+KHUuZHluQ2FsbF92aWlqaWk9dy5XYSkoZSxyLHQsbixhLG8scyksdS5keW5DYWxsX2lpaWlpaWlpaT0oZSxyLHQsbixhLG8scyxsLGYpPT4odS5keW5DYWxsX2lpaWlpaWlpaT13LlhhKShlLHIsdCxuLGEsbyxzLGwsZiksdS5keW5DYWxsX2lpaWlpZD0oZSxyLHQsbixhLG8pPT4odS5keW5DYWxsX2lpaWlpZD13LllhKShlLHIsdCxuLGEsbyksdS5keW5DYWxsX2lpaWlpamo9KGUscix0LG4sYSxvLHMsbCxmKT0+KHUuZHluQ2FsbF9paWlpaWpqPXcuWmEpKGUscix0LG4sYSxvLHMsbCxmKSx1LmR5bkNhbGxfaWlpaWlpaWk9KGUscix0LG4sYSxvLHMsbCk9Pih1LmR5bkNhbGxfaWlpaWlpaWk9dy5fYSkoZSxyLHQsbixhLG8scyxsKSx1LmR5bkNhbGxfaWlpaWlpamo9KGUscix0LG4sYSxvLHMsbCxmLGQpPT4odS5keW5DYWxsX2lpaWlpaWpqPXcuJGEpKGUscix0LG4sYSxvLHMsbCxmLGQpO3ZhciBkdD1lPT4oZHQ9dy5hYikoZSksY3Q9KCk9PihjdD13LmJiKSgpLHZ0PWU9Pih2dD13LmNiKShlKSxodD0oKT0+KGh0PXcuZGIpKCk7dS5fZmZfaDI2NF9jYWJhY190YWJsZXM9MjA2Njg0O3ZhciBxZTtFZT1mdW5jdGlvbiBlKCl7cWV8fG10KCkscWV8fChFZT1lKX07ZnVuY3Rpb24gbXQoKXtpZihsZT4wfHwoJHQoKSxsZT4wKSlyZXR1cm47ZnVuY3Rpb24gZSgpe3FlfHwocWU9ITAsdS5jYWxsZWRSdW49ITAsIXNlJiYoVHQoKSxqKHUpLHUub25SdW50aW1lSW5pdGlhbGl6ZWQmJnUub25SdW50aW1lSW5pdGlhbGl6ZWQoKSxGdCgpKSl9dS5zZXRTdGF0dXM/KHUuc2V0U3RhdHVzKCJSdW5uaW5nLi4uIiksc2V0VGltZW91dChmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt1LnNldFN0YXR1cygiIil9LDEpLGUoKX0sMSkpOmUoKX1pZih1LnByZUluaXQpZm9yKHR5cGVvZiB1LnByZUluaXQ9PSJmdW5jdGlvbiImJih1LnByZUluaXQ9W3UucHJlSW5pdF0pO3UucHJlSW5pdC5sZW5ndGg+MDspdS5wcmVJbml0LnBvcCgpKCk7bXQoKTtsZXQgcHQ9MzI7ZnVuY3Rpb24gX3QoZSxyPTMsdD01MDApe2xldCBuPTA7Zm9yKDtuPHI7KXRyeXtyZXR1cm4gZSgpfWNhdGNoKGEpe2lmKHB0Pj0yNCYmY29uc29sZS53YXJuKGBBdHRlbXB0ICR7bisxfSBmYWlsZWQ6ICR7YS5tZXNzYWdlfWApLG4rKyxuPj1yKXRocm93IG5ldyBFcnJvcihgRmFpbGVkIGFmdGVyICR7cn0gYXR0ZW1wdHNgKX19ZnVuY3Rpb24gZWkoZSl7Y29uc3Qgcj1uZXcgWE1MSHR0cFJlcXVlc3Q7aWYoci5vcGVuKCJIRUFEIixlLCExKSxyLnNlbmQoKSxyLnN0YXR1cyE9PTIwMCl0aHJvdyBuZXcgRXJyb3IoYGdldEZpbGVTaXplIHJlcXVlc3QgZmFpbGVkOiAke2V9YCk7cmV0dXJuIHBhcnNlSW50KHIuZ2V0UmVzcG9uc2VIZWFkZXIoIkNvbnRlbnQtTGVuZ3RoIikpfWZ1bmN0aW9uIHJpKGUscix0KXtjb25zdCBuPW5ldyBYTUxIdHRwUmVxdWVzdDtpZihuLm9wZW4oIkdFVCIsZSwhMSksbi5zZXRSZXF1ZXN0SGVhZGVyKCJSYW5nZSIsYGJ5dGVzPSR7cn0tJHtyK3QtMX1gKSxuLnJlc3BvbnNlVHlwZT0iYXJyYXlidWZmZXIiLG4uc2VuZCgpLG4uc3RhdHVzIT09MjA2JiZuLnN0YXR1cyE9PTIwMCl0aHJvdyBuZXcgRXJyb3IoYGZldGNoQXJyYXlCdWZmZXIgcmVxdWVzdCBmYWlsZWQ6ICR7ZX1gKTtyZXR1cm4gbi5yZXNwb25zZX1jbGFzcyB5ZXtjb25zdHJ1Y3RvcihyKXtsZXQgdDt0eXBlb2Ygcj09InN0cmluZyI/KHQ9bmV3IEZpbGUoW10sZW5jb2RlVVJJQ29tcG9uZW50KHIpKSxpLmZpbGVzeXN0ZW1zLldPUktFUkZTLnN0cmVhbV9vcHMucmVhZD1mdW5jdGlvbihhLG8scyxsLGYpe2NvbnN0IGQ9ZGVjb2RlVVJJQ29tcG9uZW50KGEubm9kZS5jb250ZW50cy5uYW1lKTtpZihhLm5vZGUuc2l6ZT09PTAmJihhLm5vZGUuc2l6ZT1fdCgoKT0+ZWkoZCkpKSxmPj1hLm5vZGUuc2l6ZSlyZXR1cm4gMDtjb25zdCBjPV90KCgpPT5yaShkLGYsbCkpLGg9Yy5ieXRlTGVuZ3RoO3JldHVybiBvLnNldChuZXcgVWludDhBcnJheShjKSxzKSxofSk6dD1yLHRoaXMubW91bnRQb2ludD0iL2RhdGEiLHRoaXMubW91bnRPcHRzPXtmaWxlczpbdF19LHRoaXMuZmlsZVBhdGg9dGhpcy5tb3VudFBvaW50KyIvIit0Lm5hbWV9bW91bnQoKXtpLm1rZGlyKHRoaXMubW91bnRQb2ludCksaS5tb3VudChpLmZpbGVzeXN0ZW1zLldPUktFUkZTLHRoaXMubW91bnRPcHRzLHRoaXMubW91bnRQb2ludCl9dW5tb3VudCgpe2kudW5tb3VudCh0aGlzLm1vdW50UG9pbnQpLGkucm1kaXIodGhpcy5tb3VudFBvaW50KX19ZnVuY3Rpb24gcHIoZSl7Y29uc3Qgcj1uZXcgVWludDhBcnJheShlLmV4dHJhZGF0YSksdD17aWQ6ZS5pZCxpbmRleDplLmluZGV4LGNvZGVjX3R5cGU6ZS5jb2RlY190eXBlLGNvZGVjX3R5cGVfc3RyaW5nOmUuY29kZWNfdHlwZV9zdHJpbmcsY29kZWNfbmFtZTplLmNvZGVjX25hbWUsY29kZWNfc3RyaW5nOmUuY29kZWNfc3RyaW5nLGNvbG9yX3ByaW1hcmllczplLmNvbG9yX3ByaW1hcmllcyxjb2xvcl90cmFuc2ZlcjplLmNvbG9yX3RyYW5zZmVyLGNvbG9yX3NwYWNlOmUuY29sb3Jfc3BhY2UsY29sb3JfcmFuZ2U6ZS5jb2xvcl9yYW5nZSxwcm9maWxlOmUucHJvZmlsZSxwaXhfZm10OmUucGl4X2ZtdCxsZXZlbDplLmxldmVsLHdpZHRoOmUud2lkdGgsaGVpZ2h0OmUuaGVpZ2h0LGNoYW5uZWxzOmUuY2hhbm5lbHMsc2FtcGxlX3JhdGU6ZS5zYW1wbGVfcmF0ZSxzYW1wbGVfZm10OmUuc2FtcGxlX2ZtdCxiaXRfcmF0ZTplLmJpdF9yYXRlLGV4dHJhZGF0YV9zaXplOmUuZXh0cmFkYXRhX3NpemUsZXh0cmFkYXRhOnIscl9mcmFtZV9yYXRlOmUucl9mcmFtZV9yYXRlLGF2Z19mcmFtZV9yYXRlOmUuYXZnX2ZyYW1lX3JhdGUsc2FtcGxlX2FzcGVjdF9yYXRpbzplLnNhbXBsZV9hc3BlY3RfcmF0aW8sZGlzcGxheV9hc3BlY3RfcmF0aW86ZS5kaXNwbGF5X2FzcGVjdF9yYXRpbyxzdGFydF90aW1lOmUuc3RhcnRfdGltZSxkdXJhdGlvbjplLmR1cmF0aW9uLHJvdGF0aW9uOmUucm90YXRpb24sbmJfZnJhbWVzOmUubmJfZnJhbWVzLHRhZ3M6ZS50YWdzfTtyZXR1cm4gZS5kZWxldGUoKSx0fWZ1bmN0aW9uIF9yKGUpe2NvbnN0IHI9bmV3IFVpbnQ4QXJyYXkoZS5kYXRhKSx0PXtrZXlmcmFtZTplLmtleWZyYW1lLHRpbWVzdGFtcDplLnRpbWVzdGFtcCxkdXJhdGlvbjplLmR1cmF0aW9uLHNpemU6ZS5zaXplLGRhdGE6cn07cmV0dXJuIGUuZGVsZXRlKCksdH1mdW5jdGlvbiB0aShlLHI9MCx0PS0xKXtjb25zdCBuPW5ldyB5ZShlKTtuLm1vdW50KCk7dHJ5e2NvbnN0IGE9dS5nZXRfYXZfc3RyZWFtKG4uZmlsZVBhdGgscix0KTtyZXR1cm4gcHIoYSl9Y2F0Y2goYSl7dGhyb3cgbmV3IEVycm9yKCJnZXRfYXZfc3RyZWFtIGZhaWxlZDogIithLm1lc3NhZ2UpfWZpbmFsbHl7bi51bm1vdW50KCl9fWZ1bmN0aW9uIG5pKGUpe2NvbnN0IHI9bmV3IHllKGUpO3IubW91bnQoKTt0cnl7Y29uc3QgdD11LmdldF9hdl9zdHJlYW1zKHIuZmlsZVBhdGgpLG49W107Zm9yKGxldCBhPTA7YTx0LnN0cmVhbXMuc2l6ZSgpO2ErKyluLnB1c2gocHIodC5zdHJlYW1zLmdldChhKSkpO3JldHVybiB0LnN0cmVhbXMuZGVsZXRlKCksbn1jYXRjaCh0KXt0aHJvdyBuZXcgRXJyb3IoImdldF9hdl9zdHJlYW1zIGZhaWxlZDogIit0Lm1lc3NhZ2UpfWZpbmFsbHl7ci51bm1vdW50KCl9fWZ1bmN0aW9uIGFpKGUpe2NvbnN0IHI9bmV3IHllKGUpO3IubW91bnQoKTt0cnl7Y29uc3QgdD11LmdldF9tZWRpYV9pbmZvKHIuZmlsZVBhdGgpLG49e2Zvcm1hdF9uYW1lOnQuZm9ybWF0X25hbWUsZHVyYXRpb246dC5kdXJhdGlvbixiaXRfcmF0ZTp0LmJpdF9yYXRlLHN0YXJ0X3RpbWU6dC5zdGFydF90aW1lLG5iX3N0cmVhbXM6dC5uYl9zdHJlYW1zLHN0cmVhbXM6W119O2ZvcihsZXQgYT0wO2E8dC5zdHJlYW1zLnNpemUoKTthKyspbi5zdHJlYW1zLnB1c2gocHIodC5zdHJlYW1zLmdldChhKSkpO3JldHVybiB0LnN0cmVhbXMuZGVsZXRlKCksbn1jYXRjaCh0KXt0aHJvdyBuZXcgRXJyb3IoImdldF9tZWRpYV9pbmZvIGZhaWxlZDogIit0Lm1lc3NhZ2UpfWZpbmFsbHl7ci51bm1vdW50KCl9fWZ1bmN0aW9uIGlpKGUscix0PTAsbj0tMSxhPTEpe2NvbnN0IG89bmV3IHllKGUpO28ubW91bnQoKTt0cnl7Y29uc3Qgcz11LmdldF9hdl9wYWNrZXQoby5maWxlUGF0aCxyLHQsbixhKTtyZXR1cm4gX3Iocyl9Y2F0Y2gocyl7dGhyb3cgbmV3IEVycm9yKCJnZXRfYXZfcGFja2V0IGZhaWxlZDogIitzLm1lc3NhZ2UpfWZpbmFsbHl7by51bm1vdW50KCl9fWZ1bmN0aW9uIG9pKGUscix0PTEpe2NvbnN0IG49bmV3IHllKGUpO24ubW91bnQoKTt0cnl7Y29uc3QgYT11LmdldF9hdl9wYWNrZXRzKG4uZmlsZVBhdGgscix0KSxvPVtdO2ZvcihsZXQgcz0wO3M8YS5wYWNrZXRzLnNpemUoKTtzKyspby5wdXNoKF9yKGEucGFja2V0cy5nZXQocykpKTtyZXR1cm4gYS5wYWNrZXRzLmRlbGV0ZSgpLG99Y2F0Y2goYSl7dGhyb3cgbmV3IEVycm9yKCJnZXRfYXZfcGFja2V0cyBmYWlsZWQ6ICIrYS5tZXNzYWdlKX1maW5hbGx5e24udW5tb3VudCgpfX1hc3luYyBmdW5jdGlvbiBzaShlLHIsdD0wLG49MCxhPTAsbz0tMSxzPTEpe2NvbnN0IGw9bmV3IHllKHIpO2wubW91bnQoKTt0cnl7aWYoYXdhaXQgdS5yZWFkX2F2X3BhY2tldChsLmZpbGVQYXRoLHQsbixhLG8scyx7c2VuZEFWUGFja2V0OmxpKGUpfSk9PT0wKXRocm93IG5ldyBFcnJvcigicmV0dXJuIDAiKX1jYXRjaChmKXt0aHJvdyBuZXcgRXJyb3IoInJlYWRfYXZfcGFja2V0IGZhaWxlZDogIitmLm1lc3NhZ2UpfWZpbmFsbHl7bC51bm1vdW50KCl9fWZ1bmN0aW9uIGxpKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFByb21pc2Uobj0+e2NvbnN0IGE9e3R5cGU6IkFWUGFja2V0U3RyZWFtIixtc2dJZDplLHJlc3VsdDpudWxsfTtpZih0PT09MCl7c2VsZi5wb3N0TWVzc2FnZShhKSxuKDEpO3JldHVybn1jb25zdCBvPV9yKHQpO2EucmVzdWx0PW8sc2VsZi5wb3N0TWVzc2FnZShhLFtvLmRhdGEuYnVmZmVyXSk7Y29uc3Qgcz1sPT57Y29uc3R7dHlwZTpmLG1zZ0lkOmR9PWwuZGF0YTtkPT09ZSYmKGY9PT0iUmVhZE5leHRBVlBhY2tldCI/KHNlbGYucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyksbigxKSk6Zj09PSJTdG9wUmVhZEFWUGFja2V0IiYmKHNlbGYucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyksbigwKSkpfTtzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpfSl9fWZ1bmN0aW9uIHVpKGUpe3B0PWUsdS5zZXRfYXZfbG9nX2xldmVsKGUpfXJldHVybiB1LmdldEFWU3RyZWFtPXRpLHUuZ2V0QVZTdHJlYW1zPW5pLHUuZ2V0TWVkaWFJbmZvPWFpLHUuZ2V0QVZQYWNrZXQ9aWksdS5nZXRBVlBhY2tldHM9b2ksdS5yZWFkQVZQYWNrZXQ9c2ksdS5zZXRBVkxvZ0xldmVsPXVpLCQ9aWUsJH19KSgpO2xldCB0ZTtzZWxmLnBvc3RNZXNzYWdlKHt0eXBlOlguV2FzbVdvcmtlckxvYWRlZH0pLHNlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsYXN5bmMgZnVuY3Rpb24oayl7Y29uc3R7dHlwZTpPLGRhdGE6JCxtc2dJZDp1fT1rLmRhdGE7dHJ5e3N3aXRjaChPKXtjYXNlIkxvYWRXQVNNIjpyZXR1cm4gYXdhaXQgd3QoJCk7Y2FzZSJHZXRBVlN0cmVhbSI6cmV0dXJuIEV0KCQsdSk7Y2FzZSJHZXRBVlN0cmVhbXMiOnJldHVybiBrdCgkLHUpO2Nhc2UiR2V0TWVkaWFJbmZvIjpyZXR1cm4gYnQoJCx1KTtjYXNlIkdldEFWUGFja2V0IjpyZXR1cm4gUHQoJCx1KTtjYXNlIkdldEFWUGFja2V0cyI6cmV0dXJuIEN0KCQsdSk7Y2FzZSJSZWFkQVZQYWNrZXQiOnJldHVybiBhd2FpdCBBdCgkLHUpO2Nhc2UiU2V0QVZMb2dMZXZlbCI6cmV0dXJuIER0KCQsdSk7ZGVmYXVsdDpyZXR1cm59fWNhdGNoKGope3NlbGYucG9zdE1lc3NhZ2Uoe3R5cGU6Tyxtc2dJZDp1LGVyck1zZzpqIGluc3RhbmNlb2YgRXJyb3I/ai5tZXNzYWdlOiJVbmtub3duIEVycm9yIn0pfX0pO2FzeW5jIGZ1bmN0aW9uIHd0KGspe2NvbnN0e3dhc21GaWxlUGF0aDpPfT1rfHx7fTt0ZT1hd2FpdCBndCh7bG9jYXRlRmlsZTooJCx1KT0+JC5lbmRzV2l0aCgiLndhc20iKSYmTz9POnUrJCxvblJ1bnRpbWVJbml0aWFsaXplZDooKT0+e3NlbGYucG9zdE1lc3NhZ2Uoe3R5cGU6WC5XQVNNUnVudGltZUluaXRpYWxpemVkfSl9fSl9ZnVuY3Rpb24gRXQoayxPKXtjb25zdHtzb3VyY2U6JCxzdHJlYW1UeXBlOnUsc3RyZWFtSW5kZXg6an09ayxXPXRlLmdldEFWU3RyZWFtKCQsdSxqKTtzZWxmLnBvc3RNZXNzYWdlKHt0eXBlOlguR2V0QVZTdHJlYW0sbXNnSWQ6TyxyZXN1bHQ6V30sW1cuZXh0cmFkYXRhLmJ1ZmZlcl0pfWZ1bmN0aW9uIGt0KGssTyl7Y29uc3R7c291cmNlOiR9PWssdT10ZS5nZXRBVlN0cmVhbXMoJCk7c2VsZi5wb3N0TWVzc2FnZSh7dHlwZTpYLkdldEFWU3RyZWFtcyxtc2dJZDpPLHJlc3VsdDp1fSx1Lm1hcChqPT5qLmV4dHJhZGF0YS5idWZmZXIpKX1mdW5jdGlvbiBidChrLE8pe2NvbnN0e3NvdXJjZTokfT1rLHU9dGUuZ2V0TWVkaWFJbmZvKCQpO3NlbGYucG9zdE1lc3NhZ2Uoe3R5cGU6WC5HZXRNZWRpYUluZm8sbXNnSWQ6TyxyZXN1bHQ6dX0sdS5zdHJlYW1zLm1hcChqPT5qLmV4dHJhZGF0YS5idWZmZXIpKX1mdW5jdGlvbiBQdChrLE8pe2NvbnN0e3NvdXJjZTokLHRpbWU6dSxzdHJlYW1UeXBlOmosc3RyZWFtSW5kZXg6VyxzZWVrRmxhZzppZX09ayxvZT10ZS5nZXRBVlBhY2tldCgkLHUsaixXLGllKTtzZWxmLnBvc3RNZXNzYWdlKHt0eXBlOlguR2V0QVZQYWNrZXQsbXNnSWQ6TyxyZXN1bHQ6b2V9LFtvZS5kYXRhLmJ1ZmZlcl0pfWZ1bmN0aW9uIEN0KGssTyl7Y29uc3R7c291cmNlOiQsdGltZTp1LHNlZWtGbGFnOmp9PWssVz10ZS5nZXRBVlBhY2tldHMoJCx1LGopO3NlbGYucG9zdE1lc3NhZ2Uoe3R5cGU6WC5HZXRBVlBhY2tldHMsbXNnSWQ6TyxyZXN1bHQ6V30sVy5tYXAoaWU9PmllLmRhdGEuYnVmZmVyKSl9YXN5bmMgZnVuY3Rpb24gQXQoayxPKXtjb25zdHtzb3VyY2U6JCxzdGFydDp1LGVuZDpqLHN0cmVhbVR5cGU6VyxzdHJlYW1JbmRleDppZSxzZWVrRmxhZzpvZX09ayxUZT1hd2FpdCB0ZS5yZWFkQVZQYWNrZXQoTywkLHUsaixXLGllLG9lKTtzZWxmLnBvc3RNZXNzYWdlKHt0eXBlOlguUmVhZEFWUGFja2V0LG1zZ0lkOk8scmVzdWx0OlRlfSl9ZnVuY3Rpb24gRHQoayxPKXtjb25zdHtsZXZlbDokfT1rO3RlLnNldEFWTG9nTGV2ZWwoJCksc2VsZi5wb3N0TWVzc2FnZSh7dHlwZToiU2V0QVZMb2dMZXZlbCIsbXNnSWQ6T30pfX0pKCk7Cg==",I=typeof window<"u"&&window.Blob&&new Blob([(h=i,Uint8Array.from(atob(h),(l=>l.charCodeAt(0))))],{type:"text/javascript;charset=utf-8"});var h;function L(l){let Z;try{if(Z=I&&(window.URL||window.webkitURL).createObjectURL(I),!Z)throw"";const b=new Worker(Z,{name:null==l?void 0:l.name});return b.addEventListener("error",(()=>{(window.URL||window.webkitURL).revokeObjectURL(Z)})),b}catch{return new Worker("data:text/javascript;base64,"+i,{name:null==l?void 0:l.name})}finally{Z&&(window.URL||window.webkitURL).revokeObjectURL(Z)}}const Y=1e6;class u{constructor(l){Z(this,"wasmWorker"),Z(this,"wasmWorkerLoadStatus"),Z(this,"msgId"),Z(this,"source"),this.wasmWorker=new L({name:"web-demuxer"}),this.wasmWorkerLoadStatus=new Promise(((Z,b)=>{this.wasmWorker.addEventListener("message",(c=>{const{type:d,errMsg:G}=c.data;d===m.WasmWorkerLoaded&&this.post(m.LoadWASM,{wasmFilePath:null==l?void 0:l.wasmFilePath}),d===m.WASMRuntimeInitialized&&Z(),d===m.LoadWASM&&G&&b(G)}))})),this.msgId=0}post(l,Z,b){this.wasmWorker.postMessage({type:l,msgId:b??this.msgId++,data:Z})}getFromWorker(l,Z){return new Promise(((b,c)=>{if(!this.source)return void c("source is not loaded. call load() first");const d=this.msgId,m=Z=>{let{data:G}=Z;G.type===l&&G.msgId===d&&(G.errMsg?c(G.errMsg):b(G.result),this.wasmWorker.removeEventListener("message",m))};this.wasmWorker.addEventListener("message",m),this.post(l,Z,d)}))}async load(l){await this.wasmWorkerLoadStatus,this.source=l}destroy(){this.source=void 0,this.wasmWorker.terminate()}getMediaInfo(){return this.getFromWorker(m.GetMediaInfo,{source:this.source})}getAVStream(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:b.AVMEDIA_TYPE_VIDEO,Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return this.getFromWorker(m.GetAVStream,{source:this.source,streamType:l,streamIndex:Z})}getAVStreams(){return this.getFromWorker(m.GetAVStreams,{source:this.source})}getAVPacket(l){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b.AVMEDIA_TYPE_VIDEO,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:d.AVSEEK_FLAG_BACKWARD;return this.getFromWorker(m.GetAVPacket,{source:this.source,time:l,streamType:Z,streamIndex:c,seekFlag:G})}getAVPackets(l){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:d.AVSEEK_FLAG_BACKWARD;return this.getFromWorker(m.GetAVPackets,{source:this.source,time:l,seekFlag:Z})}readAVPacket(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:b.AVMEDIA_TYPE_VIDEO,G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:d.AVSEEK_FLAG_BACKWARD;const y=new CountQueuingStrategy({highWaterMark:1}),W=this.msgId;let V,i,I=0;return new ReadableStream({start:b=>{this.source?(V=l=>{const Z=l.data;Z.type===m.ReadAVPacket&&Z.msgId===W&&Z.errMsg&&(b.error(Z.errMsg),this.wasmWorker.removeEventListener("message",V)),Z.type===m.AVPacketStream&&Z.msgId===W&&(Z.result&&!i?b.enqueue(Z.result):(this.wasmWorker.removeEventListener("message",V),i?i():b.close()))},this.wasmWorker.addEventListener("message",V),this.post(m.ReadAVPacket,{source:this.source,start:l,end:Z,streamType:c,streamIndex:G,seekFlag:X})):b.error("source is not loaded. call load() first")},pull:()=>{I>0&&this.post(m.ReadNextAVPacket,void 0,W),I++},cancel:()=>new Promise((l=>{i=l,this.post(m.StopReadAVPacket,void 0,W)}))},y)}setLogLevel(l){return this.getFromWorker(m.SetAVLogLevel,{level:l})}getMediaStream(l,Z){return this.getAVStream(V[l],Z)}seekMediaPacket(l,Z,b){return this.getAVPacket(Z,V[l],void 0,b)}readMediaPacket(l,Z,b,c){return this.readAVPacket(Z,b,V[l],void 0,c)}genDecoderConfig(l,Z){var b,c;return l===W?{codec:Z.codec_string,codedWidth:Z.width,codedHeight:Z.height,description:(null==(b=Z.extradata)?void 0:b.length)>0?Z.extradata:void 0}:{codec:Z.codec_string||"",sampleRate:Z.sample_rate,numberOfChannels:Z.channels,description:(null==(c=Z.extradata)?void 0:c.length)>0?Z.extradata:void 0}}genEncodedChunk(l,Z){const b={type:1===Z.keyframe?"key":"delta",timestamp:Z.timestamp*Y,duration:Z.duration*Y,data:Z.data};return l===W?new EncodedVideoChunk(b):new EncodedAudioChunk(b)}getDecoderConfig(l){return this.getMediaStream(l).then((Z=>this.genDecoderConfig(l,Z)))}seek(l,Z,b){return this.seekMediaPacket(l,Z,b).then((Z=>this.genEncodedChunk(l,Z)))}read(l,Z,b,c){return this.readMediaPacket(l,Z,b,c).pipeThrough(new TransformStream({transform:(Z,b)=>{const c=this.genEncodedChunk(l,Z);b.enqueue(c)}}))}}export{c as AVLogLevel,b as AVMediaType,d as AVSeekFlag,u as WebDemuxer};export default null;
//# sourceMappingURL=/sm/875d69cad4422858655efeed3fb29dcf1c0a6d12db1f250d8f9bcdcacfe179d7.map
